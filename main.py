# -*- coding: utf-8 -*-
import json
import logging
import random
import re
from datetime import datetime, date, time
from pathlib import Path

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ChatMemberHandler,
    ConversationHandler, ContextTypes, filters
)

# ===================== –ù–ê–°–¢–†–û–ô–ö–ò =====================
TOKEN = "8215387975:AAHS_mMHzXBGtDVevEBiSwsLcLPChs7Yq7k"
CHAT_ID = -1001849339863
DATA_FILE = Path("data.json")

logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    level=logging.INFO
)
logger = logging.getLogger("OnlyGirlsBot")

# ===================== –•–†–ê–ù–ò–õ–ò–©–ï =====================
state = {
    "users": {},            # { user_id(str): {...} }
    "known_users": [],      # [int, ...]
    "last_lesbi_date": None,
    "last_lesbi_pair": None
}

def load_state():
    if DATA_FILE.exists():
        try:
            data = json.loads(DATA_FILE.read_text(encoding="utf-8"))
            state.update(data)
            for suid, u in state.get("users", {}).items():
                u.setdefault("name", "")
                u.setdefault("username", "")
                u.setdefault("nickname", "")
                u.setdefault("uid", "")
                u.setdefault("bday", "")
                u.setdefault("city", "")
                u.setdefault("tiktok", "")
                u.setdefault("joined_date", "")
                u.setdefault("quote", "")
                u.setdefault("pipisa", 0.0)
                u.setdefault("pipisa_power", 0)
                u.setdefault("last_pipisa", None)
                u.setdefault("last_prediction", None)
                u.setdefault("last_duel_date", None)
                u.setdefault("duel_uses", 0)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å data.json: {e}")

def save_state():
    try:
        DATA_FILE.write_text(json.dumps(state, ensure_ascii=False, indent=2), encoding="utf-8")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è data.json: {e}")

load_state()

# ===================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï =====================
def today_str() -> str:
    return date.today().isoformat()

def ensure_user(user_id: int):
    suid = str(user_id)
    if suid not in state["users"]:
        state["users"][suid] = {
            "name": "",
            "username": "",
            "nickname": "",
            "uid": "",
            "bday": "",
            "city": "",
            "tiktok": "",
            "joined_date": "",
            "quote": "",
            "pipisa": 0.0,
            "pipisa_power": 0,
            "last_pipisa": None,
            "last_prediction": None,
            "last_duel_date": None,
            "duel_uses": 0,
        }
    if user_id not in state.get("known_users", []):
        state["known_users"].append(user_id)

def tg_link_from_id(user_id: int, text: str = "–¥–µ–≤–æ—á–∫–∞") -> str:
    return f'<a href="tg://user?id={user_id}">{text}</a>'

def display_user(user_id: int) -> str:
    u = state["users"].get(str(user_id))
    if u:
        if u.get("name"):
            return u["name"]
        if u.get("username"):
            return f"@{u['username']}"
    return tg_link_from_id(user_id, "–¥–µ–≤–æ—á–∫–∞")

def is_url(s: str) -> bool:
    return s.startswith("http://") or s.startswith("https://")

def find_user_id_by_username(username: str):
    username = username.lower().lstrip("@")
    for suid, u in state["users"].items():
        if u.get("username") and u["username"].lower() == username:
            return int(suid)
    return None

def store_user(user):
    if not user:
        return
    ensure_user(user.id)
    u = state["users"][str(user.id)]
    u["name"] = user.mention_html()
    if user.username:
        u["username"] = user.username
    save_state()

# —É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ —ç–º–æ–¥–∑–∏
_EMOJI_SPACE_FIX_RE = re.compile(r' (?=[\u2600-\u27BF\U0001F300-\U0001FAFF])')
def emo(s: str) -> str:
    return _EMOJI_SPACE_FIX_RE.sub("", s)

# ===================== –ö–õ–ê–í–ê =====================
MAIN_KB = ReplyKeyboardMarkup(
    [
        ["üå± /pipisa", "üîÆ /predskaz", "üíê /compliment"],
        ["ü§ó /hugs", "üåà /lesbi", "üè∑Ô∏è /role"],
        ["‚öîÔ∏è /duel", "üèÜ /top5", "üìä /rating"],
        ["üë§ /profile", "‚úèÔ∏è /editprofile"],
        ["üìú /rules", "‚ÑπÔ∏è /info", "üôà /hide"]
    ],
    resize_keyboard=True
)

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo("–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æüíñ"), reply_markup=MAIN_KB)

async def hide(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo("–°–ø—Ä—è—Ç–∞–ª–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—Éüôà"), reply_markup=ReplyKeyboardRemove())

# ===================== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï/–ü–†–û–©–ê–ù–ò–ï =====================
async def greet_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cmu = update.chat_member
    if not cmu:
        return
    old = cmu.old_chat_member.status
    new = cmu.new_chat_member.status
    if (old in ("left", "kicked")) and (new in ("member", "administrator", "creator")):
        user = cmu.new_chat_member.user
        store_user(user)
        text = (
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.mention_html()}‚ù£Ô∏è"
            f' –û–∑–Ω–∞–∫–æ–º—å—Å—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞'
            f' (<a href="https://telegra.ph/Pravila-klana-%E0%A6%90OnlyGirls%E0%A6%90-05-29">–∑–¥–µ—Å—å</a>)ü´∂'
            f" –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ‚ùóÔ∏è –ö–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞: ‡¶î"
        )
        await context.bot.send_message(chat_id=cmu.chat.id, text=emo(text), parse_mode="HTML")

async def farewell_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cmu = update.chat_member
    if not cmu:
        return
    old = cmu.old_chat_member.status
    new = cmu.new_chat_member.status
    if (old in ("member", "administrator", "creator")) and (new in ("left", "kicked")):
        user = cmu.old_chat_member.user
        store_user(user)
        text = f"{display_user(user.id)} –ø–æ–∫–∏–Ω—É–ª–∞ —á–∞—Ç, –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—åüíî"
        await context.bot.send_message(chat_id=cmu.chat.id, text=emo(text), parse_mode="HTML")

# –ø–æ —Å–µ—Ä–≤–∏—Å-—Å–æ–æ–±—â–µ–Ω–∏—è–º (–Ω–∞–¥—ë–∂–Ω–µ–µ)
async def welcome_new_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.new_chat_members:
        return
    for m in update.message.new_chat_members:
        store_user(m)
        text = (
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {m.mention_html()}‚ù£Ô∏è"
            f' –û–∑–Ω–∞–∫–æ–º—å—Å—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞'
            f' (<a href="https://telegra.ph/Pravila-klana-%E0%A6%90OnlyGirls%E0%A6%90-05-29">–∑–¥–µ—Å—å</a>)ü´∂'
            f" –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ‚ùóÔ∏è –ö–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞: ‡¶î"
        )
        await context.bot.send_message(chat_id=update.effective_chat.id, text=emo(text), parse_mode="HTML")

async def goodbye_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.left_chat_member:
        return
    u = update.message.left_chat_member
    store_user(u)
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=emo(f"{display_user(u.id)} –ø–æ–∫–∏–Ω—É–ª–∞ —á–∞—Ç, –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—åüíî"),
        parse_mode="HTML"
    )

# ===================== /START –∏ /ABOUT =====================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(
        emo("–ü—Ä–∏–≤–µ—Ç!–Ø ‚Äî –ú–∞—Ç—å –ë–æ–≥–∏–Ω—å –¥–ª—è –∫–ª–∞–Ω–∞ OnlyGirlsüíñ –ù–∞–ø–∏—à–∏ /about —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã."),
        reply_markup=MAIN_KB
    )

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo(
        "‚ú® –ö–æ–º–∞–Ω–¥—ã:\n"
        "/menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É\n"
        "/editprofile ‚Äî –∑–∞–ø–æ–ª–Ω–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å(–ø–æ—à–∞–≥–æ–≤–æ)\n"
        "/profile ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/pipisa ‚Äî –≤—ã—Ä–∞—Å—Ç–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å –ø–∏–ø–∏—Å—É(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å, –º–∏–Ω–∏–º—É–º ‚àí50 —Å–º)\n"
        "/duel @—é–∑–µ—Ä ‚Äî –¥—É—ç–ª—å –ø–∏–ø–∏—Å(–¥–æ 3 –≤ –¥–µ–Ω—å, —Å–∏–ª–∞ —Ä–∞—Å—Ç—ë—Ç)\n"
        "/top5 ‚Äî —Ç–æ–ø-5 –ø–æ –ø–∏–ø–∏—Å–µ\n"
        "/rating ‚Äî –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å\n"
        "/predskaz ‚Äî –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–Ω—è(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/compliment [@—é–∑–µ—Ä] ‚Äî –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ç–µ–±–µ/—É–∫–∞–∑–∞–Ω–Ω–æ–π\n"
        "/hugs [@—é–∑–µ—Ä] ‚Äî –æ–±–Ω–∏–º–∞—à–∫–∏(–¥–ª—è –≤—Å–µ—Ö/—É–∫–∞–∑–∞–Ω–Ω–æ–π)\n"
        "/lesbi ‚Äî –ª–µ—Å–±–∏-–ø–∞—Ä–∞ –¥–Ω—è(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/role [@—é–∑–µ—Ä] ‚Äî ¬´–∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Å–∞–º–∞—è‚Ä¶¬ª\n"
        "/rules ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞(—Å—Å—ã–ª–∫–∞)\n"
        "/info ‚Äî –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–∞(—Å—Å—ã–ª–∫–∞)\n"
        "/hide ‚Äî —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"
    ))

# ===================== /RULES –∏ /INFO =====================
async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(
        emo('–ö–æ—Ç–∏–∫, –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞ <a href="https://telegra.ph/Pravila-klana-%E0%A6%90OnlyGirls%E0%A6%90-05-29">–∑–¥–µ—Å—å</a>ü´∂'),
        parse_mode="HTML"
    )

async def info_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    text = '<a href="https://telegra.ph/Aktualnaya-informaciya-08-21">–ó–¥–µ—Å—å</a> –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω—É, –∫–∞—Å—Ç–æ–º–∫–∞–º –∏ —Ç.–¥üñ§'
    await update.message.reply_text(emo(text), parse_mode="HTML", disable_web_page_preview=True)

# ===================== –ü–†–û–§–ò–õ–¨ =====================
(
    STEP_NAME,
    STEP_NICK,
    STEP_UID,
    STEP_BDAY,
    STEP_CITY,
    STEP_TIKTOK,
    STEP_QUOTE
) = range(7)

def render_profile(u: dict) -> str:
    name = u.get("name") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    nickname = u.get("nickname") or ""
    uid = u.get("uid") or ""
    bday = u.get("bday") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    city = u.get("city") or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    tiktok = u.get("tiktok") or ""
    quote = u.get("quote") or "‚Äî"
    pipisa = float(u.get("pipisa") or 0.0)
    if tiktok:
        if is_url(tiktok):
            tt_line = f'üì≤ TikTok: <a href="{tiktok}">TikTok</a>'
        else:
            at = tiktok if tiktok.startswith("@") else f"@{tiktok}"
            tt_line = f"üì≤ TikTok: {at}"
    else:
        tt_line = "üì≤ TikTok: –Ω–µ —É–∫–∞–∑–∞–Ω"
    text = (
        f"üôã‚Äç‚ôÄÔ∏è –ò–º—è: {name}\n"
        f"üéÆ –ù–∏–∫ –≤ –∏–≥—Ä–µ: <code>{nickname}</code>\n"
        f"üî¢ UID: <code>{uid}</code>\n"
        f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {bday}\n"
        f"üèô –ì–æ—Ä–æ–¥: {city}\n"
        f"{tt_line}\n"
        f"üçÜ –ü–∏–ø–∏—Å–∞: {pipisa:.1f} —Å–º\n"
        f"üìù –î–µ–≤–∏–∑: {quote}"
    )
    return text

async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"].get(uid)
    await update.message.reply_text(emo(render_profile(u)), parse_mode="HTML")

async def editprofile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    ensure_user(update.effective_user.id)
    context.user_data["profile_answers"] = {}
    await update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\n(–∏–º—è)")
    return STEP_NAME

async def step_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["name"] = update.effective_user.mention_html()
    await update.message.reply_text("–ö–∞–∫–æ–π —É —Ç–µ–±—è –Ω–∏–∫ –≤ –∏–≥—Ä–µ?")
    return STEP_NICK

async def step_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["nickname"] = update.message.text.strip()
    await update.message.reply_text("–ö–∞–∫–æ–π —É —Ç–µ–±—è UID?")
    return STEP_UID

async def step_uid(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["uid"] = update.message.text.strip()
    await update.message.reply_text("–ö–æ–≥–¥–∞ —É —Ç–µ–±—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è?\n(–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2000 –∏–ª–∏ 01.01)")
    return STEP_BDAY

async def step_bday(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["bday"] = update.message.text.strip()
    await update.message.reply_text("–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?")
    return STEP_CITY

async def step_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["city"] = update.message.text.strip()
    await update.message.reply_text("–û—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–≤–æ–π –Ω–∏–∫\n(@username):")
    return STEP_TIKTOK

async def step_tiktok(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["tiktok"] = update.message.text.strip()
    await update.message.reply_text("–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –¥–µ–≤–∏–∑–æ–º –∏–ª–∏ –ª—é–±–∏–º–æ–π —Ü–∏—Ç–∞—Ç–æ–π:")
    return STEP_QUOTE

async def step_quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["quote"] = update.message.text.strip()
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    stored = state["users"][uid]
    for k, v in context.user_data["profile_answers"].items():
        stored[k] = v
    if not stored.get("joined_date"):
        stored["joined_date"] = today_str()
    stored["username"] = (update.effective_user.username or "").lower()
    save_state()
    await update.message.reply_text("–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω ‚úÖ")
    return ConversationHandler.END

# ===================== –ü–ò–ü–ò–°–ê =====================
PIPISA_UP_REACTIONS = [
    "–û–Ω–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –≤–µ—Ä—à–∏–Ω–∞–º!üìà",
    "–í–ø–µ—Ä–µ–¥ –∏ –≤—ã—à–µ ‚Äî –≥–æ—Ä–¥–∏–º—Å—è!ü•≥",
    "–¢–∞–∫ —Ä–∞—Å—Ç—ë—Ç —Ç–æ–ª—å–∫–æ –ª–µ–≥–µ–Ω–¥–∞!üåü",
    "–°–∏—è–µ—Ç –∏ —Ä–∞–¥—É–µ—Ç —Ö–æ–∑—è–π–∫—É!‚ú®"
]
PIPISA_DOWN_REACTIONS = [
    "–ù–∏—á–µ–≥–æ, –∑–∞–≤—Ç—Ä–∞ –≤–µ—Ä–Ω—ë–º –ø–æ–∑–∏—Ü–∏–∏üí™",
    "–ò–Ω–æ–≥–¥–∞ –∏ –≥–µ—Ä–æ—è–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—ÖüåßÔ∏è",
    "–û–±–Ω–∏–º–µ–º ‚Äî –∏ –≤—Å—ë –ø—Ä–æ–π–¥—ë—Çü´Ç",
    "–°–º–µ–Ω–∏–º –≤–∞–π–± ‚Äî –ø–æ–π–¥—ë—Ç –≤–≤–µ—Ä—Öüåà"
]

def _rand_delta():
    d = round(random.uniform(-10.0, 10.0), 1)
    if abs(d) < 0.1:
        d = 0.1 if random.random() > 0.5 else -0.1
    return d

async def pipisa(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]
    u["username"] = (update.effective_user.username or "").lower()
    if u.get("last_pipisa") == today_str():
        await update.message.reply_text("–ü–∏–ø–∏—Å—É –º–æ–∂–Ω–æ —Ä–∞—Å—Ç–∏—Ç—å/–º–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å!üå±")
        return
    delta = _rand_delta()
    new_val = round(float(u.get("pipisa", 0.0)) + delta, 1)
    new_val = max(new_val, -50.0)
    u["pipisa"] = new_val
    u["last_pipisa"] = today_str()
    save_state()
    if delta > 0:
        phrase = random.choice([
            f"üçÜ –¢–≤–æ—è –ø–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ {delta:.1f} —Å–º!\n{random.choice(PIPISA_UP_REACTIONS)}\n–¢–µ–ø–µ—Ä—å: {new_val:.1f} —Å–º.",
            f"üçÜ –û–≥–æ! +{delta:.1f} —Å–º ‚Äî –≤–æ—Ç —ç—Ç–æ —Ä–æ—Å—Ç!\n{random.choice(PIPISA_UP_REACTIONS)}\n–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {new_val:.1f} —Å–º."
        ])
    else:
        phrase = random.choice([
            f"üçÜ –û—É‚Ä¶ –ø–∏–ø–∏—Å–∞ —É–º–µ–Ω—å—à–∏–ª–∞—Å—å –Ω–∞ {abs(delta):.1f} —Å–º.\n{random.choice(PIPISA_DOWN_REACTIONS)}\n–°–µ–π—á–∞—Å: {new_val:.1f} —Å–º.",
            f"üçÜ –ù–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Å–µ–ª–∞ ({abs(delta):.1f} —Å–º).\n{random.choice(PIPISA_DOWN_REACTIONS)}\n–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {new_val:.1f} —Å–º."
        ])
    await update.message.reply_text(emo(phrase), parse_mode="HTML")

# ===================== –î–£–≠–õ–¨ (–¥–æ 3/–¥–µ–Ω—å, —Å–∏–ª–∞) =====================
async def duel_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    me = update.effective_user
    ensure_user(me.id)
    state["users"][str(me.id)]["username"] = (me.username or "").lower()
    target_id = None
    if update.message and update.message.reply_to_message:
        target_id = update.message.reply_to_message.from_user.id
    elif context.args:
        arg = context.args[0].strip().lstrip("@")
        target_id = find_user_id_by_username(arg)
    if not target_id:
        await update.message.reply_text("–û—Ç–º–µ—Ç—å —Å–æ–ø–µ—Ä–Ω–∏—Ü—É: /duel @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –µ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /duel.")
        return
    if target_id == me.id:
        await update.message.reply_text("–° —Å–æ–±–æ–π –¥—É—ç–ª–∏—Ç—å—Å—è –Ω–µ–ª—å–∑—èüôÉ")
        return
    ensure_user(target_id)
    me_u = state["users"][str(me.id)]
    tg_u = state["users"][str(target_id)]
    if me_u.get("last_duel_date") != today_str():
        me_u["last_duel_date"] = today_str()
        me_u["duel_uses"] = 0
    if me_u["duel_uses"] >= 3:
        await update.message.reply_text("–¢—ã —É–∂–µ –ø—Ä–æ–≤–µ–ª–∞ 3 –¥—É—ç–ª–∏ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞üåô")
        return
    my_power = int(me_u.get("pipisa_power", 0))
    opp_power = int(tg_u.get("pipisa_power", 0))
    win_chance = 0.50 + 0.05 * (my_power - opp_power)
    win_chance = max(0.20, min(0.80, win_chance))
    amount = round(random.uniform(0.1, 3.0), 1)
    win = (random.random() < win_chance)
    me_size = float(me_u.get("pipisa", 0.0))
    tg_size = float(tg_u.get("pipisa", 0.0))
    if win:
        steal = min(amount, tg_size + 50.0)
        me_u["pipisa"] = round(me_size + steal, 1)
        tg_u["pipisa"] = round(tg_size - steal, 1)
        me_u["pipisa_power"] = me_u.get("pipisa_power", 0) + 2
        tg_u["pipisa_power"] = tg_u.get("pipisa_power", 0) + 1
        me_u["pipisa"] = max(me_u["pipisa"], -50.0)
        tg_u["pipisa"] = max(tg_u["pipisa"], -50.0)
        outcome = (
            f"‚öîÔ∏è {me.mention_html()} –ø–æ–±–µ–¥–∏–ª–∞ –≤ –¥—É—ç–ª–∏ —É {display_user(target_id)}!\n"
            f"üçÜ –ü–µ—Ä–µ—à–ª–æ {steal:.1f} —Å–º ‚Üí —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {me_u['pipisa']:.1f} —Å–º, —É —Å–æ–ø–µ—Ä–Ω–∏—Ü—ã {tg_u['pipisa']:.1f} —Å–º."
        )
        tail = random.choice(["–õ–µ–≥–µ–Ω–¥–∞ —É—Å–∏–ª–∏–ª–∞—Å—å!üí™","–°–∏–ª–∞ —Ä–∞—Å—Ç—ë—Ç ‚Äî –±–µ—Ä–µ–≥–∏—Ç–µ—Å—å!‚ú®","–û—á–µ–Ω—å –æ–ø–∞—Å–Ω–∞—è –±–æ–≥–∏–Ω—è‚Ä¶üëë"])
    else:
        steal = min(amount, me_size + 50.0)
        me_u["pipisa"] = round(me_size - steal, 1)
        tg_u["pipisa"] = round(tg_size + steal, 1)
        me_u["pipisa_power"] = me_u.get("pipisa_power", 0) + 1
        tg_u["pipisa_power"] = tg_u.get("pipisa_power", 0) + 2
        me_u["pipisa"] = max(me_u["pipisa"], -50.0)
        tg_u["pipisa"] = max(tg_u["pipisa"], -50.0)
        outcome = (
            f"‚öîÔ∏è {me.mention_html()} –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ –¥—É—ç–ª—å {display_user(target_id)}...\n"
            f"üçÜ –£—à–ª–æ {steal:.1f} —Å–º ‚Üí —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {me_u['pipisa']:.1f} —Å–º, —É —Å–æ–ø–µ—Ä–Ω–∏—Ü—ã {tg_u['pipisa']:.1f} —Å–º."
        )
        tail = random.choice(["–ù–∏—á–µ–≥–æ, –∑–∞–≤—Ç—Ä–∞ —Ä–µ–≤–∞–Ω—à!ü´∂","–û–±–Ω–∏–º–∞—à–∫–∏ –∏ –≤–ø–µ—Ä—ë–¥ –∫ –ø–æ–±–µ–¥–∞–ºü§ó","–û–ø—ã—Ç —Ç–æ–∂–µ —Å–∏–ª–∞!üåü"])
    me_u["duel_uses"] += 1
    save_state()
    await update.message.reply_text(emo(outcome + "\n" + tail), parse_mode="HTML")

# ===================== –†–ï–ô–¢–ò–ù–ì–ò =====================
async def top5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)[:5]
    if not rows:
        await update.message.reply_text("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µüå±")
        return
    text = "üèÜ –¢–û–ü-5 –ø–∏–ø–∏—Å –∫–ª–∞–Ω–∞:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or tg_link_from_id(int(uid), uid)}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(emo(text), parse_mode="HTML")

async def rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)
    if not rows:
        await update.message.reply_text("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µüå±")
        return
    text = "üìä –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or tg_link_from_id(int(uid), uid)}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== 200 –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô =====================
PREDICTIONS = [
    # 1‚Äì100 ‚Äî –∂–∏–∑–Ω—å/–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    "–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –æ–±–ª–∞—á–Ω–æ‚òÅÔ∏è","–£–ª—ã–±–∫–∞ —Ä–µ—à–∏—Ç –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—èüòä","–î–µ–ª–∞–π –ø–æ –ª—é–±–≤–∏ ‚Äî –∏ –±—É–¥–µ—Ç –∫–∞–π—Ñüíñ","–í—Å–µ–ª–µ–Ω–Ω–∞—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ‚ú®","–¢—ã –≤–∏–¥–∏—à—å –±–æ–ª—å—à–µ, —á–µ–º –¥—Ä—É–≥–∏–µ ‚Äî –¥–æ–≤–µ—Ä—å—Å—è —Å–µ–±–µüëÅÔ∏è","–ú–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ —Ç–æ–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥üë£","–°–ª—É—Ö–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Å–ª—É—Ö–∞–º–∏ ‚Äî –±—É–¥—å –≤—ã—à–µüïäÔ∏è","–ü—É—Å—Ç—å –¥—É—à–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç–∞–Ω—Ü—É–µ—ÇüíÉ","–¢—ã ‚Äî —á—å—ë-—Ç–æ ¬´–ø–æ–≤–µ–∑–ª–æ¬ªüçÄ","–°–∫–∞–∂–∏ —Å–µ–±–µ ¬´–º–æ–ª–æ–¥–µ—Ü¬ª ‚Äî —Ç—ã —ç—Ç–æ —É—Å–ª—ã—à–∏—à—åü•∞","–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äî —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ —Å–µ–≥–æ–¥–Ω—èüßò‚Äç‚ôÄÔ∏è","–í—ã–±–µ—Ä–∏ –¥–æ–±—Ä–æ—Ç—É ‚Äî —ç—Ç–æ –∑–∞–º–µ—Ç—è—Çüå∑","–ù–æ–≤–æ—Å—Ç—å –¥–Ω—è –±—É–¥–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ–πüì®","–ü–µ–π –≤–æ–¥—É –∏ —Å–∏—è–π –∫–∞–∫ –±—Ä–∏–ª–ª–∏–∞–Ω—Çüíé","–°–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏–∑–º–µ–Ω–∏—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µüåà","–¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è –ø—Ä–∞–≤–∞ ‚Äî –¥–æ–≤–µ—Ä—å—Å—è –µ–πüîÆ","–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –Ω–µ —Å–ø–µ—à–∏—Ç—å ‚Äî —Ä–∏—Ç–º –Ω–∞–π–¥—ë—Ç—Å—è —Å–∞–ºüéµ","–ü–æ–π–º–∞–π –ª—É—á —Å–æ–ª–Ω—Ü–∞ –∏ —É–ª—ã–±–Ω–∏—Å—å‚òÄÔ∏è","–ù–∞–¥–µ–Ω—å –ª—é–±–∏–º–æ–µ ‚Äî –º–∏—Ä –ø–æ–¥—ã–≥—Ä–∞–µ—Ç —Ç–µ–±–µüëó","–ö—Ç–æ-—Ç–æ —Ç–∞–π–Ω–æ —Ç–æ–±–æ–π –≤–æ—Å—Ö–∏—â–∞–µ—Ç—Å—èüëÄ","–°–∫–∞–∂–∏ ¬´–Ω–µ—Ç¬ª –ª–∏—à–Ω–µ–º—É ‚Äî –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å —Å–≤–æ–±–æ–¥—ÉüïäÔ∏è","–°–∫–∞–∂–∏ ¬´–¥–∞¬ª —Å–µ–±–µ ‚Äî –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å —Å–∏–ª—É‚ö°Ô∏è","–ù–∞–π–¥–∏ –∫—Ä–∞—Å–∏–≤–æ–µ –≤ –º–µ–ª–æ—á–∞—Ö ‚Äî –≤ —ç—Ç–æ–º –º–∞–≥–∏—è‚ú®","–°–¥–µ–ª–∞–π –ø–∞—É–∑—É ‚Äî –≤–¥–æ—Ö-–≤—ã–¥–æ—Ö –∏ –¥–∞–ª—å—à–µüå¨Ô∏è","–•–æ—Ä–æ—à–∞—è –º—ã—Å–ª—å –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è –∑–∞ —á–∞–µ–ºüçµ","–¢—ã –≤–∞–∂–Ω–∞ –¥–ª—è –ª—é–¥–µ–π –±–æ–ª—å—à–µ, —á–µ–º –¥—É–º–∞–µ—à—åüíû","–°–µ–≥–æ–¥–Ω—è –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–æ, —á—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∞‚úÖ","–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ ‚Äî –ø–æ–π–º–∞–µ—à—å –º–æ–º–µ–Ω—Ç –¥–Ω—èüì∏","–í—Å–ø–æ–º–Ω–∏ –º–µ—á—Ç—É –∏ –ø—Ä–∏–±–ª–∏–∑—å –µ—ë –Ω–∞ 1 —à–∞–≥üö∂‚Äç‚ôÄÔ∏è","–°–ª–æ–≤–∞ –¥–æ–±—Ä–æ—Ç—ã –≤–µ—Ä–Ω—É—Ç—Å—è —Ç–µ–±–µ —ç—Ö–æ–ºüì°","–£–±–∏—Ä–∞–π—Å—è –ø–æ–¥ –º—É–∑—ã–∫—É ‚Äî –∏ –º—ã—Å–ª–∏ —Ç–æ–∂–µ —Ä–∞–∑–ª–æ–∂–∞—Ç—Å—èüßπ","–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –ª—ë–≥–∫–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–πüîó","–¢—ã —Å–ª—ã—à–∏—à—å —Å–µ–±—è –≥—Ä–æ–º—á–µ, —á–µ–º —à—É–º –≤–æ–∫—Ä—É–≥üîä","–ü–æ–ª—é–±–∏ —Å–≤–æ–π —Ç–µ–º–ø ‚Äî –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π‚åõÔ∏è","–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ–¥–∫–∏–Ω–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–¥–µ—éüí°","–î–∞–π –º–µ—Å—Ç–æ —á—É–¥—É ‚Äî –æ–Ω–æ –ª—é–±–∏—Ç –ø—Ä–æ—Å—Ç–æ—Äüåå","–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏—Å—Ü–µ–ª—è–µ—Ç –¥—Ä—É–≥–∏—Öüåø","–°–¥–µ–ª–∞–π –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç—å –±–µ–∑ –ø–æ–≤–æ–¥–∞ ‚Äî –≤–µ—Ä–Ω—ë—Ç—Å—è —Å—Ç–æ—Ä–∏—Ü–µ–πüéÅ","–ù–∏—á–µ–≥–æ –Ω–µ —Å–ª–æ–º–∞–Ω–æ ‚Äî –≤—Å—ë –≤ –ø—Ä–æ—Ü–µ—Å—Å–µüõ†","–¢–≤–æ–∏ –¥–µ–ª–∞ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –∫–∞–∂–µ—Ç—Å—èüß≠","–î–µ–Ω—å —É–¥–∞—á–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ ‚Äî –≥–æ–≤–æ—Ä–∏ —á–µ—Å—Ç–Ω–æüí¨","–£–ª—ã–±–Ω–∏—Å—å –∑–µ—Ä–∫–∞–ª—É ‚Äî –æ–Ω–æ —Å–æ—é–∑–Ω–∏–∫ü™û","–î–æ–≤–µ—Ä—è–π —Ç–∏—Ö–∏–º —á—É–≤—Å—Ç–≤–∞–º ‚Äî –æ–Ω–∏ —Ç–æ—á–Ω—ãüéØ","–ö–æ—Ñ–µ —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ –≤–æ–ª—à–µ–±–Ω—ã–π‚òïÔ∏è","–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π ‚Äî —É —Ç–µ–±—è —Å–≤–æ—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—èüöÄ","–ú—É–∑—ã–∫–∞ –¥–Ω—è –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è —Å–∞–º–∞üéß","–°–ª–æ–≤–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä–æ—é—Ç –¥–≤–µ—Ä—åüö™","–ú—è–≥–∫–æ—Å—Ç—å ‚Äî –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å, –∞ —Å–∏–ª–∞ü§ç","–ù–µ —Ç—Ä–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–ø–æ—Ä—ãüôÖ‚Äç‚ôÄÔ∏è","–¢–µ–±—è –∂–¥—ë—Ç –º–∞–ª–µ–Ω—å–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å –≤ –ø—É—Ç–∏üõ§","–ó–∞–º–µ—Ç–∏—à—å –∑–Ω–∞–∫ ‚Äî –æ–Ω –¥–ª—è —Ç–µ–±—èü™Ñ","–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –∫–æ–º—É-—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞ü§ù","–°–ª—É—á–∞–π–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å–æ–≥—Ä–µ–µ—Ç —Å–µ—Ä–¥—Ü–µüî•","–ó–∞–ø—É—Å—Ç–∏ –º–∏–Ω–∏-—Ä–∏—Ç—É–∞–ª –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µüõÅ","–°–æ–Ω –ø–æ–¥—Å–∫–∞–∂–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—éüåô","–¢—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚Äî –ø—Ä—è–º–æ —Å–µ–π—á–∞—Åüí´","–ù–µ –±–æ–π—Å—è –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ ‚Äî —ç—Ç–æ –º—É–¥—Ä–æüß†","–°–¥–µ–ª–∞–π —à–∞–≥ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å ‚Äî —Ç–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æüó∫","–°–µ–≥–æ–¥–Ω—è –ª–µ–≥—á–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—åüéà","–¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–µ–≥–æ–¥–Ω—è –∫–æ–º—É-—Ç–æ —Å–ø–∞—Å—ë—Ç –¥–µ–Ω—åüõü","–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏ ‚Äî –∑–∞–º–µ—Ç–Ω–æ –≤—Å–µ–º‚≠êÔ∏è","–°–º–µ–Ω–∏ –æ–±–æ–∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ ‚Äî –≤–º–µ—Å—Ç–µ —Å–º–µ–Ω–∏—Ç—Å—è –≤–∞–π–±üì±","–†–∞–∑–≥—Ä—É–∑–∏ —Å—É–º–∫—É –∏ –≥–æ–ª–æ–≤—É ‚Äî —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µüéí","–õ—é–±–∏–º–æ–µ –±–ª—é–¥–æ –ø–æ–¥–∞—Ä–∏—Ç —Å–∏–ª—ãüç≤","–°–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –º—ã—Å–ª—å –ø—Ä–∏–¥—ë—Ç –≤ –¥–æ—Ä–æ–≥–µüöå","–¢—ã —É–º–µ–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–∏–∑–Ω–∞—ë—à—å—Å—è —Å–µ–±–µüèÖ","–°–ø–∏—Å–æ–∫ –¥–µ–ª —Å–æ–∫—Ä–∞—Ç–∏—Ç—Å—è —Å–∞–º ‚Äî –¥–æ–≤–µ—Ä—è–π –ø–æ—Ç–æ–∫—Éüåä","–û—Ç–ª–æ–∂–∏ —Ç—è–∂—ë–ª–æ–µ –¥–æ –∑–∞–≤—Ç—Ä–∞ ‚Äî —Å–µ–≥–æ–¥–Ω—è –ª–∞—Å–∫–∞üå∏","–°–ø—Ä—è—á—å—Å—è –≤ –ø–ª–µ–¥ ‚Äî –º–∏—Ä –ø–æ–¥–æ–∂–¥—ë—Çü´∂","–°–∫–∞–∂–∏ ¬´—Å–ø–∞—Å–∏–±–æ¬ª —Å–µ–±–µ ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æüéÄ","–°–µ–≥–æ–¥–Ω—è —Å–ª–æ–≤–∞ –ª–æ–∂–∞—Ç—Å—è –º—è–≥–∫–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –º—É–¥—Ä–æüìù","–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ –∑–Ω–∞–µ—Ç –¥–æ—Ä–æ–≥—É –¥–æ–º–æ–πüè°","–ß—É–¥–æ —É–∂–µ –≤—ã–µ—Ö–∞–ª–æ ‚Äî –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—åüö™","–î–µ–Ω—å –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–æ–±–µ–¥ ‚Äî —Å–æ–±–µ—Ä–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—éüèÜ","–¢—ã –º–∞–≥–Ω–∏—Ç –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–πüì©","–ú–∏—Ä –Ω–µ –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è ‚Äî –æ–Ω –∑–∞ —Ç–µ–±—èü§ç","–ñ–¥–∞—Ç—å –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ, —Å—Ç—Ä–∞—à–Ω–æ –Ω–µ –º–µ—á—Ç–∞—Ç—åüå†","–°–º–µ–ª–∞—è –º—ã—Å–ª—å –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è –ø–µ—Ä–≤–æ–πüóØ","–¢–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –¥–µ–≤–æ—á–∫–∞ —Ö–æ—á–µ—Ç –ø–µ—á–µ–Ω—å–∫—Éüç™","–¢—ã –ø—Ä–∏—á–∏–Ω–∞ —á—å–µ–π-—Ç–æ –Ω–∞–¥–µ–∂–¥—ã —Å–µ–≥–æ–¥–Ω—èüåü","–û–±–Ω–∏–º–∏ —Å–µ–±—è ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç —Ç–µ–ø–ª–µ–µü´Ç","–í–¥–æ—Ö –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç –∫–æ–≥–æ-—Ç–æ —Ä—è–¥–æ–ºüí®","–¢—ã –≤–∞–∂–Ω–µ–µ –¥–µ–¥–ª–∞–π–Ω–æ–≤‚ù§Ô∏è","–¢–∏—à–∏–Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ª–µ—á–∏—Ç –ª—É—á—à–µ —Å–ª–æ–≤ü§´","–£ —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–æ, —á—Ç–æ –∫–∞–∑–∞–ª–æ—Å—å —Å–ª–æ–∂–Ω—ã–ºüèî","–í—ã—Å—ã–ø–∞—Ç—å—Å—è ‚Äî —Ç–æ–∂–µ —É—Å–ø–µ—Öüò¥","–ó–∞–ø–∏—à–∏ –º–µ—á—Ç—É ‚Äî —Ç–∞–∫ –æ–Ω–∞ –±–ª–∏–∂–µüñäÔ∏è","–°–º–µ–π—Å—è —á–∞—â–µ ‚Äî —ç—Ç–æ –º–∞–≥–∏—èüòÇ","–¢–≤–æ–π –≥–æ–ª–æ—Å –≤–∞–∂–µ–Ω ‚Äî –≥–æ–≤–æ—Ä–∏ —á–µ—Å—Ç–Ω–æüéôÔ∏è","–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ 10 –º–∏–Ω—É—Ç –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞üìµ","–°–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –ø–æ–ª—é–±–∏—Ç —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—åüé≤","–†–∞–∑—Ä–µ—à–∏ —Å–µ–±–µ –æ—Ç–¥—ã—Ö –±–µ–∑ —á—É–≤—Å—Ç–≤–∞ –≤–∏–Ω—ãüõå","–°–∫–∞–∂–∏ ¬´—è –º–æ–≥—É¬ª ‚Äî –∏ –¥–µ–ª–∞–π –º–æ–∂–Ω–æ–µ‚ú®","–¢–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã ‚Äî —Å–≤—è—Ç–æ–µüõ°Ô∏è","–°—Ö–æ–¥–∏ –Ω–∞ —Å–≤–µ—Ç ‚Äî —Ç–∞–º –ª–µ–≥—á–µ‚òÄÔ∏è","–ö—Ä–∞—Å–∏–≤–æ–µ —Ä—è–¥–æ–º ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–≥–ª—è–Ω–∏—Å—åüëÄ","–° —Ç–æ–±–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ ‚Äî —ç—Ç–æ —Ü–µ–Ω—è—Çü´∂","–¢—ã –¥–æ—Å—Ç–æ–π–Ω–∞ –ª—É—á—à–µ–≥–æ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—éüëë","–õ–∞—Å–∫–æ–≤—ã–µ —Å–ª–æ–≤–∞ –∫ —Å–µ–±–µ ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã —Å–µ–≥–æ–¥–Ω—èüíó","–í–¥–æ—Ö–Ω–∏ –≥–ª—É–±–æ–∫–æ ‚Äî –º–∏—Ä –Ω–µ —Å–ø–µ—à–∏—Çüåç","–¢–≤–æ—è –º—è–≥–∫–æ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –º–∏—Ä –¥–æ–±—Ä–µ–µüß∏","–° —Ç–æ–±–æ–π –≤—Å—ë –æ–∫ ‚Äî –ø—Ä–∞–≤–¥–∞üëå",
    # 101‚Äì150 ‚Äî –∫—Ä–∞—Å–æ—Ç–∞/—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞
    "–ö—Ä–∞—Å–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–µ–±—èüòç","–¢–≤–æ—ë –ª–∏—Ü–æ –ª—é–±–∏—Ç –≤–æ–¥—É –∏ —Å–æ–Ω ‚Äî –ø–æ–±–∞–ª—É–π –µ–≥–æüíß","–¢–≤–æ–∏ –≥–ª–∞–∑–∞ —Å–∏—è—é—Ç –¥–∞–∂–µ –±–µ–∑ —Ö–∞–π–ª–∞–π—Ç–µ—Ä–∞‚ú®","–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –ª—É—á—à–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Äüíã","–¢–≤–æ—è –∫–æ–∂–∞ –ª—é–±–∏—Ç –Ω–µ–∂–Ω–æ—Å—Ç—å ‚Äî –±—É–¥—å –º—è–≥—á–µ —Å —Å–æ–±–æ–πü´ß","–ö—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞ –Ω–µ –º–∞–∫–∏—è–∂üé®","–¢—ã –∫—Ä–∞—Å–∏–≤–∞, –∫–æ–≥–¥–∞ –≤–µ—Ä–∏—à—å —Å–µ–±–µüíñ","–°–∞–º–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –≤ —Ç–µ–±–µ ‚Äî –∂–∏–≤–æ—Å—Ç—å –∏ –æ–≥–æ–Ω—åüî•","–¢–µ–±–µ –∏–¥—ë—Ç —Å–º–µ–ª–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—åüí´","–¢–≤–æ—è –ø–æ—Ö–æ–¥–∫–∞ ‚Äî –∫–∞–∫ –º—É–∑—ã–∫–∞, –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—èüé∂","–ü—É—Å—Ç—å –≤–æ–ª–æ—Å—ã —Å–µ–≥–æ–¥–Ω—è —Ç–∞–Ω—Ü—É—é—Ç ‚Äî –∏ —Ç—ã –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º–∏üíÉ","–ì—É–±—ã –ø–æ–º–Ω—è—Ç –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã ‚Äî —Å–∫–∞–∂–∏ –∏—Ö —Å–µ–±–µüíå","–ó–µ—Ä–∫–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π —Ñ–∞–Ω-–∫–ª—É–±üì£","–¢—ã —à–µ–¥–µ–≤—Ä –≤ –ª—é–±–æ–π –æ–¥–µ–∂–¥–µüñº","–¢–≤–æ–µ–º—É —Å—Ç–∏–ª—é –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–≤–æ–µ–≥–æ –≤–∫—É—Å–∞üëó","–ù–µ–∂–Ω–æ—Å—Ç—å ‚Äî —Ç–≤–æ–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö–∞–π–ª–∞–π—Ç–µ—Äüåü","–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π, —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–πüå∑","–ö–∞–∂–¥–∞—è —Ç–≤–æ—è —á–µ—Ä—Ç–∞ ‚Äî –∏—Å—Ç–æ—Ä–∏—è, –∞ –Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫üìö","–£–ª—ã–±–Ω–∏—Å—å –≥–ª–∞–∑–∞–º–∏ ‚Äî –º–∏—Ä —Ä–∞—Å—Ç–∞–µ—Çüßä","–¢–≤–æ–∏ —Ä—É–∫–∏ —Å–æ–∑–¥–∞—é—Ç —Ç–µ–ø–ª–æ ‚Äî –∏ —ç—Ç–æ –≤–∏–¥–Ω–æü§≤","–ö—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ –∫–∞–∫ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µü´∂","–õ—É—á–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –ª–µ—Ç—è—Ç –∫ —Ç–µ–±–µ ‚Äî –Ω–µ —É–≤–æ—Ä–∞—á–∏–≤–∞–π—Å—èüí´","–¢—ã —Å–∏—è–µ—à—å, –∫–æ–≥–¥–∞ —Å–ø–æ–∫–æ–π–Ω–∞üïäÔ∏è","–¢–µ–±–µ –∏–¥—ë—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –Ω–æ—Å–∏ –µ—ë, –∫–∞–∫ –∫–æ—Ä–æ–Ω—Éüëë","–¢–≤–æ–π —Å–º–µ—Ö ‚Äî —É–∫—Ä–∞—à–µ–Ω–∏–µ –¥–Ω—èüéÄ","–õ—ë–≥–∫–∏–π —Ä—É–º—è–Ω–µ—Ü —Å—á–∞—Å—Ç—å—è ‚Äî –ª—É—á—à–∏–π –º–∞–∫–∏—è–∂üå∫","–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –∫–∞–∫ –Ω–µ–∂–Ω–∞—è –ª–∏–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞üåÖ","–¢–µ–±–µ –∏–¥—ë—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—åüß©","–¢—ã ‚Äî —ç—Ç–∞–ª–æ–Ω –¥–ª—è —Å–∞–º–æ–π —Å–µ–±—èüèµ","–¢–≤–æ–∏ —Ä–µ—Å–Ω–∏—Ü—ã –¥–µ—Ä–∂–∞—Ç —Å–µ–∫—Ä–µ—Ç—ã –∑–≤—ë–∑–¥‚ú®","–ì—Ä–∞—Ü–∏—è –≤ –∫–∞–∂–¥–æ–º —Ç–≤–æ—ë–º –¥–≤–∏–∂–µ–Ω–∏–∏ü¶¢","–£ —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω–∞—è –¥–ª—è —Ç–µ–±—è —Ñ–∏–≥—É—Ä–∞üíñ","–¢–≤–æ–π –≤–∑–≥–ª—è–¥ —É–º–µ–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –≥—Ä–æ–º—á–µ —Å–ª–æ–≤üëÅÔ∏è","–í–æ–ª–æ—Å—ã –ª—é–±—è—Ç —Ç–≤–æ—ë –≤–Ω–∏–º–∞–Ω–∏–µ ‚Äî –¥–∞–π –∏–º –ª–∞—Å–∫—Éü™Æ","–ö—Ä–∞—Å–æ—Ç–∞ –≤ —Ç–≤–æ–µ–π –∑–∞–±–æ—Ç–µ –æ —Å–µ–±–µüå∑","–¢—ã ‚Äî —ç—Å—Ç–µ—Ç–∏–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ü™û","–¢—ã –Ω—Ä–∞–≤–∏—à—å—Å—è —Å–µ–±–µ ‚Äî –∏ —ç—Ç–æ –≤–∏–¥–Ω–æüåà","–¢–≤–æ—è –º–∏–º–∏–∫–∞ ‚Äî –∂–∏–≤–æ–ø–∏—Å—å —Ä–∞–¥–æ—Å—Ç–∏üé®","–ß–µ—Å—Ç–Ω–æ—Å—Ç—å —É–∫—Ä–∞—à–∞–µ—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –±–ª–∏–∫–æ–≤‚ú®","–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ ‚Äî –∏ —Ç–æ—á–∫–∞‚ù§Ô∏è","–¢–≤–æ—ë ¬´—è¬ª ‚Äî –≥–ª–∞–≤–Ω–∞—è –∏–∑—é–º–∏–Ω–∫–∞üçí","–¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî –ª—É—á—à–∏–π –ø–∞—Ä—Ñ—é–ºü´∂","–¢—ã –Ω–µ–∂–Ω–æ –∫—Ä–∞—Å–∏–≤–∞ –¥–∞–∂–µ –±–µ–∑ —É—Å–∏–ª–∏–πüå∏","–¢–≤–æ—è –æ—Å–∞–Ω–∫–∞ ‚Äî —Å—Ç–∏—Ö –æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–µüìú","–õ—é–±–æ–≤—å –∫ —Å–µ–±–µ –Ω–∞ —Ç–µ–±–µ —Å–∏–¥–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æü§ç","–¢—ã ‚Äî –∫–∞—Ä—Ç–∏–Ω–∫–∞ ¬´–¥–æ¬ª –∏ ¬´–ø–æ—Å–ª–µ¬ª –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æüåó","–¢—ã —É–º–µ–µ—à—å –±—ã—Ç—å —Ä–æ—Å–∫–æ—à–Ω–æ–π –±–µ–∑ –ø–æ–≤–æ–¥–∞üíé","–°–∏—è–π —Ç–∞–∫, –∫–∞–∫ —Ç–µ–±–µ —É–¥–æ–±–Ω–æüåü","–¢–≤–æ—è –º—è–≥–∫–æ—Å—Ç—å ‚Äî —ç—Ç–æ —Å—É–ø–µ—Ä–∫—Ä–∞—Å–∏–≤–æü§ç","–¢—ã ‚Äî —Å–∞–º–∞ —ç—Å—Ç–µ—Ç–∏–∫–∞ —É—Ç—Ä–∞‚òÄÔ∏è","–¢—ã ‚Äî —Ç–∞ —Å–∞–º–∞—è –¥–µ–≤–æ—á–∫–∞-–º—É–∑–∞üéª",
    # 151‚Äì200 ‚Äî –º–æ—Ç–∏–≤–∞—Ü–∏—è/—Å–∞–º–æ–º–æ—Ç–∏–≤–∞—Ü–∏—è
    "–ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ ‚Äî –≤–∞–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—åüö™","–°–¥–µ–ª–∞–π —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –æ–¥–∏–Ω —à–∞–≥ –±–æ–ª—å—à–µüèÉ‚Äç‚ôÄÔ∏è","–¢–≤–æ–∏ —Ü–µ–ª–∏ —Ä–µ–∞–ª—å–Ω—ã ‚Äî –ø—Ä–æ–≤–µ—Ä—å –¥–µ–π—Å—Ç–≤–∏–µ–º‚úÖ","–î–æ–≤–æ–¥–∏ –¥–æ –∫–æ–Ω—Ü–∞ ‚Äî —Ç–∞–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏üéä","–ü–ª–∞–Ω –Ω–∞ –æ–¥–∏–Ω —á–∞—Å —Ç–≤–æ—Ä–∏—Ç —á—É–¥–µ—Å–∞üóì","–°–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞–π, –ø–æ—Ç–æ–º —Å–æ–º–Ω–µ–≤–∞–π—Å—èü™Ñ","–ú–µ–Ω—è–π –ø–æ 1% –≤ –¥–µ–Ω—å ‚Äî –∏ –≥–æ—Ä—ã –ø–æ–¥–≤–∏–Ω—É—Ç—Å—è‚õ∞Ô∏è","–°–ø—Ä–æ—Å–∏ —Å–µ–±—è: —á—Ç–æ —è –º–æ–≥—É —Å–µ–π—á–∞—Å?üîß","–°–æ–º–Ω–µ–Ω–∏—è —à—É–º—è—Ç, –Ω–æ —Ä—É–ª—è—Ç –¥–µ–π—Å—Ç–≤–∏—èüöó","–†–µ—Å—É—Ä—Å –≤–∞–∂–Ω–µ–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ ‚Äî –±–µ—Ä–µ–≥–∏ —Å–µ–±—èüß°","–°–¥–µ–ª–∞–π —á–µ—Ä–Ω–æ–≤–∏–∫ ‚Äî —ç—Ç–æ —É–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ‚úçÔ∏è","–ü—Ä–æ–≥—Ä–µ—Å—Å > –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–ºüìà","–†–∞–∑—Ä–µ—à–∏ —Å–µ–±–µ –¥–µ–ª–∞—Ç—å –Ω–µ–∏–¥–µ–∞–ª—å–Ω–æüëå","–í—ã–±–∏—Ä–∞–π –ø—Ä–æ—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚Äî –∏ –≤–ø–µ—Ä—ë–¥‚û°Ô∏è","–†–∞—Å—Å—Ç–∞–≤—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µüß≠","–°–æ–±–µ—Ä–∏ —Å–µ–±—è –ª–∞—Å–∫–æ–≤–æ –∏ –Ω–∞—á–Ω–∏üß©","–ù–∞–≥—Ä–∞–¥–∏ —Å–µ–±—è –∑–∞ –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥üç´","–î–≤–∏–≥–∞–π—Å—è —Ç–∏—Ö–æ, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–æüîÅ","–°–ø—Ä–æ—Å–∏ –æ –ø–æ–º–æ—â–∏ ‚Äî —ç—Ç–æ —É—Å–∫–æ—Ä—è–µ—Çü§ù","–û—Ç–∫–∞–∑ ‚Äî —Ç–æ–∂–µ –æ–ø—ã—Ç, –∞ –æ–ø—ã—Ç ‚Äî —Å–∏–ª–∞üß†","–î–µ–ª–∞–π —Ç–æ, —á—Ç–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—à—å, –∏ –æ—Ç–ø—É—Å—Ç–∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µüå¨Ô∏è","–°–º–µ–Ω–∞ —Ñ–æ–∫—É—Å–∞ ‚Äî –Ω–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—ÇüéØ","–ó–∞–ø–ª–∞–Ω–∏—Ä—É–π –æ—Ç–¥—ã—Ö —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∑–∞–¥–∞—á–∏üõè","–°–æ—Ö—Ä–∞–Ω—è–π —Ä–∏—Ç–º ‚Äî —Ç–µ–º–ø –ø—Ä–∏–¥—ë—Ç —Å–∞–ºü•Å","–ì–æ—Ç–æ–≤—å—Å—è –º–µ–Ω—å—à–µ, –¥–µ–ª–∞–π –±–æ–ª—å—à–µ‚öôÔ∏è","–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–æ–≥–æ–Ω–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µüèÉ‚Äç‚ôÄÔ∏è","–¢–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç –±—É–¥—É—â–µ–µüß±","–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å —á—å–∏–º-—Ç–æ —Å–æ—Ç—ã–ºüìä","–û—Ç–º–µ—á–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –∞ –Ω–µ –æ—à–∏–±–∫–∏üìå","–ù–µ—Ä–∞–∑–±–∏–≤–∞–µ–º—ã–µ –¥–µ–¥–ª–∞–π–Ω—ã ‚Äî –º—è–≥–∫–∏–µ, –Ω–æ —Ä–µ–∞–ª—å–Ω—ã–µüßµ","–¢–≤–æ—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ ‚Äî –Ω–µ–∂–Ω–∞—è, –∞ –Ω–µ –∂–µ—Å—Ç–æ–∫–∞—èü´∂","–ü–ª–∞–Ω B ‚Äî –Ω–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ, –∞ –º—É–¥—Ä–æ—Å—Ç—åüß†","–¢–µ–±–µ –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è —Å–∏–ª—å–Ω–µ–µüí™","–°–¥–µ–ª–∞–π ¬´–º–∏–∫—Ä–æ-–¥–µ–ª–æ¬ª –ø—Ä—è–º–æ —Å–µ–π—á–∞—Åüïê","–°—Ç—Ä–∞—Ö —É–π–¥—ë—Ç, –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏—Ç —Ç–µ–±—è –≤ –¥–µ–ª–µü¶Å","–î–∞–∂–µ 10 –º–∏–Ω—É—Ç ‚Äî –≤–∫–ª–∞–¥ –≤ –º–µ—á—Ç—É‚è±","–°–æ—Ö—Ä–∞–Ω—è–π –æ–±–µ—â–∞–Ω–∏—è —Å–µ–±–µ ‚Äî —ç—Ç–æ —É–≤–∞–∂–µ–Ω–∏–µü§ç","–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µüë£","–ú–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞ ‚Äî —Ç–æ–ø–ª–∏–≤–æ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π‚õΩÔ∏è","–î–æ–±–∞–≤—å –∏–≥—Ä—ã –≤ –∑–∞–¥–∞—á—É ‚Äî –±—É–¥–µ—Ç –ª–µ–≥—á–µüéÆ","–°–æ–º–Ω–µ–Ω–∏—è ‚Äî —à—É–º, —Ç–≤–æ—è —Ü–µ–ª—å ‚Äî –º—É–∑—ã–∫–∞üéß","–ó–∞–ø–∏—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å ‚Äî –∏ –¥–µ–π—Å—Ç–≤—É–πüñäÔ∏è","–ï—Å–ª–∏ —Ç—è–∂–µ–ª–æ ‚Äî —Å–Ω–∏–∑—å —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏üîΩ","–¢–≤–æ—è —Å—Ç–æ–π–∫–æ—Å—Ç—å –º—è–≥–∫–∞—è, –Ω–æ —É–ø—Ä—è–º–∞—èüå±","–ü–∞—É–∑—ã ‚Äî —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞, –Ω–µ —Å–¥–∞–≤–∞–π—Å—è‚è∏","–ù–µ –±–æ–π—Å—è –º–µ–Ω—è—Ç—å –ø–ª–∞–Ω, –µ—Å–ª–∏ –º–µ–Ω—è–µ—à—å—Å—è —Ç—ãüîÅ","–¢—ã ‚Äî —Å–∏—Å—Ç–µ–º–∞, –∞ –Ω–µ –æ–¥–Ω–æ —Å–æ–±—ã—Ç–∏–µüß©","–°–æ—Ö—Ä–∞–Ω—è–π –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ ‚Äî –æ–Ω–æ –≤–µ–¥—ë—Ç –¥–∞–ª—å—à–µüîé","–ù–∞—á–Ω–∏ ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚û°Ô∏è","–ë—É–¥—å —Ç–µ—Ä–ø–µ–ª–∏–≤–∞ –∫ —Å–µ–±–µ ‚Äî –ø—É—Ç—å –¥–æ–ª–≥–∏–π, –Ω–æ —Ç–≤–æ–πüõ§"
]

async def predskaz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]
    if u.get("last_prediction") == today_str():
        await update.message.reply_text("üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —Å–µ–≥–æ–¥–Ω—è!")
        return
    u["last_prediction"] = today_str()
    save_state()
    text = f"üîÆ {random.choice(PREDICTIONS)}"
    await update.message.reply_text(emo(text))

# ===================== –ö–û–ú–ü–õ–ò–ú–ï–ù–¢–´ =====================
COMPLIMENTS = [
    "–¢—ã –∫–∞–∫ —Å–æ–ª–Ω–µ—á–Ω—ã–π –ª—É—á ‚Äî —Ç–µ–ø–ª–µ–µ —Å —Ç–æ–±–æ–π‚òÄÔ∏è","–¢–≤–æ–π —Å–º–µ—Ö –ª–µ—á–∏—Ç –ª—É—á—à–µ —Ç–∞–±–ª–µ—Ç–æ–∫üòÇ","–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–πü§ç",
    "–¢—ã —É–º–µ–µ—à—å –∫—Ä–∞—Å–∏–≤–æ –∂–∏—Ç—å –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—åüå∑","–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ ‚Äî —Ä–µ–¥–∫–∞—è —Å—É–ø–µ—Ä—Å–∏–ª–∞üí´","–¢—ã –∑–∞—Ä—è–∂–∞–µ—à—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ–ºüïäÔ∏è",
    "–° —Ç–æ–±–æ–π —É—é—Ç–Ω–æ –∫–∞–∫ –ø–æ–¥ –ø–ª–µ–¥–æ–ºüß∏","–¢–≤–æ—ë –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –∏ —Ü–µ–Ω–∏—Ç—Å—èüìù","–¢—ã —É–∫—Ä–∞—à–∞–µ—à—å –ª—é–±–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ –ø–æ—è–≤–ª—è–µ—à—å—Å—è‚ú®",
    "–¢—ã —Å–ª—ã—à–∏—à—å –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫ ‚Äî —ç—Ç–æ —Ç–∞–ª–∞–Ω—Çüéß","–° —Ç–æ–±–æ–π –ª–µ–≥–∫–æ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Å—Ç–Ω–æüí¨","–¢—ã –∫–∞–∫ –≥–ª–æ—Ç–æ–∫ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã –ª–µ—Ç–æ–ºüíß",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –¥–Ω–∏ –º—è–≥—á–µü´∂","–¢—ã –∏–∑ —Ç–µ—Ö, –∫–æ–º—É –¥–æ–≤–µ—Ä—è—é—Ç —Ç–∞–π–Ω—ãüîí","–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–æ–π —Ñ–∞–≤–æ—Ä–∏—Ç —Å–µ–≥–æ–¥–Ω—èüíñ",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –±—ã—Ç—å –ª—É—á—à–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—åüåü","–£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤–æ–µ —á—É–≤—Å—Ç–≤–æ —Ç–∞–∫—Ç–∞üéª","–¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä –Ω–µ–∂–Ω–µ–µü§ç",
    "–¢—ã –æ—á–µ–Ω—å –±–µ—Ä–µ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –ª—é–¥—è–º ‚Äî —ç—Ç–æ –≤–∏–¥–Ω–æü§≤","–£ —Ç–µ–±—è —à–∏–∫–∞—Ä–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ü§£",
    "–¢—ã —Å–ª–æ–≤–Ω–æ –º–∞—è–∫ ‚Äî —Ä—è–¥–æ–º –±–µ–∑–æ–ø–∞—Å–Ω–æüõü","–¢—ã —É–º–µ–µ—à—å —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –∑–∞ –¥—Ä—É–≥–∏—Ö ‚Äî —ç—Ç–æ —Ä–µ–¥–∫–æ—Å—Ç—åüéÅ",
    "–¢—ã —Å–ª—ã—à–∏—à—å —Å–µ–±—è ‚Äî –∏ —ç—Ç–æ –≤–æ—Å—Ö–∏—â–∞–µ—ÇüéØ","–¢—ã –Ω–∞—Å—Ç–æ—è—â–∞—è, –∏ —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æüå∏",
    "–¢–≤–æ–∏ —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–º–æ–ºüè°","–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Ö–æ—Ä–æ—à–∏–ºüì©",
    "–¢—ã —Å–≤–µ—Ç–ª–∞—è –¥–µ–≤–æ—á–∫–∞, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å‚≠êÔ∏è","–¢—ã –∫—Ä–∞—Å–∏–≤–∞—è –±–µ–∑ —É—Å–ª–æ–≤–∏–π –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–πüëë",
    "–¢—ã –∑–∞–º–µ—Ç–Ω–∞—è, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –º–æ–ª—á–∏—à—åü™Ñ","–¢—ã –±–µ—Ä–µ–∂–Ω–æ –¥–µ—Ä–∂–∏—à—å —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã ‚Äî –≥–æ—Ä–∂—É—Å—åüõ°Ô∏è",
    "–¢—ã —É–º–µ–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω–∏–º –≤–∑–≥–ª—è–¥–æ–ºüëÄ","–¢—ã –æ—á–µ–Ω—å —Å—Ç–∏–ª—å–Ω–∞—è, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –≤ –ø–∏–∂–∞–º–µüëó",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –Ω–∞ –¥–æ–±—Ä—ã–µ –ø–æ—Å—Ç—É–ø–∫–∏üíù","–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç —á–∞—Ç –∂–∏–≤—ã–ºüéâ",
    "–¢—ã –∫–∞–∫ —É—Ç—Ä–æ ‚Äî —Å–≤–µ–∂–∞—è –∏ –Ω–µ–∂–Ω–∞—èüåÖ","–¢—ã –∫—Ä–∞—Å–∏–≤–æ –∑–ª–∏—à—å—Å—è ‚Äî —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–ºü¶¢",
    "–¢—ã –¥–∞—ë—à—å —á—É–≤—Å—Ç–≤–æ ¬´—Å–æ –º–Ω–æ–π –≤—Å—ë –æ–∫¬ªüëå","–¢—ã —Ç–æ–Ω–∫–∞—è, –Ω–æ —Å–∏–ª—å–Ω–∞—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æü¶ã",
    "–¢—ã –≤–∞–∂–Ω–∞—è –¥–µ–≤–æ—á–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ –º–∏—Ä–∞üåç","–¢—ã ‚Äî –º–∞–ª–µ–Ω—å–∫–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è, –∏ —ç—Ç–æ –≤–∏–¥–Ω–æüåå"
]

def pick_target_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.reply_to_message:
        return update.message.reply_to_message.from_user.id
    if context.args:
        who = context.args[0].lstrip("@")
        return find_user_id_by_username(who)
    # —Ä–∞–Ω–¥–æ–º –∏–∑ known_users, –∫—Ä–æ–º–µ —Å–µ–±—è
    me = update.effective_user.id
    pool = [uid for uid in state.get("known_users", []) if uid != me]
    return random.choice(pool) if pool else None

async def compliment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    ensure_user(update.effective_user.id)
    tid = pick_target_user(update, context)
    if not tid:
        await update.message.reply_text("–ö–æ–º—É –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç? –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏ /compliment @username.")
        return
    store_user(update.effective_user)
    text = f"{display_user(update.effective_user.id)} –≥–æ–≤–æ—Ä–∏—Ç {display_user(tid)}: {random.choice(COMPLIMENTS)}"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== HUGS =====================
HUGS_POOL = [
    "ü§ó {a} –∫—Ä–µ–ø–∫–æ –æ–±–Ω—è–ª–∞ {b} ‚Äî —Ç–µ–ø–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—Éüß∏",
    "üíû {a} –Ω–µ–∂–Ω–æ –ø—Ä–∏–∂–∞–ª–∞—Å—å –∫ {b} ‚Äî –ø—É—Å—Ç—å —Ç—Ä–µ–≤–æ–≥–∏ —Ç–∞—é—Çüå∑",
    "ü•∞ {a} —Å–æ–≥—Ä–µ–ª–∞ {b} —Å–≤–æ–∏–º–∏ –æ–±–Ω–∏–º–∞—à–∫–∞–º–∏ ‚Äî –∑–∞—Ä—è–¥–∏–ª–∞—Å—å –ª—é–±–æ–≤—å—é!",
    "ü´∂ {a} –∏ {b} ‚Äî —Å–µ–≥–æ–¥–Ω—è —Å–∞–º—ã–π –º–∏–ª—ã–π –¥—É—ç—Ç!",
    "–ö—Ç–æ –Ω–µ –æ–±–Ω–∏–º–µ—Ç—Å—è ‚Äî —Ç–æ—Ç –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –∫–∞—Å—Ç–æ–º–∫–µ!",
    "ü´Ç –¢–æ–∫—Å–∏–∫–æ–≤ —Ç–æ–∂–µ –∏–Ω–æ–≥–¥–∞ –æ–±–Ω–∏–º–∞—é—Ç‚Ä¶ –ø–æ –≥–æ–ª–æ–≤–µ‚Ä¶ —Ç–∞–±—É—Ä–µ—Ç–∫–æ–πüôÉ",
    "–ü–µ—Ä–µ–¥–∞—é –º—è–≥–∫–æ—Å—Ç—å, –∑–∞–±–æ—Ç—É –∏ –ø–µ—á–µ–Ω—å–∫—Éüç™ ‚Äî {a} ‚Üí {b}",
    "–ö—Ä–µ–ø–∫–æ-–∫—Ä–µ–ø–∫–æ –∏ –æ—á–µ–Ω—å –Ω–µ–∂–Ω–æ ‚Äî —Ç—Ä–µ–ø–µ—â–∏, –≥—Ä—É—Å—Ç—å!ü´Ç {a} –æ–±–Ω—è–ª–∞ {b}",
    "–ü—É—Å—Ç—å —Ç—Ä–µ–≤–æ–≥–∏ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è –Ω–∞ 50% –ø–æ—Å–ª–µ —ç—Ç–∏—Ö –æ–±—ä—è—Ç–∏–πüå∏ {a} –¥–ª—è {b}"
]

async def hugs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    me = update.effective_user
    # –∞–¥—Ä–µ—Å–Ω–æ
    if context.args:
        target = context.args[0]
        msg = random.choice([
            f"ü§ó {me.mention_html()} –æ–±–Ω—è–ª–∞ {target}! –¢–µ–ø–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æüß∏",
            f"üíû {me.mention_html()} –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –æ–±—ä—è—Ç–∏—è {target}. –í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æüå∑",
        ])
        await update.message.reply_text(emo(msg), parse_mode="HTML")
        return
    # –ø–æ –æ—Ç–≤–µ—Ç—É
    if update.message and update.message.reply_to_message:
        tid = update.message.reply_to_message.from_user.id
        store_user(update.message.reply_to_message.from_user)
        tpl = random.choice(HUGS_POOL)
        a = me.mention_html()
        b = display_user(tid)
        text = tpl.format(a=a, b=b) if ("{a}" in tpl or "{b}" in tpl) else f"{a} –æ–±–Ω—è–ª–∞ {b} ‚Äî {tpl}"
        await update.message.reply_text(emo(text), parse_mode="HTML")
        return
    # —Ä–∞–Ω–¥–æ–º
    pool = [uid for uid in state.get("known_users", []) if uid != me.id]
    if not pool:
        await update.message.reply_text("–û–±–Ω–∏–º–∞—à–∫–∏ –¥–ª—è –≤—Å–µ—Ö –≤ —á–∞—Ç–µ!ü´Ç")
        return
    tid = random.choice(pool)
    tpl = random.choice(HUGS_POOL)
    a = me.mention_html()
    b = display_user(tid)
    text = tpl.format(a=a, b=b) if ("{a}" in tpl or "{b}" in tpl) else f"{a} –æ–±–Ω—è–ª–∞ {b} ‚Äî {tpl}"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== –õ–ï–°–ë–ò-–ü–ê–†–ê –î–ù–Ø =====================
async def lesbi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    pool = list(set(state.get("known_users", [])))
    if len(pool) < 2:
        await update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏—Ü –¥–ª—è –ø–∞—Ä—ã")
        return
    if state["last_lesbi_date"] == today_str() and state.get("last_lesbi_pair"):
        a, b = state["last_lesbi_pair"]
        await update.message.reply_text(
            emo(f"üë≠ –ü–∞—Ä–∞ –¥–Ω—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞: {display_user(a)} + {display_user(b)}üíû"),
            parse_mode="HTML"
        )
        return
    a, b = random.sample(pool, 2)
    state["last_lesbi_date"] = today_str()
    state["last_lesbi_pair"] = [a, b]
    save_state()
    lines = [
        "üåà –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –ª–µ—Å–±–∏-–ø–∞—Ä–∞: {a} –∏ {b}üíã",
        "ü´∂ –ö—Ç–æ –±—ã –º–æ–≥ –ø–æ–¥—É–º–∞—Ç—å! {a} –∏ {b} ‚Äî –ø–∞—Ä–∞ –¥–Ω—è!",
        "üíò –ê–º—É—Ä –ø–æ–ø–∞–ª —Ç–æ—á–Ω–æ –≤ —Ü–µ–ª—å! {a} –∏ {b} —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–µüòç",
        "üíû –õ—é–±–æ–≤—å –≤–∏—Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ: {a} + {b} =‚ù§Ô∏è"
    ]
    msg = random.choice(lines).format(a=display_user(a), b=display_user(b))
    await context.bot.send_message(chat_id=update.effective_chat.id, text=emo(msg), parse_mode="HTML")

# ===================== –†–û–õ–ò =====================
ROLES = [
    "—Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –¥–µ–≤–æ—á–∫–∞üíñ","—Å–∞–º–∞—è –º–∏–ª–∞—è –∫–∏—Å–∫–∞üò∫","—Å–∞–º–∞—è –Ω–µ–∂–Ω–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞üå∏","—Å–∞–º–∞—è –≥—Ä—É—Å—Ç–Ω–∞—è –ø–µ–ª—å–º–µ—à–∫–∞üòî","—Å–∞–º–∞—è —Å–∏—è—é—â–∞—è –∑–≤—ë–∑–¥–æ—á–∫–∞‚ú®",
    "—Å–∞–º–∞—è –∑–ª–∞—è –≤–µ–¥—å–º–æ—á–∫–∞üßô‚Äç‚ôÄÔ∏è","—Å–∞–º–∞—è –º–æ–¥–Ω–∞—è –∏–∫–æ–Ω–∫–∞üë†","—Å–∞–º–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–∞—è –¥—É—à–∞üåÄ","—Å–∞–º–∞—è —Ä–∞–¥—É–∂–Ω–∞—è –±—É–ª–æ—á–∫–∞üåà","—Å–∞–º–∞—è –æ–¥–∏–Ω–æ–∫–∞—è —Ç—É—á–∫–∞üåß",
    "–∫–∞–∫–∞—à–∫–∞ –¥–Ω—èüí©","–±—É–Ω—Ç–∞—Ä–∫–∞ —á–∞—Ç–∞üî•","–ø—Å–∏—Ö–æ–≤–∞–Ω–Ω–∞—è —Ñ–µ—èü§Ø","–ø–ª–∞–∫—Å–∞ –¥–Ω—èüò≠","–¥—Ä–∞–º–∞–∫–≤–∏–Ω –≤–µ—á–µ—Ä–∞üëë","—Å–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è –∂–∞–±–∞üê∏","–∫–∏—Å–∫–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–ºüêæ",
    "–∫–æ—Ä–æ–ª–µ–≤–∞ —Å–ø–∞–º–∞üì±","—Å–∞–º–∞—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–∞—èüé≤","–¥–µ–≤–æ—á–∫–∞ –≤–∞–π–±–∞üéß","—Å–∞–º–∞—è —ç—Å—Ç–µ—Ç–∏—á–Ω–∞—è –Ω–∞ —Ä–∞–π–æ–Ω–µüé®","–∏–Ω—Å—Ç–∞-–¥–∏–≤–∞ –¥–Ω—èüì∏","—Å–∞–º–∞—è –ø–æ—é—â–∞—è –≤ –¥—É—à–µüé§",
    "—Å–∞–º–∞—è —Å–µ–∫—Å–∏ –≤ –ø–∏–∂–∞–º–µüíÉ","–∫–æ—Ä–æ–ª–µ–≤–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∏üéâ","–¥–µ–≤–æ—á–∫–∞ —Å –∫–æ—Å–º–æ—Å–æ–º –≤ –≥–ª–∞–∑–∞—Öüåå","–±–æ–≥–∏–Ω—è —Ñ–ª–∏—Ä—Ç–∞üíã","–¥–µ–≤–∞ —Ö–∞–æ—Å–∞ü´¶","—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∞–≥–µ–Ω—Ç —á–∞—Ç–∞üïµÔ∏è‚Äç‚ôÄÔ∏è",
    "–ø–µ—Ä—Å–∏–∫ –¥–Ω—èüçë","–∫–æ—à–º–∞—Ä –≤—Å–µ—Ö –±—ã–≤—à–∏—Öüíî","–∫–æ—Ñ–µ–π–Ω–∞—è –±–æ–≥–∏–Ω—è‚òïÔ∏è","—Å–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è —Ä–∂—É–Ω—å–∫–∞üòÇ","–¥–µ–≤–æ—á–∫–∞-—Å—é—Ä–ø—Ä–∏–∑üé≤","—Å–ª—É—á–∞–π–Ω—ã–π –≥–µ–Ω–∏–πüß†",
    "–ª–æ–≤—É—à–∫–∞ –¥–ª—è —Å–µ—Ä–¥–µ—Ü‚ù§Ô∏è‚Äçüî•","–æ–±–Ω–∏–º–∞—à–∫–∞ –Ω–∞ –Ω–æ–∂–∫–∞—Öü§ó","—Å–∞–º–∞—è —Ä–∞–Ω–∏–º–∞—è –¥—É—à–∞ü•∫","–Ω–æ—Å–∏–∫-–∫–Ω–æ–ø–æ—á–∫–∞ –¥–Ω—èüëÉ","–¥–µ–≤–æ—á–∫–∞, –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—Ç—Å—è —á–∞–π –Ω–∞–ª–∏—Ç—åüçµ",
    "—Å–µ—Ä–¥—Ü–µ –Ω–∞ —Ä–∞—Å–ø–∞—à–∫—Éüíò","—Å–ª–∞–¥–æ—Å—Ç—å —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ –≥—Ä—É—Å—Ç–∏üç¨","–æ–±–ª–∞–∫–æ –Ω–µ–∂–Ω–æ—Å—Ç–∏‚òÅÔ∏è","–º–∏–ª–∞—à–∫–∞ –¥–Ω—èüß∏","—Ç—ë–ø–ª—ã–π –ø–ª–µ–¥ —Å—Ä–µ–¥–∏ —à—Ç–æ—Ä–º–∞ü´Ç",
    "—É–ª—ã–±–∫–∞, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ—â–∞–µ—à—å –≤—Å—ëüòä","–¥–µ–≤–æ—á–∫–∞-–æ–±–Ω–∏–º–∞—à–∫–∞ü§ç","—Å–∞–º–∞—è –¥—Ä–∞–º–∞—Ç–∏—á–Ω–∞—èüé≠","–∫–∞–ø—Ä–∏–∑—É–ª—è –¥–Ω—èüòà","–¥–µ–≤–æ—á–∫–∞ —Å –ø–ª–∞–Ω–æ–º (–∏ –±–∞—Ä—Ç–µ—Ä–æ–º)üìã",
    "–≤—ã—Å—à–∞—è –ª–∏–≥–∞ —Ñ–µ–º–∏–Ω–∏–∑–º–∞üßú‚Äç‚ôÄÔ∏è","—Ç–∞, –∫—Ç–æ –¥–µ–ª–∞–µ—Ç –º–æ–∑–≥–∏ü•¥","—à–∞–ª—å–Ω–∞—è –∏–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞üëë","–≥–ª–∞–≤–Ω–∞—è –∑–≤–µ–∑–¥–∞ —á–∞—Ç–∞üåü","—Å–∞–º–∞—è –∑–∞–Ω—è—Ç–Ω–∞—è –∏–Ω—Ç—Ä–∏–≥–∞–Ω–∫–∞üß©",
    "–¥–µ–≤–æ—á–∫–∞ —Å –∫–æ—Ä–æ–Ω–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—éüë∏","—Ñ–µ—è —Å –±–¥—Å–º-–∫—Ä—ã–ª—å—è–º–∏üßö‚Äç‚ôÄÔ∏è","–∑–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω–∞—è –∫–æ—Ç–ª–µ—Ç–∫–∞üçñ","–≤–æ–ª—à–µ–±–Ω–∏—Ü–∞ —É—é—Ç–Ω—ã—Ö –≤–µ—á–µ—Ä–æ–≤üåô",
    "–º–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –±–æ–≥–∏–Ω—è —Å–Ω–∞üò¥","–≤–µ–¥—å–º–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª–∫–∞—Öüßô‚Äç‚ôÄÔ∏è","–≤–µ–¥—å–º–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –≤–∞—Ä–∏—Ç –±–æ—Ä—âüßπ","–¥–µ–≤–æ—á–∫–∞-–∑–µ–ª—å–µüß™","—Ç–∞, —á—Ç–æ —Ç–∞–Ω—Ü—É–µ—Ç –ø–æ–¥ –ª—É–Ω–æ–πüíÉ",
    "–¥–µ–≤–æ—á–∫–∞-–æ–π-–≤—Å—ëüôÑ","–ø–∏–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–±–ª—É–∫–∞—ÖüçÜ","–≥—Ä—É—Å—Ç–Ω—ã–π –∫–æ—Ç–∏–∫ –≤ —Ç–µ–ª–µ —Å—Ç–µ—Ä–≤—ãüòø","—Ç–∞, —á—Ç–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—ÇüôÖ‚Äç‚ôÄÔ∏è","–∫—Ä–∏–Ω–∂-–∫–æ—Ä–æ–ª–µ–≤–∞ü´†","—à–∞—Ä–∏–∫ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏üéà",
    "—Ö–∏—Ç—Ä–∞—è –∂–æ–ø–∫–∞üçë","–ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æüí®","–ø–æ–∑–æ—Ä –∫–ª–∞–Ω–∞ü§°","–æ—à–∏–±–∫–∞ –ø—Ä–∏—Ä–æ–¥—ã‚ö†Ô∏è","—Ñ–∏–∞—Å–∫–æ –¥–Ω—èüìâ","—Ö–æ–¥—è—á–∏–π –∫—Ä–∏–Ω–∂ü´†","–º–∏–Ω—É—Å –≤ –∫–∞—Ä–º—Éüëé","–Ω–µ—É–¥–∞—á–∞ –Ω–µ–¥–µ–ª–∏üíÄ",
    "—Ö–∑ –∫—Ç–æ –∏ –∑–∞—á–µ–º —Ç—É—ÇüôÉ","–ø—Ä–∏—á–∏–Ω–∞ —Å—Ç—ã–¥–∞ —Å–µ–≥–æ–¥–Ω—èüò¨","–±–∞–≥ –≤ –º–∞—Ç—Ä–∏—Ü–µüï≥","–≥–ª–∞–≤–Ω—ã–π –ø–æ–≤–æ–¥ –¥–ª—è —Ñ–µ–π—Å–ø–∞–ª–º–∞ü§¶‚Äç‚ôÄÔ∏è","—Å–∞–º–∞—è –±–µ—Å—è—á–∞—èüßø","—Ñ–µ–π–ª –≤–µ–∫–∞üòµ",
    "–∞–Ω—Ç–∏-–∑–≤–µ–∑–¥–∞ —á–∞—Ç–∞üö´","–ø—Ä–æ–∫–ª—è—Ç–∏–µ –¥–Ω—èüßü‚Äç‚ôÄÔ∏è","–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞ –≤ —é–±–∫–µüå™","–ø–æ–≤–æ–¥ –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞üö™","—Ñ–æ–Ω–æ–≤—ã–π —à—É–ºüîá","–≥–ª—é–∫ —Å–∏—Å—Ç–µ–º—ãüñ•",
    "–Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–µ —Å –≤–∞–π–±–æ–ºüòµ‚Äçüí´","—Ä–∞–Ω–¥–æ–º–Ω–∞—è npcüíª","–±–∞–≥ —Å –ª–∏—Ü–æ–ºü´•","—É—Ä–æ–Ω –ø–æ –≥–ª–∞–∑–∞–ºüëÅ","—Ç–∞, –∫–æ–≥–æ –ª—É—á—à–µ –Ω–µ –≤—Å–ø–æ–º–∏–Ω–∞—Ç—åüëª","–º–æ—Ä–∞–ª—å–Ω—ã–π –≤–∏—Ä—É—Åü¶†",
    "—Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—åüï≥","–±–∞–Ω –±–µ–∑ —Å—É–¥–∞ –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—èüö∑"
]

async def role_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    me = update.effective_user
    target_id = None
    if update.message and update.message.reply_to_message:
        target_id = update.message.reply_to_message.from_user.id
    elif context.args:
        target_id = find_user_id_by_username(context.args[0])
    else:
        pool = list(set(state.get("known_users", [])))
        if not pool:
            await update.message.reply_text("–ù–µ–∫–æ–≥–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –Ω–∞ —Ä–æ–ª—å ‚Äî —á–∞—Ç –ø—É—Å—Ç—É–µ—Çüòø")
            return
        target_id = random.choice(pool)
    ensure_user(target_id)
    text = f"{display_user(target_id)} —Å–µ–≥–æ–¥–Ω—è {random.choice(ROLES)}"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== –î–† (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –µ—Å–ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å bday) =====================
def _parse_day_month(bday: str):
    if not bday:
        return None
    bday = bday.strip()
    for fmt in ("%d.%m.%Y", "%d.%m"):
        try:
            dt = datetime.strptime(bday, fmt)
            return dt.day, dt.month
        except Exception:
            pass
    return None

async def birthday_job(context: ContextTypes.DEFAULT_TYPE):
    today = date.today()
    for suid, u in state["users"].items():
        dm = _parse_day_month(u.get("bday", ""))
        if not dm:
            continue
        d, m = dm
        if d == today.day and m == today.month:
            name = u.get("name") or tg_link_from_id(int(suid), "–¥–µ–≤–æ—á–∫–∞")
            text = f"üéÇ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {name}! –ü–æ–∂–µ–ª–∞–µ–º —Å—á–∞—Å—Ç—å—è, –ª—é–±–≤–∏ –∏ –ø–æ–±–µ–¥!ü•≥"
            try:
                await context.bot.send_message(chat_id=CHAT_ID, text=emo(text), parse_mode="HTML")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ: {e}")

# ===================== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ò –ó–ê–ü–£–°–ö =====================
def build_application():
    app = ApplicationBuilder().token(TOKEN).build()

    # —Å–µ—Ä–≤–∏—Å–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç/–ø–æ–∫–∞
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome_new_members))
    app.add_handler(MessageHandler(filters.StatusUpdate.LEFT_CHAT_MEMBER, goodbye_member))

    # –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (—Ä–µ–∑–µ—Ä–≤)
    app.add_handler(ChatMemberHandler(greet_new_member, ChatMemberHandler.CHAT_MEMBER))
    app.add_handler(ChatMemberHandler(farewell_member, ChatMemberHandler.CHAT_MEMBER))

    # –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ—à–∞–≥–æ–≤–æ)
    edit_conv = ConversationHandler(
        entry_points=[CommandHandler("editprofile", editprofile)],
        states={
            STEP_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_name)],
            STEP_NICK: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_nick)],
            STEP_UID:  [MessageHandler(filters.TEXT & ~filters.COMMAND, step_uid)],
            STEP_BDAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_bday)],
            STEP_CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_city)],
            STEP_TIKTOK: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_tiktok)],
            STEP_QUOTE: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_quote)],
        },
        fallbacks=[],
    )
    app.add_handler(edit_conv)
    app.add_handler(CommandHandler("profile", profile))

    # –±–∞–∑–æ–≤—ã–µ
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about))
    app.add_handler(CommandHandler("menu", menu))
    app.add_handler(CommandHandler("hide", hide))
    app.add_handler(CommandHandler("rules", rules))
    app.add_handler(CommandHandler("info", info_cmd))

    # —Ñ–∞–Ω/–∏–≥—Ä—ã
    app.add_handler(CommandHandler("pipisa", pipisa))
    app.add_handler(CommandHandler("duel", duel_cmd))
    app.add_handler(CommandHandler("top5", top5))
    app.add_handler(CommandHandler("rating", rating))
    app.add_handler(CommandHandler("predskaz", predskaz))
    app.add_handler(CommandHandler("compliment", compliment))
    app.add_handler(CommandHandler("hugs", hugs))
    app.add_handler(CommandHandler("lesbi", lesbi))
    app.add_handler(CommandHandler("role", role_cmd))

    # JobQueue ‚Äî –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å –î–† (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00 –ø–æ —Å–µ—Ä–≤–µ—Ä—É)
    app.job_queue.run_daily(birthday_job, time(hour=9, minute=0))

    return app

if __name__ == "__main__":
    application = build_application()
    print("OnlyGirls bot –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    application.run_polling(close_loop=False)
