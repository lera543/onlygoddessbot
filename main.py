# -*- coding: utf-8 -*-
import json
import logging
import random
import re
from datetime import datetime, date, time
from pathlib import Path

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ChatMemberHandler,
    ConversationHandler, ContextTypes, filters
)

# ===================== –ù–ê–°–¢–†–û–ô–ö–ò =====================
TOKEN = "8215387975:AAHS_mMHzXBGtDVevEBiSwsLcLPChs7Yq7k"
CHAT_ID = -1001849339863  # –æ–±—â–∏–π —á–∞—Ç
DATA_FILE = Path("data.json")

logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    level=logging.INFO
)
logger = logging.getLogger("OnlyGirlsBot")

# ===================== –•–†–ê–ù–ò–õ–ò–©–ï =====================
state = {
    "users": {},
    "known_users": [],
    "last_lesbi_date": None,
    "last_lesbi_pair": None
}

def load_state():
    if DATA_FILE.exists():
        try:
            data = json.loads(DATA_FILE.read_text(encoding="utf-8"))
            state.update(data)
            for suid, u in state.get("users", {}).items():
                if "username" not in u:
                    u["username"] = ""
                if "pipisa_power" not in u:
                    u["pipisa_power"] = 0
                if "last_duel_date" not in u:
                    u["last_duel_date"] = None
                if "duel_uses" not in u:
                    u["duel_uses"] = 0
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å data.json: {e}")

def save_state():
    try:
        DATA_FILE.write_text(json.dumps(state, ensure_ascii=False, indent=2), encoding="utf-8")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è data.json: {e}")

load_state()

# ===================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï =====================
def today_str() -> str:
    return date.today().isoformat()

def ensure_user(user_id: int):
    suid = str(user_id)
    if suid not in state["users"]:
        state["users"][suid] = {
            "name": "",
            "username": "",
            "nickname": "",
            "uid": "",
            "bday": "",
            "city": "",
            "tiktok": "",
            "joined_date": "",
            "quote": "",
            "pipisa": 0.0,
            "pipisa_power": 0,
            "last_pipisa": None,
            "last_prediction": None,
            "last_duel_date": None,
            "duel_uses": 0,
        }
    if user_id not in state.get("known_users", []):
        state["known_users"].append(user_id)

def tg_link_from_id(user_id: int, text: str = "–¥–µ–≤–æ—á–∫–∞") -> str:
    return f'<a href="tg://user?id={user_id}">{text}</a>'

def display_user(user_id: int) -> str:
    u = state["users"].get(str(user_id))
    if u:
        if u.get("name"):
            return u["name"]
        if u.get("username"):
            return f"@{u['username']}"
    return tg_link_from_id(user_id, "–¥–µ–≤–æ—á–∫–∞")

def is_url(s: str) -> bool:
    return s.startswith("http://") or s.startswith("https://")

def find_user_id_by_username(username: str):
    username = username.lower().lstrip("@")
    for suid, u in state["users"].items():
        if u.get("username") and u["username"].lower() == username:
            return int(suid)
    return None

def store_user(user):
    if not user:
        return
    ensure_user(user.id)
    u = state["users"][str(user.id)]
    u["name"] = user.mention_html()
    if user.username:
        u["username"] = user.username
    save_state()

# —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ —ç–º–æ–¥–∑–∏ –≤ –∏—Å—Ö–æ–¥—è—â–µ–º —Ç–µ–∫—Å—Ç–µ
_EMOJI_SPACE_FIX_RE = re.compile(r' (?=[\u2600-\u27BF\U0001F300-\U0001FAFF])')
def emo(s: str) -> str:
    return _EMOJI_SPACE_FIX_RE.sub("", s)

# ===================== –ö–õ–ê–í–ê =====================
MAIN_KB = ReplyKeyboardMarkup(
    [
        ["üå± /pipisa", "üîÆ /predskaz", "ü§ó /hugs"],
        ["üåà /lesbi", "üè∑Ô∏è /role", "‚öîÔ∏è /duel"],
        ["üèÜ /top5", "üìä /rating"],
        ["üë§ /profile", "‚úèÔ∏è /editprofile"],
        ["üìú /rules", "‚ÑπÔ∏è /info", "üôà /hide"]
    ],
    resize_keyboard=True
)

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo("–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æüíñ"), reply_markup=MAIN_KB)

async def hide(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo("–°–ø—Ä—è—Ç–∞–ª–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—Éüôà"), reply_markup=ReplyKeyboardRemove())

# ===================== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï/–ü–†–û–©–ê–ù–ò–ï =====================
async def greet_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cmu = update.chat_member
    if not cmu:
        return
    old = cmu.old_chat_member.status
    new = cmu.new_chat_member.status
    if (old in ("left", "kicked")) and (new in ("member", "administrator", "creator")):
        user = cmu.new_chat_member.user
        store_user(user)
        text = (
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.mention_html()}‚ù£Ô∏è"
            f' –û–∑–Ω–∞–∫–æ–º—å—Å—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞'
            f' (<a href="https://telegra.ph/Pravila-klana-%E0%A6%90OnlyGirls%E0%A6%90-05-29">–∑–¥–µ—Å—å</a>)ü´∂'
            f" –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ‚ùóÔ∏è –ö–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞: ‡¶î"
        )
        await context.bot.send_message(chat_id=cmu.chat.id, text=emo(text), parse_mode="HTML")

async def farewell_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cmu = update.chat_member
    if not cmu:
        return
    old = cmu.old_chat_member.status
    new = cmu.new_chat_member.status
    if (old in ("member", "administrator", "creator")) and (new in ("left", "kicked")):
        user = cmu.old_chat_member.user
        store_user(user)
        text = f"{display_user(user.id)} –ø–æ–∫–∏–Ω—É–ª–∞ —á–∞—Ç, –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—åüíî"
        await context.bot.send_message(chat_id=cmu.chat.id, text=emo(text), parse_mode="HTML")

# ===================== /START –∏ /ABOUT =====================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(
        emo("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ú–∞—Ç—å –ë–æ–≥–∏–Ω—å –¥–ª—è –∫–ª–∞–Ω–∞ OnlyGirlsüíñ –ù–∞–ø–∏—à–∏ /about —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã."),
        reply_markup=MAIN_KB
    )

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(emo(
        "‚ú® –ö–æ–º–∞–Ω–¥—ã:\n/menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É\n/editprofile ‚Äî –∑–∞–ø–æ–ª–Ω–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å(–ø–æ—à–∞–≥–æ–≤–æ)\n/profile ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/pipisa ‚Äî –≤—ã—Ä–∞—Å—Ç–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å –ø–∏–ø–∏—Å—É(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å, –º–∏–Ω–∏–º—É–º ‚àí50 —Å–º)\n/duel @—é–∑–µ—Ä ‚Äî –¥—É—ç–ª—å –ø–∏–ø–∏—Å(–¥–æ 3 –≤ –¥–µ–Ω—å, —Å–∏–ª–∞ —Ä–∞—Å—Ç—ë—Ç)\n/top5 ‚Äî —Ç–æ–ø-5 –ø–æ –ø–∏–ø–∏—Å–µ\n/rating ‚Äî –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å\n/predskaz ‚Äî –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–Ω—è(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n/hugs [@—é–∑–µ—Ä] ‚Äî –æ–±–Ω–∏–º–∞—à–∫–∏(–¥–ª—è –≤—Å–µ—Ö/—É–∫–∞–∑–∞–Ω–Ω–æ–π)\n/lesbi ‚Äî –ª–µ—Å–±–∏-–ø–∞—Ä–∞ –¥–Ω—è(1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n/role [@—é–∑–µ—Ä] ‚Äî ¬´–∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Å–∞–º–∞—è‚Ä¶¬ª\n/rules ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞(—Å—Å—ã–ª–∫–∞)\n/info ‚Äî –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–∞(—Å—Å—ã–ª–∫–∞)\n/hide ‚Äî —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"
    ))

# ===================== /RULES (—Å—Å—ã–ª–∫–∞) =====================
async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    await update.message.reply_text(
        emo('–ö–æ—Ç–∏–∫, –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞ <a href="https://telegra.ph/Pravila-klana-%E0%A6%90OnlyGirls%E0%A6%90-05-29">–∑–¥–µ—Å—å</a>ü´∂'),
        parse_mode="HTML"
    )

# ===================== /INFO (—Å—Å—ã–ª–∫–∞ ¬´–ó–¥–µ—Å—å‚Ä¶¬ª) =====================
async def info_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    text = '<a href="https://telegra.ph/Aktualnaya-informaciya-08-21">–ó–¥–µ—Å—å</a> –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∞–Ω—É, –∫–∞—Å—Ç–æ–º–∫–∞–º –∏ —Ç.–¥üñ§'
    await update.message.reply_text(emo(text), parse_mode="HTML", disable_web_page_preview=True)

# ===================== –ü–†–û–§–ò–õ–¨ =====================
(
    STEP_NAME,
    STEP_NICK,
    STEP_UID,
    STEP_BDAY,
    STEP_CITY,
    STEP_TIKTOK,
    STEP_QUOTE
) = range(7)

def render_profile(u: dict) -> str:
    name = u.get("name") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    nickname = u.get("nickname") or ""
    uid = u.get("uid") or ""
    bday = u.get("bday") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    city = u.get("city") or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    tiktok = u.get("tiktok") or ""
    quote = u.get("quote") or "‚Äî"
    pipisa = float(u.get("pipisa") or 0.0)
    if tiktok:
        if is_url(tiktok):
            tt_line = f'üì≤ TikTok: <a href="{tiktok}">TikTok</a>'
        else:
            at = tiktok if tiktok.startswith("@") else f"@{tiktok}"
            tt_line = f"üì≤ TikTok: {at}"
    else:
        tt_line = "üì≤ TikTok: –Ω–µ —É–∫–∞–∑–∞–Ω"
    text = (
        f"üôã‚Äç‚ôÄÔ∏è –ò–º—è: {name}\n"
        f"üéÆ –ù–∏–∫ –≤ –∏–≥—Ä–µ: <code>{nickname}</code>\n"
        f"üî¢ UID: <code>{uid}</code>\n"
        f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {bday}\n"
        f"üèô –ì–æ—Ä–æ–¥: {city}\n"
        f"{tt_line}\n"
        f"üçÜ –ü–∏–ø–∏—Å–∞: {pipisa:.1f} —Å–º\n"
        f"üìù –î–µ–≤–∏–∑: {quote}"
    )
    return text

async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"].get(uid)
    await update.message.reply_text(emo(render_profile(u)), parse_mode="HTML")

async def editprofile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    ensure_user(update.effective_user.id)
    context.user_data["profile_answers"] = {}
    await update.message.reply_text(emo("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?(–∏–º—è)"))
    return STEP_NAME

async def step_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["name"] = update.effective_user.mention_html()
    await update.message.reply_text(emo("–ö–∞–∫–æ–π —É —Ç–µ–±—è –Ω–∏–∫ –≤ –∏–≥—Ä–µ?"))
    return STEP_NICK

async def step_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["nickname"] = update.message.text.strip()
    await update.message.reply_text(emo("–ö–∞–∫–æ–π —É —Ç–µ–±—è UID?"))
    return STEP_UID

async def step_uid(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["uid"] = update.message.text.strip()
    await update.message.reply_text(emo("–ö–æ–≥–¥–∞ —É —Ç–µ–±—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è?(–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2000 –∏–ª–∏ 01.01)"))
    return STEP_BDAY

async def step_bday(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["bday"] = update.message.text.strip()
    await update.message.reply_text(emo("–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?"))
    return STEP_CITY

async def step_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["city"] = update.message.text.strip()
    await update.message.reply_text(emo("–û—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–≤–æ–π –Ω–∏–∫(@username):"))
    return STEP_TIKTOK

async def step_tiktok(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["tiktok"] = update.message.text.strip()
    await update.message.reply_text(emo("–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –¥–µ–≤–∏–∑–æ–º –∏–ª–∏ –ª—é–±–∏–º–æ–π —Ü–∏—Ç–∞—Ç–æ–π:"))
    return STEP_QUOTE

async def step_quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    context.user_data["profile_answers"]["quote"] = update.message.text.strip()
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    stored = state["users"][uid]
    for k, v in context.user_data["profile_answers"].items():
        stored[k] = v
    if not stored.get("joined_date"):
        stored["joined_date"] = today_str()
    stored["username"] = (update.effective_user.username or "").lower()
    save_state()
    await update.message.reply_text(emo("–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω‚úÖ"))
    return ConversationHandler.END

# ===================== –ü–ò–ü–ò–°–ê =====================
PIPISA_UP_REACTIONS = [
    "–û–Ω–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –≤–µ—Ä—à–∏–Ω–∞–º!üìà","–í–ø–µ—Ä–µ–¥ –∏ –≤—ã—à–µ‚Äî–≥–æ—Ä–¥–∏–º—Å—è!ü•≥","–¢–∞–∫ —Ä–∞—Å—Ç—ë—Ç —Ç–æ–ª—å–∫–æ –ª–µ–≥–µ–Ω–¥–∞!üåü","–°–∏—è–µ—Ç –∏ —Ä–∞–¥—É–µ—Ç —Ö–æ–∑—è–π–∫—É!‚ú®"
]
PIPISA_DOWN_REACTIONS = [
    "–ù–∏—á–µ–≥–æ, –∑–∞–≤—Ç—Ä–∞ –≤–µ—Ä–Ω—ë–º –ø–æ–∑–∏—Ü–∏–∏üí™","–ò–Ω–æ–≥–¥–∞ –∏ –≥–µ—Ä–æ—è–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—ÖüåßÔ∏è","–û–±–Ω–∏–º–µ–º‚Äî–∏ –≤—Å—ë –ø—Ä–æ–π–¥—ë—Çü´Ç","–°–º–µ–Ω–∏–º –≤–∞–π–±‚Äî–ø–æ–π–¥—ë—Ç –≤–≤–µ—Ä—Öüåà"
]

def _rand_delta():
    d = round(random.uniform(-10.0, 10.0), 1)
    if abs(d) < 0.1:
        d = 0.1 if random.random() > 0.5 else -0.1
    return d

def _clamp(v, lo, hi):
    return max(lo, min(hi, v))

async def pipisa(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]
    u["username"] = (update.effective_user.username or "").lower()
    if u.get("last_pipisa") == today_str():
        await update.message.reply_text(emo("–ü–∏–ø–∏—Å—É –º–æ–∂–Ω–æ —Ä–∞—Å—Ç–∏—Ç—å/–º–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å!üå±"))
        return
    delta = _rand_delta()
    new_val = round(float(u.get("pipisa", 0.0)) + delta, 1)
    new_val = max(new_val, -50.0)
    u["pipisa"] = new_val
    u["last_pipisa"] = today_str()
    save_state()
    if delta > 0:
        phrase = random.choice([
            f"üçÜ–¢–≤–æ—è –ø–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ {delta:.1f} —Å–º!{random.choice(PIPISA_UP_REACTIONS)} –¢–µ–ø–µ—Ä—å: {new_val:.1f} —Å–º.",
            f"üçÜ–û–≥–æ! +{delta:.1f} —Å–º‚Äî–≤–æ—Ç —ç—Ç–æ —Ä–æ—Å—Ç!{random.choice(PIPISA_UP_REACTIONS)} –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {new_val:.1f} —Å–º."
        ])
    else:
        phrase = random.choice([
            f"üçÜ–û—É‚Ä¶ –ø–∏–ø–∏—Å–∞ —É–º–µ–Ω—å—à–∏–ª–∞—Å—å –Ω–∞ {abs(delta):.1f} —Å–º.{random.choice(PIPISA_DOWN_REACTIONS)} –°–µ–π—á–∞—Å: {new_val:.1f} —Å–º.",
            f"üçÜ–ù–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Å–µ–ª–∞({abs(delta):.1f} —Å–º).{random.choice(PIPISA_DOWN_REACTIONS)} –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {new_val:.1f} —Å–º."
        ])
    await update.message.reply_text(emo(phrase), parse_mode="HTML")

# ===================== –î–£–≠–õ–¨ (–¥–æ 3/–¥–µ–Ω—å, —Å–∏–ª–∞) =====================
async def duel_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    me = update.effective_user
    ensure_user(me.id)
    state["users"][str(me.id)]["username"] = (me.username or "").lower()
    target_id = None
    if update.message and update.message.reply_to_message:
        target_id = update.message.reply_to_message.from_user.id
    elif context.args:
        arg = context.args[0].strip().lstrip("@")
        target_id = find_user_id_by_username(arg)
    if not target_id:
        await update.message.reply_text(emo("–û—Ç–º–µ—Ç—å —Å–æ–ø–µ—Ä–Ω–∏—Ü—É: /duel @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –µ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /duel."))
        return
    if target_id == me.id:
        await update.message.reply_text(emo("–° —Å–æ–±–æ–π –¥—É—ç–ª–∏—Ç—å—Å—è –Ω–µ–ª—å–∑—èüôÉ"))
        return
    ensure_user(target_id)
    me_u = state["users"][str(me.id)]
    tg_u = state["users"][str(target_id)]
    if me_u.get("last_duel_date") != today_str():
        me_u["last_duel_date"] = today_str()
        me_u["duel_uses"] = 0
    if me_u["duel_uses"] >= 3:
        await update.message.reply_text(emo("–¢—ã —É–∂–µ –ø—Ä–æ–≤–µ–ª–∞ 3 –¥—É—ç–ª–∏ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞üåô"))
        return
    my_power = int(me_u.get("pipisa_power", 0))
    opp_power = int(tg_u.get("pipisa_power", 0))
    win_chance = 0.50 + 0.05 * (my_power - opp_power)
    win_chance = _clamp(win_chance, 0.20, 0.80)
    amount = round(random.uniform(0.1, 3.0), 1)
    win = (random.random() < win_chance)
    me_size = float(me_u.get("pipisa", 0.0))
    tg_size = float(tg_u.get("pipisa", 0.0))
    if win:
        steal = min(amount, tg_size + 50.0)
        me_u["pipisa"] = round(me_size + steal, 1)
        tg_u["pipisa"] = round(tg_size - steal, 1)
        me_u["pipisa_power"] = me_u.get("pipisa_power", 0) + 2
        tg_u["pipisa_power"] = tg_u.get("pipisa_power", 0) + 1
        me_u["pipisa"] = max(me_u["pipisa"], -50.0)
        tg_u["pipisa"] = max(tg_u["pipisa"], -50.0)
        outcome = (
            f"‚öîÔ∏è {me.mention_html()} –ø–æ–±–µ–¥–∏–ª–∞ –≤ –¥—É—ç–ª–∏ —É {display_user(target_id)}!"
            f"\nüçÜ –ü–µ—Ä–µ—à–ª–æ {steal:.1f} —Å–º‚Üí—Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {me_u['pipisa']:.1f} —Å–º, —É —Å–æ–ø–µ—Ä–Ω–∏—Ü—ã {tg_u['pipisa']:.1f} —Å–º."
        )
        tail = random.choice(["–õ–µ–≥–µ–Ω–¥–∞ —É—Å–∏–ª–∏–ª–∞—Å—å!üí™","–°–∏–ª–∞ —Ä–∞—Å—Ç—ë—Ç‚Äî–±–µ—Ä–µ–≥–∏—Ç–µ—Å—å!‚ú®","–û—á–µ–Ω—å –æ–ø–∞—Å–Ω–∞—è –±–æ–≥–∏–Ω—è‚Ä¶üëë"])
    else:
        steal = min(amount, me_size + 50.0)
        me_u["pipisa"] = round(me_size - steal, 1)
        tg_u["pipisa"] = round(tg_size + steal, 1)
        me_u["pipisa_power"] = me_u.get("pipisa_power", 0) + 1
        tg_u["pipisa_power"] = tg_u.get("pipisa_power", 0) + 2
        me_u["pipisa"] = max(me_u["pipisa"], -50.0)
        tg_u["pipisa"] = max(tg_u["pipisa"], -50.0)
        outcome = (
            f"‚öîÔ∏è {me.mention_html()} –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ –¥—É—ç–ª—å {display_user(target_id)}..."
            f"\nüçÜ –£—à–ª–æ {steal:.1f} —Å–º‚Üí—Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {me_u['pipisa']:.1f} —Å–º, —É —Å–æ–ø–µ—Ä–Ω–∏—Ü—ã {tg_u['pipisa']:.1f} —Å–º."
        )
        tail = random.choice(["–ù–∏—á–µ–≥–æ, –∑–∞–≤—Ç—Ä–∞ —Ä–µ–≤–∞–Ω—à!ü´∂","–û–±–Ω–∏–º–∞—à–∫–∏ –∏ –≤–ø–µ—Ä—ë–¥ –∫ –ø–æ–±–µ–¥–∞–ºü§ó","–û–ø—ã—Ç —Ç–æ–∂–µ —Å–∏–ª–∞!üåü"])
    me_u["duel_uses"] += 1
    save_state()
    await update.message.reply_text(emo(outcome + " " + tail), parse_mode="HTML")

# ===================== –†–ï–ô–¢–ò–ù–ì–ò =====================
async def top5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)[:5]
    if not rows:
        await update.message.reply_text(emo("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µüå±"))
        return
    text = "üèÜ –¢–û–ü-5 –ø–∏–ø–∏—Å –∫–ª–∞–Ω–∞:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or tg_link_from_id(int(uid), uid)}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(emo(text), parse_mode="HTML")

async def rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)
    if not rows:
        await update.message.reply_text(emo("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µüå±"))
        return
    text = "üìä –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or tg_link_from_id(int(uid), uid)}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== 200 –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô =====================
PREDICTIONS = [
    "–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å‚Äî–¥–∞–∂–µ –µ—Å–ª–∏ –æ–±–ª–∞—á–Ω–æ‚òÅÔ∏è","–£–ª—ã–±–∫–∞ —Ä–µ—à–∏—Ç –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—èüòä","–î–µ–ª–∞–π –ø–æ –ª—é–±–≤–∏‚Äî–∏ –±—É–¥–µ—Ç –∫–∞–π—Ñüíñ","–í—Å–µ–ª–µ–Ω–Ω–∞—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ‚ú®","–¢—ã –≤–∏–¥–∏—à—å –±–æ–ª—å—à–µ, —á–µ–º –¥—Ä—É–≥–∏–µ‚Äî–¥–æ–≤–µ—Ä—å—Å—è —Å–µ–±–µüëÅÔ∏è","–ú–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ —Ç–æ–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥üë£","–°–ª—É—Ö–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Å–ª—É—Ö–∞–º–∏‚Äî–±—É–¥—å –≤—ã—à–µüïäÔ∏è","–ü—É—Å—Ç—å –¥—É—à–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç–∞–Ω—Ü—É–µ—ÇüíÉ","–¢—ã‚Äî—á—å—ë-—Ç–æ ¬´–ø–æ–≤–µ–∑–ª–æ¬ªüçÄ","–°–∫–∞–∂–∏ —Å–µ–±–µ ¬´–º–æ–ª–æ–¥–µ—Ü¬ª‚Äî—Ç—ã —ç—Ç–æ —É—Å–ª—ã—à–∏—à—åü•∞",
    "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ‚Äî—Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ —Å–µ–≥–æ–¥–Ω—èüßò‚Äç‚ôÄÔ∏è","–í—ã–±–µ—Ä–∏ –¥–æ–±—Ä–æ—Ç—É‚Äî—ç—Ç–æ –∑–∞–º–µ—Ç—è—Çüå∑","–ù–æ–≤–æ—Å—Ç—å –¥–Ω—è –±—É–¥–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ–πüì®","–ü–µ–π –≤–æ–¥—É –∏ —Å–∏—è–π –∫–∞–∫ –±—Ä–∏–ª–ª–∏–∞–Ω—Çüíé","–°–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏–∑–º–µ–Ω–∏—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µüåà","–¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è –ø—Ä–∞–≤–∞‚Äî–¥–æ–≤–µ—Ä—å—Å—è –µ–πüîÆ","–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –Ω–µ —Å–ø–µ—à–∏—Ç—å‚Äî—Ä–∏—Ç–º –Ω–∞–π–¥—ë—Ç—Å—è —Å–∞–ºüéµ","–ü–æ–π–º–∞–π –ª—É—á —Å–æ–ª–Ω—Ü–∞ –∏ —É–ª—ã–±–Ω–∏—Å—å‚òÄÔ∏è","–ù–∞–¥–µ–Ω—å –ª—é–±–∏–º–æ–µ‚Äî–º–∏—Ä –ø–æ–¥—ã–≥—Ä–∞–µ—Ç —Ç–µ–±–µüëó","–ö—Ç–æ-—Ç–æ —Ç–∞–π–Ω–æ —Ç–æ–±–æ–π –≤–æ—Å—Ö–∏—â–∞–µ—Ç—Å—èüëÄ",
    "–°–∫–∞–∂–∏ ¬´–Ω–µ—Ç¬ª –ª–∏—à–Ω–µ–º—É‚Äî–ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å —Å–≤–æ–±–æ–¥—ÉüïäÔ∏è","–°–∫–∞–∂–∏ ¬´–¥–∞¬ª —Å–µ–±–µ‚Äî–ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å —Å–∏–ª—É‚ö°Ô∏è","–ù–∞–π–¥–∏ –∫—Ä–∞—Å–∏–≤–æ–µ –≤ –º–µ–ª–æ—á–∞—Ö‚Äî–≤ —ç—Ç–æ–º –º–∞–≥–∏—è‚ú®","–°–¥–µ–ª–∞–π –ø–∞—É–∑—É‚Äî–≤–¥–æ—Ö-–≤—ã–¥–æ—Ö –∏ –¥–∞–ª—å—à–µüå¨Ô∏è","–•–æ—Ä–æ—à–∞—è –º—ã—Å–ª—å –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è –∑–∞ —á–∞–µ–ºüçµ","–¢—ã –≤–∞–∂–Ω–∞ –¥–ª—è –ª—é–¥–µ–π –±–æ–ª—å—à–µ, —á–µ–º –¥—É–º–∞–µ—à—åüíû","–°–µ–≥–æ–¥–Ω—è –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–æ, —á—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∞‚úÖ","–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ‚Äî–ø–æ–π–º–∞–µ—à—å –º–æ–º–µ–Ω—Ç –¥–Ω—èüì∏","–í—Å–ø–æ–º–Ω–∏ –º–µ—á—Ç—É –∏ –ø—Ä–∏–±–ª–∏–∑—å –µ—ë –Ω–∞ 1 —à–∞–≥üö∂‚Äç‚ôÄÔ∏è","–°–ª–æ–≤–∞ –¥–æ–±—Ä–æ—Ç—ã –≤–µ—Ä–Ω—É—Ç—Å—è —Ç–µ–±–µ —ç—Ö–æ–ºüì°",
    "–£–±–∏—Ä–∞–π—Å—è –ø–æ–¥ –º—É–∑—ã–∫—É‚Äî–∏ –º—ã—Å–ª–∏ —Ç–æ–∂–µ —Ä–∞–∑–ª–æ–∂–∞—Ç—Å—èüßπ","–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –ª—ë–≥–∫–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–πüîó","–¢—ã —Å–ª—ã—à–∏—à—å —Å–µ–±—è –≥—Ä–æ–º—á–µ, —á–µ–º —à—É–º –≤–æ–∫—Ä—É–≥üîä","–ü–æ–ª—é–±–∏ —Å–≤–æ–π —Ç–µ–º–ø‚Äî–æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π‚åõÔ∏è","–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ–¥–∫–∏–Ω–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–¥–µ—éüí°","–î–∞–π –º–µ—Å—Ç–æ —á—É–¥—É‚Äî–æ–Ω–æ –ª—é–±–∏—Ç –ø—Ä–æ—Å—Ç–æ—Äüåå","–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏—Å—Ü–µ–ª—è–µ—Ç –¥—Ä—É–≥–∏—Öüåø","–°–¥–µ–ª–∞–π –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç—å –±–µ–∑ –ø–æ–≤–æ–¥–∞‚Äî–≤–µ—Ä–Ω—ë—Ç—Å—è —Å—Ç–æ—Ä–∏—Ü–µ–πüéÅ","–ù–∏—á–µ–≥–æ –Ω–µ —Å–ª–æ–º–∞–Ω–æ‚Äî–≤—Å—ë –≤ –ø—Ä–æ—Ü–µ—Å—Å–µüõ†","–¢–≤–æ–∏ –¥–µ–ª–∞ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º‚Äî–¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –∫–∞–∂–µ—Ç—Å—èüß≠",
    "–î–µ–Ω—å —É–¥–∞—á–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤‚Äî–≥–æ–≤–æ—Ä–∏ —á–µ—Å—Ç–Ω–æüí¨","–£–ª—ã–±–Ω–∏—Å—å –∑–µ—Ä–∫–∞–ª—É‚Äî–æ–Ω–æ —Å–æ—é–∑–Ω–∏–∫ü™û","–î–æ–≤–µ—Ä—è–π —Ç–∏—Ö–∏–º —á—É–≤—Å—Ç–≤–∞–º‚Äî–æ–Ω–∏ —Ç–æ—á–Ω—ãüéØ","–ö–æ—Ñ–µ —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ –≤–æ–ª—à–µ–±–Ω—ã–π‚òïÔ∏è","–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π‚Äî—É —Ç–µ–±—è —Å–≤–æ—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—èüöÄ","–ú—É–∑—ã–∫–∞ –¥–Ω—è –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è —Å–∞–º–∞üéß","–°–ª–æ–≤–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä–æ—é—Ç –¥–≤–µ—Ä—åüö™","–ú—è–≥–∫–æ—Å—Ç—å‚Äî–Ω–µ —Å–ª–∞–±–æ—Å—Ç—å, –∞ —Å–∏–ª–∞ü§ç","–ù–µ —Ç—Ä–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–ø–æ—Ä—ãüôÖ‚Äç‚ôÄÔ∏è","–¢–µ–±—è –∂–¥—ë—Ç –º–∞–ª–µ–Ω—å–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å –≤ –ø—É—Ç–∏üõ§",
    "–ó–∞–º–µ—Ç–∏—à—å –∑–Ω–∞–∫‚Äî–æ–Ω –¥–ª—è —Ç–µ–±—èü™Ñ","–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –∫–æ–º—É-—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞ü§ù","–°–ª—É—á–∞–π–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å–æ–≥—Ä–µ–µ—Ç —Å–µ—Ä–¥—Ü–µüî•","–ó–∞–ø—É—Å—Ç–∏ –º–∏–Ω–∏-—Ä–∏—Ç—É–∞–ª –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µüõÅ","–°–æ–Ω –ø–æ–¥—Å–∫–∞–∂–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—éüåô","–¢—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ‚Äî–ø—Ä—è–º–æ —Å–µ–π—á–∞—Åüí´","–ù–µ –±–æ–π—Å—è –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏‚Äî—ç—Ç–æ –º—É–¥—Ä–æüß†","–°–¥–µ–ª–∞–π —à–∞–≥ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å‚Äî—Ç–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æüó∫","–°–µ–≥–æ–¥–Ω—è –ª–µ–≥—á–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—åüéà","–¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–µ–≥–æ–¥–Ω—è –∫–æ–º—É-—Ç–æ —Å–ø–∞—Å—ë—Ç –¥–µ–Ω—åüõü",
    "–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏‚Äî–∑–∞–º–µ—Ç–Ω–æ –≤—Å–µ–º‚≠êÔ∏è","–°–º–µ–Ω–∏ –æ–±–æ–∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ‚Äî–≤–º–µ—Å—Ç–µ —Å–º–µ–Ω–∏—Ç—Å—è –≤–∞–π–±üì±","–†–∞–∑–≥—Ä—É–∑–∏ —Å—É–º–∫—É –∏ –≥–æ–ª–æ–≤—É‚Äî—Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µüéí","–õ—é–±–∏–º–æ–µ –±–ª—é–¥–æ –ø–æ–¥–∞—Ä–∏—Ç —Å–∏–ª—ãüç≤","–°–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –º—ã—Å–ª—å –ø—Ä–∏–¥—ë—Ç –≤ –¥–æ—Ä–æ–≥–µüöå","–¢—ã —É–º–µ–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–∏–∑–Ω–∞—ë—à—å—Å—è —Å–µ–±–µüèÖ","–°–ø–∏—Å–æ–∫ –¥–µ–ª —Å–æ–∫—Ä–∞—Ç–∏—Ç—Å—è —Å–∞–º‚Äî–¥–æ–≤–µ—Ä—è–π –ø–æ—Ç–æ–∫—Éüåä","–û—Ç–ª–æ–∂–∏ —Ç—è–∂—ë–ª–æ–µ –¥–æ –∑–∞–≤—Ç—Ä–∞‚Äî—Å–µ–≥–æ–¥–Ω—è –ª–∞—Å–∫–∞üå∏","–°–ø—Ä—è—á—å—Å—è –≤ –ø–ª–µ–¥‚Äî–º–∏—Ä –ø–æ–¥–æ–∂–¥—ë—Çü´∂","–°–∫–∞–∂–∏ ¬´—Å–ø–∞—Å–∏–±–æ¬ª —Å–µ–±–µ‚Äî—ç—Ç–æ –≤–∞–∂–Ω–æüéÄ",
    "–°–µ–≥–æ–¥–Ω—è —Å–ª–æ–≤–∞ –ª–æ–∂–∞—Ç—Å—è –º—è–≥–∫–æ‚Äî–∏—Å–ø–æ–ª—å–∑—É–π –∏—Ö –º—É–¥—Ä–æüìù","–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ –∑–Ω–∞–µ—Ç –¥–æ—Ä–æ–≥—É –¥–æ–º–æ–πüè°","–ß—É–¥–æ —É–∂–µ –≤—ã–µ—Ö–∞–ª–æ‚Äî–æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—åüö™","–î–µ–Ω—å –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–æ–±–µ–¥‚Äî—Å–æ–±–µ—Ä–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—éüèÜ","–¢—ã –º–∞–≥–Ω–∏—Ç –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–πüì©","–ú–∏—Ä –Ω–µ –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è‚Äî–æ–Ω –∑–∞ —Ç–µ–±—èü§ç","–ñ–¥–∞—Ç—å –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ, —Å—Ç—Ä–∞—à–Ω–æ –Ω–µ –º–µ—á—Ç–∞—Ç—åüå†","–°–º–µ–ª–∞—è –º—ã—Å–ª—å –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è –ø–µ—Ä–≤–æ–πüóØ","–¢–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –¥–µ–≤–æ—á–∫–∞ —Ö–æ—á–µ—Ç –ø–µ—á–µ–Ω—å–∫—Éüç™","–¢—ã –ø—Ä–∏—á–∏–Ω–∞ —á—å–µ–π-—Ç–æ –Ω–∞–¥–µ–∂–¥—ã —Å–µ–≥–æ–¥–Ω—èüåü",
    "–ö—Ä–∞—Å–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–µ–±—èüòç","–¢–≤–æ—ë –ª–∏—Ü–æ –ª—é–±–∏—Ç –≤–æ–¥—É –∏ —Å–æ–Ω‚Äî–ø–æ–±–∞–ª—É–π –µ–≥–æüíß","–¢–≤–æ–∏ –≥–ª–∞–∑–∞ —Å–∏—è—é—Ç –¥–∞–∂–µ –±–µ–∑ —Ö–∞–π–ª–∞–π—Ç–µ—Ä–∞‚ú®","–¢–≤–æ—è —É–ª—ã–±–∫–∞‚Äî–ª—É—á—à–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Äüíã","–¢–≤–æ—è –∫–æ–∂–∞ –ª—é–±–∏—Ç –Ω–µ–∂–Ω–æ—Å—Ç—å‚Äî–±—É–¥—å –º—è–≥—á–µ —Å —Å–æ–±–æ–πü´ß","–ö—Ä–∞—Å–æ—Ç–∞‚Äî—ç—Ç–æ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞ –Ω–µ –º–∞–∫–∏—è–∂üé®","–¢—ã –∫—Ä–∞—Å–∏–≤–∞, –∫–æ–≥–¥–∞ –≤–µ—Ä–∏—à—å —Å–µ–±–µüíñ","–°–∞–º–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –≤ —Ç–µ–±–µ‚Äî–∂–∏–≤–æ—Å—Ç—å –∏ –æ–≥–æ–Ω—åüî•","–¢–µ–±–µ –∏–¥—ë—Ç —Å–º–µ–ª–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—åüí´","–¢–≤–æ—è –ø–æ—Ö–æ–¥–∫–∞‚Äî–∫–∞–∫ –º—É–∑—ã–∫–∞, –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—èüé∂",
    "–ü—É—Å—Ç—å –≤–æ–ª–æ—Å—ã —Å–µ–≥–æ–¥–Ω—è —Ç–∞–Ω—Ü—É—é—Ç‚Äî–∏ —Ç—ã –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º–∏üíÉ","–ì—É–±—ã –ø–æ–º–Ω—è—Ç –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã‚Äî—Å–∫–∞–∂–∏ –∏—Ö —Å–µ–±–µüíå","–ó–µ—Ä–∫–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π —Ñ–∞–Ω-–∫–ª—É–±üì£","–¢—ã —à–µ–¥–µ–≤—Ä –≤ –ª—é–±–æ–π –æ–¥–µ–∂–¥–µüñº","–¢–≤–æ–µ–º—É —Å—Ç–∏–ª—é –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–≤–æ–µ–≥–æ –≤–∫—É—Å–∞üëó","–ù–µ–∂–Ω–æ—Å—Ç—å‚Äî—Ç–≤–æ–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö–∞–π–ª–∞–π—Ç–µ—Äüåü","–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π, —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–πüå∑","–ö–∞–∂–¥–∞—è —Ç–≤–æ—è —á–µ—Ä—Ç–∞‚Äî–∏—Å—Ç–æ—Ä–∏—è, –∞ –Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫üìö","–£–ª—ã–±–Ω–∏—Å—å –≥–ª–∞–∑–∞–º–∏‚Äî–º–∏—Ä —Ä–∞—Å—Ç–∞–µ—Çüßä","–¢–≤–æ–∏ —Ä—É–∫–∏ —Å–æ–∑–¥–∞—é—Ç —Ç–µ–ø–ª–æ‚Äî–∏ —ç—Ç–æ –≤–∏–¥–Ω–æü§≤",
    "–ö—Ä–∞—Å–æ—Ç–∞‚Äî—ç—Ç–æ –∫–∞–∫ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µü´∂","–õ—É—á–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –ª–µ—Ç—è—Ç –∫ —Ç–µ–±–µ‚Äî–Ω–µ —É–≤–æ—Ä–∞—á–∏–≤–∞–π—Å—èüí´","–¢—ã —Ñ–æ—Ç–æ–≥–µ–Ω–∏—á–Ω–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—èüì∏","–¢–≤–æ–π —Å–º–µ—Ö –ª–µ—á–∏—Ç –º–æ—Ä—â–∏–Ω—ã –≤—Ä–µ–º–µ–Ω–∏üòÇ","–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –±–æ–≥–∏–Ω—è –ø—Ä–æ—Å–∏—Ç –±–ª–µ—Å–∫–∞‚Äî–¥–∞–π –µ–πüíé","–ö—Ä–∞—Å–æ—Ç–∞‚Äî—ç—Ç–æ –∫–æ–º—Ñ–æ—Ä—Ç –≤ —Å–≤–æ–µ–π –∫–æ–∂–µüß¥","–¢—ã –∏–∑–ª—É—á–∞–µ—à—å —Å—Ç–∏–ª—å –¥–∞–∂–µ –≤ –ø–∏–∂–∞–º–µüíÉ","–°–µ–≥–æ–¥–Ω—è —Ç—ã –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –¥–ª—è —á—É–∂–æ–≥–æ –æ–±—Ä–∞–∑–∞üéÄ","–¢–≤–æ—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Ä–æ—Å–∫–æ—à–Ω–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤üì≤","–í–∏–¥–Ω–æ, –∫–∞–∫ —Ç—ã –ª—é–±–∏—à—å —Å–µ–±—è‚Äî—Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å‚ù§Ô∏è",
    "–¢—ã –º–æ–∂–µ—à—å –≤—Å—ë, –Ω–æ –Ω–µ –≤—Å—ë —Å—Ä–∞–∑—É‚Äî–≤—ã–±–µ—Ä–∏ –≤–∞–∂–Ω–æ–µüéØ","–°–æ–º–Ω–µ–Ω–∏–µ —Ç–∏—Ö–æ, –Ω–æ —Ç—ã –≥—Ä–æ–º—á–µ‚Äî–¥–µ–π—Å—Ç–≤—É–πüîä","–°—Ç—Ä–∞—Ö‚Äî–Ω–µ –∑–Ω–∞–∫ ¬´—Å—Ç–æ–ø¬ª, –∞ –∑–Ω–∞–∫ ¬´–≥–æ—Ç–æ–≤—å—Å—è¬ª‚ö†Ô∏è","–ü–ª–∞–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç –ª—É—á—à–µ, —á–µ–º –∏–¥–µ–∞–ª –Ω–∞ –ø–æ—Ç–æ–ºüß≠","–ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ‚Äî–∏ —Å—Ç–∞–Ω–µ—Ç –º–Ω–æ–≥–æüìà","–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å—Ç–∞—Ä—Ç —Å —á—É–∂–æ–π —Ñ–∏–Ω–∏—à–Ω–æ–π –ª–µ–Ω—Ç–æ–πüèÅ","–¢—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —Ç–µ–º, —á—Ç–æ –ø–æ–≤—Ç–æ—Ä—è–µ—à—å‚Äî–≤—ã–±–∏—Ä–∞–π –º—É–¥—Ä–æüîÅ","–û—Ç–¥—ã—Ö‚Äî—á–∞—Å—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—åüõå","–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ‚Äî–ª–æ–≤—É—à–∫–∞, –ø—Ä–æ–≥—Ä–µ—Å—Å‚Äî—Å–≤–æ–±–æ–¥–∞üß©","–ü–æ–±–µ–∂–¥–∞–π –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ–º, –Ω–µ –Ω–∞—Å–∏–ª–∏–µ–º –Ω–∞–¥ —Å–æ–±–æ–πüîç",
    "–ï—Å–ª–∏ —É—Å—Ç–∞–ª–∞‚Äî–∏–¥–∏ –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –∏–¥–∏üê¢","–°–¥–µ–ª–∞–π —Å–µ–≥–æ–¥–Ω—è, –∑–∞ —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ —Å–∫–∞–∂–µ—à—å ¬´—Å–ø–∞—Å–∏–±–æ¬ªüôè","–°–ø—Ä–æ—Å–∏ —Å–µ–±—è ¬´–∞ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è?¬ª‚Äî–∏ –ø–æ–ø—Ä–æ–±—É–πüöÄ","–¢—ã ‚Äî –ø—Ä–æ–µ–∫—Ç –≤—Å–µ–π –∂–∏–∑–Ω–∏, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–ºüõ†","–ù–µ –∂–¥–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏‚Äî–Ω–∞—á–Ω–∏ –∏ –æ–Ω–∞ –ø–æ–¥—Ç—è–Ω–µ—Ç—Å—èüèó","–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –≤–∞–∂–Ω—É—é –∑–∞–¥–∞—á—É –∏ –¥–æ–≤–µ–¥–∏ –µ—ë –¥–æ –∫–æ–Ω—Ü–∞‚úÖ","–ò–¥–µ–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç —Ç–µ–º, –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—åüß†","–û—à–∏–±–∫–∞‚Äî—ç—Ç–æ –æ–ø—ã—Ç, –∞ –Ω–µ –ø—Ä–∏–≥–æ–≤–æ—Äüìò","–¢—ã –º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Å–≤–æ–µ–π –∏–≥—Ä—ãüéÆ","–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —ç—Ç–æ –∑–∞–±–æ—Ç–∞ –æ –±—É–¥—É—â–µ–π —Ç–µ–±–µüéÅ",
    "–£—á–∏—Å—å —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–∞–ª–µ–Ω—å–∫–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º‚Äî–æ–Ω–∏ —Ä–∞—Å—Ç—è—Ç –±–æ–ª—å—à–∏–µüå±","–°–∫–∞–∂–∏ ¬´–¥–∞¬ª –Ω–æ–≤–æ–º—É –Ω–∞–≤—ã–∫—É —Å–µ–≥–æ–¥–Ω—èüß∞","–¢–≤–æ—è —Å–∏–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ —Ç—ã –Ω–µ —Å–¥–∞—ë—à—å—Å—èüí™","–ö–∞–∂–¥—ã–π –¥–µ–Ω—å‚Äî–Ω–æ–≤—ã–π —à–∞–Ω—Å –¥–ª—è —Å—Ç–∞—Ä–æ–π –º–µ—á—Ç—ãüåÖ","–ù–∞—á–Ω–∏ —Å –¥–≤—É—Ö –º–∏–Ω—É—Ç‚Äî–∏–Ω–æ–≥–¥–∞ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ‚åöÔ∏è","–°–¥–µ–ª–∞–π –≤–∞–∂–Ω–æ–µ —Ä–∞–Ω—å—à–µ, —á–µ–º —à—É–º–Ω–æ–µüîï","–¢–æ, —á—Ç–æ —Å–ª–æ–∂–Ω–æ‚Äî—á–∞—Å—Ç–æ –∏ —Ü–µ–Ω–Ω–æüíé","–¢—ã —Å–ø—Ä–∞–≤–ª—è–ª–∞—Å—å —Ä–∞–Ω—å—à–µ‚Äî—Å–ø—Ä–∞–≤–∏—à—å—Å—è –∏ —Å–µ–π—á–∞—Åüõ°","–ù–µ –∑–∞–±—ã–≤–∞–π —Ö–≤–∞–ª–∏—Ç—å —Å–µ–±—è –ø–æ –ø—É—Ç–∏üèµ","–°–¥–µ–ª–∞–π –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ –∏ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π‚Äî–º–∞–≥–∏—è —É—Å–∏–ª–∏—Ç—Å—èü™Ñ",
    "–°–ª—É—á–∞–π–Ω—ã–π —Å–º–µ—Ö‚Äî–ª—É—á—à–µ–µ —Ç–æ–ø–ª–∏–≤–æ –¥–ª—è –¥–Ω—èüòÑ","–ù–µ–±–æ —Å–µ–≥–æ–¥–Ω—è –∫—Ä–∞—Å–∏–≤–µ–µ –æ–±—ã—á–Ω–æ–≥–æ‚Äî–∑–∞–º–µ—Ç—å‚òÅÔ∏è","–¢—ã –≤—Å—Ç—Ä–µ—Ç–∏—à—å –∑–Ω–∞–∫, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µüîó","–°–ª–æ–≤–∞ –ª—é–±–≤–∏ –∫ —Å–µ–±–µ –∑–≤—É—á–∞—Ç —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–µ–µ –≤—Å–ª—É—Öüí¨","–ü–æ–¥–∞—Ä–∏ –∫–æ–º—É-—Ç–æ 5 –º–∏–Ω—É—Ç –≤–Ω–∏–º–∞–Ω–∏—è‚Äî—ç—Ç–æ –º–Ω–æ–≥–æ‚è±","–î–æ–≤–µ—Ä—è–π –ª—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Ç–µ–ø–ª–µ–µ —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–πüî•","–ë—É–¥—å –±–µ—Ä–µ–∂–Ω–æ–π –∫ —Å–≤–æ–∏–º –≥—Ä–∞–Ω–∏—Ü–∞–º‚Äî—ç—Ç–æ –º—É–¥—Ä–æ—Å—Ç—åüö™","–í—ã–∫–ª—é—á–∏ –ª–∏—à–Ω–µ–µ‚Äî—Å—Ç–∞–Ω–µ—Ç —Å–ª—ã—à–Ω–æ –≤–∞–∂–Ω–æ–µüîá","–¢–∏—Ö–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫—Ä–∞—Å–∏–≤–µ–µ –≥—Ä–æ–º–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–πü§ç","–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—à—åüåü",
    "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ ‚Äî –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å, –∞ –≤—ã–±–æ—Äüåø","–ò–Ω–æ–≥–¥–∞ –∑–∞–±–æ—Ç–∞‚Äî—ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–µ—Å—Ç—å –≤–æ–≤—Ä–µ–º—èüçΩ","–î–µ–Ω—å —É–ª—ã–±–Ω—ë—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –Ω–∞—á–Ω—ë—à—å –ø–µ—Ä–≤–æ–πüôÇ","–õ—ë–≥–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ —Ä–µ—à–∏—Ç —Ç—è–∂—ë–ª—É—é –º—ã—Å–ª—åüö∂‚Äç‚ôÄÔ∏è","–ù–∞–π–¥–∏ –ª—É—á–∏–∫ —Å–º–µ—à–Ω–æ–≥–æ‚Äî–∏ –¥–µ–Ω—å —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µüòå","–¢–≤–æ—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Å–µ–±–µ –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞ –¥–ª—è –¥—Ä—É–≥–∏—Öüåº","–ü–æ–¥—É–º–∞–π, —á–µ–≥–æ —Ö–æ—á–µ—à—å —Ç—ã‚Äî–∏ —Å–¥–µ–ª–∞–π —ç—Ç–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–ºüìå","–†–∞–¥–æ—Å—Ç—å –Ω–µ –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å –≥—Ä–æ–º–∫–æ–π‚Äî–ø—É—Å—Ç—å –±—É–¥–µ—Ç —Ç–≤–æ–µ–πüéÅ","–ù–∞–π–¥–∏ –ø–æ–≤–æ–¥ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Ç—Ä–∏ —Ä–∞–∑–∞ —Å–µ–≥–æ–¥–Ω—è3Ô∏è‚É£","–¢—ã –≤–∞–∂–Ω–µ–µ —Å–≤–æ–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–µ–ªüóí",
    "–ü–æ–º–Ω–∏: –æ—Ç–¥—ã—Ö —Ç–æ–∂–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–µ–Ωüßò‚Äç‚ôÄÔ∏è","–í—ã–±–∏—Ä–∞–π, –∑–∞ —á—Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Åüíó","–¢–≤–æ—è –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏üõñ","–ü—É—Å—Ç—å –±—É–¥–µ—Ç –±–æ–ª—å—à–µ ¬´–º–æ–∂–Ω–æ¬ª, –º–µ–Ω—å—à–µ ¬´–Ω–∞–¥–æ¬ªü´∂","–¢—ã –∑–≤—É—á–∏—à—å –∫—Ä–∞—Å–∏–≤–µ–µ, –∫–æ–≥–¥–∞ –≤–µ—Ä–∏—à—å —Å–µ–±–µüéô","–¢–≤–æ—ë –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ‚Äî–ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –±–ª–∏–∑–∫–∏—ÖüéÄ","–°—Ç–∞–Ω—å –Ω–∞ —Å–≤–æ—é —Å—Ç–æ—Ä–æ–Ω—É‚Äî–∏ –º–∏—Ä –ø–æ–¥—Ç—è–Ω–µ—Ç—Å—èü§ù","–°—á–∞—Å—Ç—å–µ –ª—é–±–∏—Ç –ø—Ä–æ—Å—Ç–æ—Ç—É‚Äî–Ω–µ —É—Å–ª–æ–∂–Ω—è–πüçÉ","–°–¥–µ–ª–∞–π —á—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ–±—è‚Äî—Ç—ã —ç—Ç–æ –∑–∞—Å–ª—É–∂–∏–ª–∞üíù","–°–æ—Ö—Ä–∞–Ω—è–π —Ç–µ–ø–ª–æ‚Äî–≤–¥—Ä—É–≥ –∫–æ–º—É-—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω–æ –Ω—É–∂–Ω–æüî•",
    "–¢—ã ‚Äî –ª—É—á—à–∞—è –≤–µ—Ä—Å–∏—è —Å–µ–±—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—èüå∏","–ò—Å–∫—Ä–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è —É–∂–µ —Ä—è–¥–æ–º‚Äî–±—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–π‚ú®","–ü–æ–¥–µ–ª–∏—Å—å —É–ª—ã–±–∫–æ–π‚Äî–æ–Ω–∞ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è‚ûï","–ú–∏—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–º –∂–µ —Ç–æ–Ω–æ–º‚Äî–≤—ã–±–∏—Ä–∞–π –º—è–≥–∫–æ—Å—Ç—åü§ç","–õ—é–±–æ–≤—å –∫ —Å–µ–±–µ‚Äî—ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–∞üíå","–¢–≤–æ—è —Ö—Ä–∞–±—Ä–æ—Å—Ç—å –∫—Ä–∞—Å–∏–≤–∞ –¥–∞–∂–µ –≤ —Ç–∏—à–∏–Ω–µü¶Å","–°–µ–≥–æ–¥–Ω—è –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–æ, —á—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–ª–æ—Å—å –≤—á–µ—Ä–∞üîÅ","–¢—ã ‚Äî –∫–æ–º–ø–∞—Å –¥–ª—è —Å–µ–±—è, –∞ –Ω–µ –¥–ª—è –≤—Å–µ—Öüß≠","–ë—É–¥—å –±–µ—Ä–µ–∂–Ω–∞ –∫ —á—É–≤—Å—Ç–≤–∞–º‚Äî–∏ –æ–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç —è—Å–Ω–æ—Å—Ç—å—éüíß","–¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏‚Äî—à–∞–≥ –∑–∞ —à–∞–≥–æ–ºüë£"
]

async def predskaz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]
    u["username"] = (update.effective_user.username or "").lower()
    if u.get("last_prediction") == today_str():
        await update.message.reply_text(emo("üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —Å–µ–≥–æ–¥–Ω—è!"))
        return
    u["last_prediction"] = today_str()
    save_state()
    await update.message.reply_text(emo(f"üîÆ {random.choice(PREDICTIONS)}"))

# ===================== HUGS =====================
HUGS_POOL = [
    "ü§ó {a} –∫—Ä–µ–ø–∫–æ –æ–±–Ω—è–ª–∞ {b}‚Äî—Ç–µ–ø–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—Éüß∏","üíû {a} –Ω–µ–∂–Ω–æ –ø—Ä–∏–∂–∞–ª–∞—Å—å –∫ {b}‚Äî–ø—É—Å—Ç—å —Ç—Ä–µ–≤–æ–≥–∏ —Ç–∞—é—Çüå∑","ü•∞ {a} —Å–æ–≥—Ä–µ–ª–∞ {b} —Å–≤–æ–∏–º–∏ –æ–±–Ω–∏–º–∞—à–∫–∞–º–∏‚Äî–∑–∞—Ä—è–¥–∏–ª–∞—Å—å –ª—é–±–æ–≤—å—é!","ü´∂ {a} –∏ {b}‚Äî—Å–µ–≥–æ–¥–Ω—è —Å–∞–º—ã–π –º–∏–ª—ã–π –¥—É—ç—Ç!","–ö—Ç–æ –Ω–µ –æ–±–Ω–∏–º–µ—Ç—Å—è‚Äî—Ç–æ—Ç –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –∫–∞—Å—Ç–æ–º–∫–µ!","ü´Ç –¢–æ–∫—Å–∏–∫–æ–≤ —Ç–æ–∂–µ –∏–Ω–æ–≥–¥–∞ –æ–±–Ω–∏–º–∞—é—Ç‚Ä¶ –ø–æ –≥–æ–ª–æ–≤–µ‚Ä¶ —Ç–∞–±—É—Ä–µ—Ç–∫–æ–πüôÉ","–ü–µ—Ä–µ–¥–∞—é –º—è–≥–∫–æ—Å—Ç—å, –∑–∞–±–æ—Ç—É –∏ –ø–µ—á–µ–Ω—å–∫—Éüç™ ‚Äî {a}‚Üí{b}","–ö—Ä–µ–ø–∫–æ-–∫—Ä–µ–ø–∫–æ –∏ –æ—á–µ–Ω—å –Ω–µ–∂–Ω–æ‚Äî—Ç—Ä–µ–ø–µ—â–∏, –≥—Ä—É—Å—Ç—å!ü´Ç {a} –æ–±–Ω—è–ª–∞ {b}","–ü—É—Å—Ç—å —Ç—Ä–µ–≤–æ–≥–∏ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è –Ω–∞ 50% –ø–æ—Å–ª–µ —ç—Ç–∏—Ö –æ–±—ä—è—Ç–∏–πüå∏ {a} –¥–ª—è {b}"
]

async def hugs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    me = update.effective_user
    if context.args:
        raw = context.args[0]
        uid = find_user_id_by_username(raw)
        if uid:
            a = me.mention_html()
            b = display_user(uid)
            tpl = random.choice(HUGS_POOL)
            text = tpl.format(a=a, b=b) if ("{a}" in tpl or "{b}" in tpl) else f"{a} –æ–±–Ω—è–ª–∞ {b}‚Äî{tpl}"
            await update.message.reply_text(emo(text), parse_mode="HTML")
        else:
            msg = random.choice([
                f"ü§ó {me.mention_html()} –æ–±–Ω—è–ª–∞ {raw}!–¢–µ–ø–ª–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æüß∏",
                f"üíû {me.mention_html()} –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –æ–±—ä—è—Ç–∏—è {raw}.–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æüå∑"
            ])
            await update.message.reply_text(emo(msg), parse_mode="HTML")
        return
    pool = [uid for uid in state.get("known_users", []) if uid != me.id]
    if not pool:
        await update.message.reply_text(emo("–û–±–Ω–∏–º–∞—à–∫–∏ –¥–ª—è –≤—Å–µ—Ö –≤ —á–∞—Ç–µ!ü´Ç"))
        return
    target_id = random.choice(pool)
    a = me.mention_html()
    b = display_user(target_id)
    tpl = random.choice(HUGS_POOL)
    text = tpl.format(a=a, b=b) if ("{a}" in tpl or "{b}" in tpl) else f"{a} –æ–±–Ω—è–ª–∞ {b}‚Äî{tpl}"
    await update.message.reply_text(emo(text), parse_mode="HTML")

# ===================== –õ–ï–°–ë–ò-–ü–ê–†–ê =====================
async def lesbi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    pool = list(set(state.get("known_users", [])))
    if len(pool) < 2:
        await update.message.reply_text(emo("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏—Ü –¥–ª—è –ø–∞—Ä—ã"))
        return
    if state["last_lesbi_date"] == today_str() and state.get("last_lesbi_pair"):
        a, b = state["last_lesbi_pair"]
        await update.message.reply_text(emo(f"üë≠ –ü–∞—Ä–∞ –¥–Ω—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞: {display_user(a)} + {display_user(b)}üíû"), parse_mode="HTML")
        return
    a, b = random.sample(pool, 2)
    state["last_lesbi_date"] = today_str()
    state["last_lesbi_pair"] = [a, b]
    save_state()
    lines = [
        "üåà –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –ª–µ—Å–±–∏-–ø–∞—Ä–∞: {a} –∏ {b}üíã","ü´∂ –ö—Ç–æ –±—ã –º–æ–≥ –ø–æ–¥—É–º–∞—Ç—å! {a} –∏ {b}‚Äî–ø–∞—Ä–∞ –¥–Ω—è!","üíò –ê–º—É—Ä –ø–æ–ø–∞–ª —Ç–æ—á–Ω–æ –≤ —Ü–µ–ª—å! {a} –∏ {b} —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–µüòç","üíû –õ—é–±–æ–≤—å –≤–∏—Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ: {a} + {b} =‚ù§Ô∏è"
    ]
    msg = random.choice(lines).format(a=display_user(a), b=display_user(b))
    await context.bot.send_message(chat_id=CHAT_ID, text=emo(msg), parse_mode="HTML")

# ===================== –†–û–õ–ò /role =====================
ROLES = [
    "—Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –¥–µ–≤–æ—á–∫–∞üíñ","—Å–∞–º–∞—è –º–∏–ª–∞—è –∫–∏—Å–∫–∞üò∫","—Å–∞–º–∞—è –Ω–µ–∂–Ω–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞üå∏","—Å–∞–º–∞—è –≥—Ä—É—Å—Ç–Ω–∞—è –ø–µ–ª—å–º–µ—à–∫–∞üòî","—Å–∞–º–∞—è —Å–∏—è—é—â–∞—è –∑–≤—ë–∑–¥–æ—á–∫–∞‚ú®","—Å–∞–º–∞—è –∑–ª–∞—è –≤–µ–¥—å–º–æ—á–∫–∞üßô‚Äç‚ôÄÔ∏è","—Å–∞–º–∞—è –º–æ–¥–Ω–∞—è –∏–∫–æ–Ω–∫–∞üë†","—Å–∞–º–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–∞—è –¥—É—à–∞üåÄ","—Å–∞–º–∞—è —Ä–∞–¥—É–∂–Ω–∞—è –±—É–ª–æ—á–∫–∞üåà","—Å–∞–º–∞—è –æ–¥–∏–Ω–æ–∫–∞—è —Ç—É—á–∫–∞üåß","–∫–∞–∫–∞—à–∫–∞ –¥–Ω—èüí©","–±—É–Ω—Ç–∞—Ä–∫–∞ —á–∞—Ç–∞üî•","–ø—Å–∏—Ö–æ–≤–∞–Ω–Ω–∞—è —Ñ–µ—èü§Ø","–ø–ª–∞–∫—Å–∞ –¥–Ω—èüò≠","–¥—Ä–∞–º–∞–∫–≤–∏–Ω –≤–µ—á–µ—Ä–∞üëë","—Å–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è –∂–∞–±–∞üê∏","–∫–∏—Å–∫–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–ºüêæ","–∫–æ—Ä–æ–ª–µ–≤–∞ —Å–ø–∞–º–∞üì±","—Å–∞–º–∞—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–∞—èüé≤","–¥–µ–≤–æ—á–∫–∞ –≤–∞–π–±–∞üéß","—Å–∞–º–∞—è —ç—Å—Ç–µ—Ç–∏—á–Ω–∞—è –Ω–∞ —Ä–∞–π–æ–Ω–µüé®","–∏–Ω—Å—Ç–∞-–¥–∏–≤–∞ –¥–Ω—èüì∏","—Å–∞–º–∞—è –ø–æ—é—â–∞—è –≤ –¥—É—à–µüé§","—Å–∞–º–∞—è —Å–µ–∫—Å–∏ –≤ –ø–∏–∂–∞–º–µüíÉ","–∫–æ—Ä–æ–ª–µ–≤–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∏üéâ","–¥–µ–≤–æ—á–∫–∞ —Å –∫–æ—Å–º–æ—Å–æ–º –≤ –≥–ª–∞–∑–∞—Öüåå","–±–æ–≥–∏–Ω—è —Ñ–ª–∏—Ä—Ç–∞üíã","–¥–µ–≤–∞ —Ö–∞–æ—Å–∞ü´¶","—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∞–≥–µ–Ω—Ç —á–∞—Ç–∞üïµÔ∏è‚Äç‚ôÄÔ∏è","–ø–µ—Ä—Å–∏–∫ –¥–Ω—èüçë","–∫–æ—à–º–∞—Ä –≤—Å–µ—Ö –±—ã–≤—à–∏—Öüíî","–∫–æ—Ñ–µ–π–Ω–∞—è –±–æ–≥–∏–Ω—è‚òïÔ∏è","—Å–∞–º–∞—è –≥—Ä–æ–º–∫–∞—è —Ä–∂—É–Ω—å–∫–∞üòÇ","–¥–µ–≤–æ—á–∫–∞-—Å—é—Ä–ø—Ä–∏–∑üé≤","—Å–ª—É—á–∞–π–Ω—ã–π –≥–µ–Ω–∏–πüß†","–ª–æ–≤—É—à–∫–∞ –¥–ª—è —Å–µ—Ä–¥–µ—Ü‚ù§Ô∏è‚Äçüî•","–æ–±–Ω–∏–º–∞—à–∫–∞ –Ω–∞ –Ω–æ–∂–∫–∞—Öü§ó","—Å–∞–º–∞—è —Ä–∞–Ω–∏–º–∞—è –¥—É—à–∞ü•∫","–Ω–æ—Å–∏–∫-–∫–Ω–æ–ø–æ—á–∫–∞ –¥–Ω—èüëÉ","–¥–µ–≤–æ—á–∫–∞, –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—Ç—Å—è —á–∞–π –Ω–∞–ª–∏—Ç—åüçµ","—Å–µ—Ä–¥—Ü–µ –Ω–∞ —Ä–∞—Å–ø–∞—à–∫—Éüíò","—Å–ª–∞–¥–æ—Å—Ç—å —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ –≥—Ä—É—Å—Ç–∏üç¨","–æ–±–ª–∞–∫–æ –Ω–µ–∂–Ω–æ—Å—Ç–∏‚òÅÔ∏è","–º–∏–ª–∞—à–∫–∞ –¥–Ω—èüß∏","—Ç—ë–ø–ª—ã–π –ø–ª–µ–¥ —Å—Ä–µ–¥–∏ —à—Ç–æ—Ä–º–∞ü´Ç","—É–ª—ã–±–∫–∞, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ—â–∞–µ—à—å –≤—Å—ëüòä","–¥–µ–≤–æ—á–∫–∞-–æ–±–Ω–∏–º–∞—à–∫–∞ü§ç","—Å–∞–º–∞—è –¥—Ä–∞–º–∞—Ç–∏—á–Ω–∞—èüé≠","–∫–∞–ø—Ä–∏–∑—É–ª—è –¥–Ω—èüòà","–¥–µ–≤–æ—á–∫–∞ —Å –ø–ª–∞–Ω–æ–º(–∏ –±–∞—Ä—Ç–µ—Ä–æ–º)üìã","–≤—ã—Å—à–∞—è –ª–∏–≥–∞ —Ñ–µ–º–∏–Ω–∏–∑–º–∞üßú‚Äç‚ôÄÔ∏è","—Ç–∞, –∫—Ç–æ –¥–µ–ª–∞–µ—Ç –º–æ–∑–≥–∏ü•¥","—à–∞–ª—å–Ω–∞—è –∏–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞üëë","–≥–ª–∞–≤–Ω–∞—è –∑–≤–µ–∑–¥–∞ —á–∞—Ç–∞üåü","—Å–∞–º–∞—è –∑–∞–Ω—è—Ç–Ω–∞—è –∏–Ω—Ç—Ä–∏–≥–∞–Ω–∫–∞üß©","–¥–µ–≤–æ—á–∫–∞ —Å –∫–æ—Ä–æ–Ω–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—éüë∏","—Ñ–µ—è —Å –±–¥—Å–º-–∫—Ä—ã–ª—å—è–º–∏üßö‚Äç‚ôÄÔ∏è","–∑–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω–∞—è –∫–æ—Ç–ª–µ—Ç–∫–∞üçñ","–≤–æ–ª—à–µ–±–Ω–∏—Ü–∞ —É—é—Ç–Ω—ã—Ö –≤–µ—á–µ—Ä–æ–≤üåô","–º–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –±–æ–≥–∏–Ω—è —Å–Ω–∞üò¥","–≤–µ–¥—å–º–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª–∫–∞—Öüßô‚Äç‚ôÄÔ∏è","–≤–µ–¥—å–º–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –≤–∞—Ä–∏—Ç –±–æ—Ä—âüßπ","–¥–µ–≤–æ—á–∫–∞-–∑–µ–ª—å–µüß™","—Ç–∞, —á—Ç–æ —Ç–∞–Ω—Ü—É–µ—Ç –ø–æ–¥ –ª—É–Ω–æ–πüíÉ","–¥–µ–≤–æ—á–∫–∞-–æ–π-–≤—Å—ëüôÑ","–ø–∏–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–±–ª—É–∫–∞—ÖüçÜ","–≥—Ä—É—Å—Ç–Ω—ã–π –∫–æ—Ç–∏–∫ –≤ —Ç–µ–ª–µ —Å—Ç–µ—Ä–≤—ãüòø","—Ç–∞, —á—Ç–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—ÇüôÖ‚Äç‚ôÄÔ∏è","–∫—Ä–∏–Ω–∂-–∫–æ—Ä–æ–ª–µ–≤–∞ü´†","—à–∞—Ä–∏–∫ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏üéà","—Ö–∏—Ç—Ä–∞—è –∂–æ–ø–∫–∞üçë","–ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æüí®","–ø–æ–∑–æ—Ä –∫–ª–∞–Ω–∞ü§°","–æ—à–∏–±–∫–∞ –ø—Ä–∏—Ä–æ–¥—ã‚ö†Ô∏è","—Ñ–∏–∞—Å–∫–æ –¥–Ω—èüìâ","—Ö–æ–¥—è—á–∏–π –∫—Ä–∏–Ω–∂ü´†","–º–∏–Ω—É—Å –≤ –∫–∞—Ä–º—Éüëé","–Ω–µ—É–¥–∞—á–∞ –Ω–µ–¥–µ–ª–∏üíÄ","—Ö–∑ –∫—Ç–æ –∏ –∑–∞—á–µ–º —Ç—É—ÇüôÉ","–ø—Ä–∏—á–∏–Ω–∞ —Å—Ç—ã–¥–∞ —Å–µ–≥–æ–¥–Ω—èüò¨","–±–∞–≥ –≤ –º–∞—Ç—Ä–∏—Ü–µüï≥","–≥–ª–∞–≤–Ω—ã–π –ø–æ–≤–æ–¥ –¥–ª—è —Ñ–µ–π—Å–ø–∞–ª–º–∞ü§¶‚Äç‚ôÄÔ∏è","—Å–∞–º–∞—è –±–µ—Å—è—á–∞—èüßø","—Ñ–µ–π–ª –≤–µ–∫–∞üòµ","–∞–Ω—Ç–∏-–∑–≤–µ–∑–¥–∞ —á–∞—Ç–∞üö´","–ø—Ä–æ–∫–ª—è—Ç–∏–µ –¥–Ω—èüßü‚Äç‚ôÄÔ∏è","–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞ –≤ —é–±–∫–µüå™","–ø–æ–≤–æ–¥ –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞üö™","—Ñ–æ–Ω–æ–≤—ã–π —à—É–ºüîá","–≥–ª—é–∫ —Å–∏—Å—Ç–µ–º—ãüñ•","–Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–µ —Å –≤–∞–π–±–æ–ºüòµ‚Äçüí´","—Ä–∞–Ω–¥–æ–º–Ω–∞—è npcüíª","–±–∞–≥ —Å –ª–∏—Ü–æ–ºü´•","—É—Ä–æ–Ω –ø–æ –≥–ª–∞–∑–∞–ºüëÅ","—Ç–∞, –∫–æ–≥–æ –ª—É—á—à–µ –Ω–µ –≤—Å–ø–æ–º–∏–Ω–∞—Ç—åüëª","–º–æ—Ä–∞–ª—å–Ω—ã–π –≤–∏—Ä—É—Åü¶†","—Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—åüï≥","–±–∞–Ω –±–µ–∑ —Å—É–¥–∞ –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—èüö∑"
]

async def role_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    store_user(update.effective_user)
    if update.message and update.message.reply_to_message:
        target = update.message.reply_to_message.from_user
        store_user(target)
        target_html = target.mention_html()
    elif context.args:
        raw = context.args[0].strip()
        uid = find_user_id_by_username(raw)
        if uid:
            target_html = display_user(uid)
        else:
            target_html = raw if raw.startswith("@") else f"@{raw}"
    else:
        pool = [uid for uid in set(state.get("known_users", [])) if uid != update.effective_user.id]
        if not pool:
            await update.message.reply_text(emo("–ù—É–∂–Ω–æ —Ö–æ—Ç—è –±—ã –¥–≤–µ —É—á–∞—Å—Ç–Ω–∏—Ü—ã –≤ –±–∞–∑–µ‚ú® –°–∫–∞–∂–∏ –¥–µ–≤–æ—á–∫–∞–º –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ —á–∞—Ç."))
            return
        rnd_id = random.choice(pool)
        target_html = display_user(rnd_id)
    role_text = random.choice(ROLES)
    await update.message.reply_text(emo(f"{target_html} —Å–µ–≥–æ–¥–Ω—è {role_text}"), parse_mode="HTML")

# ===================== –î–ï–ù–¨ –†–û–ñ–î–ï–ù–ò–Ø (–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞) =====================
def _parse_day_month(bday: str):
    if not bday:
        return None
    bday = bday.strip()
    for fmt in ("%d.%m.%Y", "%d.%m"):
        try:
            dt = datetime.strptime(bday, fmt)
            return dt.day, dt.month
        except Exception:
            pass
    return None

async def birthday_job(context: ContextTypes.DEFAULT_TYPE):
    today = date.today()
    for suid, u in state["users"].items():
        dm = _parse_day_month(u.get("bday", ""))
        if not dm:
            continue
        d, m = dm
        if d == today.day and m == today.month:
            name = u.get("name") or tg_link_from_id(int(suid), "–¥–µ–≤–æ—á–∫–∞")
            text = f"üéÇ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {name}!–ü–æ–∂–µ–ª–∞–µ–º —Å—á–∞—Å—Ç—å—è, –ª—é–±–≤–∏ –∏ –ø–æ–±–µ–¥!ü•≥"
            try:
                await context.bot.send_message(chat_id=CHAT_ID, text=emo(text), parse_mode="HTML")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ: {e}")

# ===================== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ò –ó–ê–ü–£–°–ö =====================
def build_application():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(ChatMemberHandler(greet_new_member, ChatMemberHandler.CHAT_MEMBER))
    app.add_handler(ChatMemberHandler(farewell_member, ChatMemberHandler.CHAT_MEMBER))
    edit_conv = ConversationHandler(
        entry_points=[CommandHandler("editprofile", editprofile)],
        states={
            STEP_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_name)],
            STEP_NICK: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_nick)],
            STEP_UID:  [MessageHandler(filters.TEXT & ~filters.COMMAND, step_uid)],
            STEP_BDAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_bday)],
            STEP_CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_city)],
            STEP_TIKTOK: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_tiktok)],
            STEP_QUOTE: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_quote)],
        },
        fallbacks=[],
    )
    app.add_handler(edit_conv)
    app.add_handler(CommandHandler("profile", profile))
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about))
    app.add_handler(CommandHandler("rules", rules))
    app.add_handler(CommandHandler("info", info_cmd))
    app.add_handler(CommandHandler("menu", menu))
    app.add_handler(CommandHandler("hide", hide))
    app.add_handler(CommandHandler("pipisa", pipisa))
    app.add_handler(CommandHandler("duel", duel_cmd))
    app.add_handler(CommandHandler("top5", top5))
    app.add_handler(CommandHandler("rating", rating))
    app.add_handler(CommandHandler("hugs", hugs))
    app.add_handler(CommandHandler("lesbi", lesbi))
    app.add_handler(CommandHandler("role", role_cmd))
    app.job_queue.run_daily(birthday_job, time(hour=9, minute=0))
    return app

if __name__ == "__main__":
    application = build_application()
    print("OnlyGirls bot –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    application.run_polling(close_loop=False)
