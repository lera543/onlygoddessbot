# -*- coding: utf-8 -*-
import json
import logging
import random
from datetime import datetime, date
from pathlib import Path

from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup
)
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ChatMemberHandler,
    CallbackQueryHandler, ConversationHandler, ContextTypes, filters
)

# ===================== –ù–ê–°–¢–†–û–ô–ö–ò =====================
TOKEN = "8215387975:AAHS_mMHzXBGtDVevEBiSwsLcLPChs7Yq7k"
CHAT_ID = -1001849339863  # –æ–±—â–∏–π —á–∞—Ç

DATA_FILE = Path("data.json")

logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    level=logging.INFO
)
logger = logging.getLogger("OnlyGirlsBot")


# ===================== –•–†–ê–ù–ò–õ–ò–©–ï =====================
# users: { user_id: {
#   "name", "nickname", "uid", "bday", "city", "social", "joined_date",
#   "quote", "pipisa", "last_pipisa", "last_prediction", "last_tarot",
#   "married_to"
# } }
# proposals: { target_id: proposer_id }
# divorce_requests: { partner_id: requester_id }
# last_lesbi_date: "YYYY-MM-DD"
# last_lesbi_pair: [user_id_a, user_id_b]
state = {
    "users": {},
    "proposals": {},
    "divorce_requests": {},
    "last_lesbi_date": None,
    "last_lesbi_pair": None
}


def load_state():
    if DATA_FILE.exists():
        try:
            data = json.loads(DATA_FILE.read_text(encoding="utf-8"))
            state.update(data)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å data.json: {e}")


def save_state():
    try:
        DATA_FILE.write_text(json.dumps(state, ensure_ascii=False, indent=2), encoding="utf-8")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è data.json: {e}")


load_state()


# ===================== –¢–ï–ö–°–¢ –ü–†–ê–í–ò–õ (–†–û–í–ù–û –ö–ê–ö –¢–´ –î–ê–õ–ê) =====================
RULES_TEXT = """‚ù∂. –ö–∞–∂–¥–∞—è —É—á–∞—Å—Ç–Ω–∏—Ü–∞ –∫–ª–∞–Ω–∞ –æ–±—è–∑–∞–Ω–∞:

1.1 –ó–Ω–∞—Ç—å –∏ —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞;

1.2 –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –ø—Ä–∏—Å—Ç–∞–≤–∫—É ‡¶î (–≤ –∫–æ–Ω—Ü–µ –Ω–∏–∫–∞);

1.3 –£—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–∞—Å—Ç–æ–º–∫–∞—Ö, —Å–∫—Ä–∏–º–∞—Ö –∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö —Å —Å–æ–∫–ª–∞–Ω–æ–≤—Ü–∞–º–∏;

1.4 –ë—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π –≤ —á–∞—Ç–µ, –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ –æ–ø—Ä–æ—Å–∞—Ö, —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–∞—Å—Ç–æ–º–∫–∞—Ö,  —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ—Å—å–±—ã —Å–æ–∫–ª–∞–Ω–æ–≤—Ü–µ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏;

1.5 –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–≥–∞—Ç—å —Å–æ–∫–ª–∞–Ω–æ–≤—Ü–∞–º –∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞—Ç—å –≤–Ω—É—Ç—Ä–∏–∫–ª–∞–Ω–æ–≤—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤;

1.6 –ó–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞ (–µ—Å–ª–∏ —Ç—ã —Ç–æ–∫—Å–∏–∫, —Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑—É–º–Ω–æ–≥–æ).

‚ù∑. –î–µ–≤–æ—á–∫–∏ —Å–æ—Å—Ç–æ—è—â–∏–µ –≤ –∫–ª–∞–Ω–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ: 

2.1 –î–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –æ –∫–ª–∞–Ω–æ–≤—ã—Ö –±–∏—Ç–≤–∞—Ö –æ—Ç –∏–º–µ–Ω–∏ –∫–ª–∞–Ω–∞, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–≤ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é;

2.2 –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏–∫–ª–∞–Ω–æ–≤–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –ø–æ–¥–Ω—è—Ç–∏—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞. 

‚ù∏. –£—á–∞—Å—Ç–Ω–∏—Ü–∞–º –∫–ª–∞–Ω–∞ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è:

3.1 –†–∞–∑–≥–ª–∞—à–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–ª–∞–Ω–∞, –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏–∑ –∫–ª–∞–Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞;

3.2 –û—Å–∫–æ—Ä–±–ª—è—Ç—å —Å–æ–∫–ª–∞–Ω–æ–≤—Ü–µ–≤(!);

3.3 –°–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–∞ —Ç–µ–º—É –ø–æ–ª–∏—Ç–∏–∫–∏, —Ä–µ–ª–∏–≥–∏–∏ –∏ —Ç.–ø.;

3.4 –õ—é–±—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ—Ä—Ç–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∫–ª–∞–Ω–∞.

‚ùπ. –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ: 

4.1 –õ—é–±–∞—è —É—á–∞—Å—Ç–Ω–∏—Ü–∞ –∫–ª–∞–Ω–∞ –≤–ø—Ä–∞–≤–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ –Ω–∞–∫–∞–∑–∞–Ω–∏–∏ –∏–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —É—á–∞—Å—Ç–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä–∞—è:

- –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏;

- —Å–≤–æ–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (–±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º) –¥–µ–ª–∞–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–π —É—Å–ø–µ—à–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∞–Ω–∞ –∏–ª–∏ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –µ—ë –∑–∞—Ç—Ä—É–¥–Ω—è–µ—Ç;

- –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ—à–µ–Ω–∏—è, –ø—Ä–æ—Å—å–±—ã –∏ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è, –ø—Ä–∏–Ω—è—Ç—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–ª–∞–Ω–∞; 

- –Ω–∞—Ä—É—à–∞–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞;

4.2 –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏—Ü–∞ –∫–ª–∞–Ω–∞ –ø—Ä–æ–ø–∞–¥–∞–µ—Ç –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å—Ä–æ–∫ –±–æ–ª–µ–µ 7 –¥–Ω–µ–π, —Ç–æ –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç–∞ –∏—Å–∫–ª—é—á–µ–Ω–∞.

‚ù∫. –ò–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª–∞ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π:

5.1 –ü—Ä–∞–≤–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –ø–æ–ø—Ä–∞–≤–æ–∫ –≤ –ø—Ä–∞–≤–∏–ª–∞ –æ–±–ª–∞–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞–Ω–∞. –ù–æ! –£—á–∞—Å—Ç–Ω–∏—Ü—ã –∫–ª–∞–Ω–∞ –≤ –ø—Ä–∞–≤–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ –ø–æ–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.

‚ùª. –ú–´ –ü–†–û–¢–ò–í –í–û–ô–ù–´! –í –Ω–∞—à–µ–º –∫–ª–∞–Ω–µ –¥–µ–≤—á–æ–Ω–∫–∏ —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω. –í–°–ï —Ç–µ–º—ã –æ –ø–æ–ª–∏—Ç–∏–∫–µ –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã.  –ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –∫–ª–∞–Ω–∞. 

P.S. –í —á–∞—Ç–µ –º—ã –º–Ω–æ–≥–æ –∫–æ–≥–æ –æ–±—Å—É–∂–¥–∞–µ–º, –∏ –µ—Å–ª–∏ –≤–∞–º –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ —ç—Ç–æ —á–∏—Ç–∞—Ç—å –∏–ª–∏ –∂–µ (–Ω–µ –¥–∞–π –±–æ–≥üòÇ) –≤ —ç—Ç–∏—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö –±—É–¥—É—Ç –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞–Ω—ã –≤–∞—à–∏ –¥—Ä—É–∑—å—è, —Ç–æ –ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º —Å—Ä–∞–∑—É –≤ —á–∞—Ç –∏–ª–∏ –∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏) –ù–µ –Ω—É–∂–Ω–æ —Å–ª–∏–≤–∞—Ç—å –∏–Ω—Ñ—É —Å —á–∞—Ç–∞ –∏–ª–∏ –∂–µ –º–æ–ª—á–∞—Ç—å, –∞ –ø–æ—Ç–æ–º –≤—ã—Ö–æ–¥–∏—Ç—å —Å –∫–ª–∞–Ω–∞ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æü•π –õ—É—á—à–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –∏ –º—ã –æ–±—Å—É–¥–∏–º –∏ —Ä–µ—à–∏–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å–∏–∫–∏, —á–µ–º –≤ –∫—Ä—ã—Å—É —Å–ª–∏–≤–∞—Ç—å –∏–Ω—Ñ—Éü•∫"""


# ===================== –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–Ø (200 —à—Ç.) =====================
# 100 —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö, 50 –∫—Ä–∞—Å–æ—Ç—ã, 50 –º–æ—Ç–∏–≤–∞—Ü–∏–∏ ‚Äî –≤—Å–µ —Å —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Ü–µ.
PREDICTIONS = [
    # 1‚Äì100: —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
    "–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –æ–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
    "–£–ª—ã–±–∫–∞ —Ä–µ—à–∏—Ç –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è üòä",
    "–î–µ–ª–∞–π –ø–æ –ª—é–±–≤–∏ ‚Äî –∏ –±—É–¥–µ—Ç –∫–∞–π—Ñ üíñ",
    "–í—Å–µ–ª–µ–Ω–Ω–∞—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ ‚ú®",
    "–¢—ã –≤–∏–¥–∏—à—å –±–æ–ª—å—à–µ, —á–µ–º –¥—Ä—É–≥–∏–µ ‚Äî –¥–æ–≤–µ—Ä—å—Å—è —Å–µ–±–µ üëÅÔ∏è",
    "–ú–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ —Ç–æ–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥ üë£",
    "–¢–æ, —á—Ç–æ –∫–∞–∑–∞–ª–æ—Å—å —Å–ª–æ–∂–Ω—ã–º, –æ–∫–∞–∂–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º üîì",
    "–ö—Ç–æ-—Ç–æ —Å–µ–≥–æ–¥–Ω—è –º–µ—á—Ç–∞–µ—Ç –æ –≤—Å—Ç—Ä–µ—á–µ —Å —Ç–æ–±–æ–π üíå",
    "–¢—ã ‚Äî –∫–∞–∫ —É—Ç—Ä–µ–Ω–Ω–∏–π –ª—É—á, —Ç—ë–ø–ª—ã–π –∏ —á–µ—Å—Ç–Ω—ã–π ‚òÄÔ∏è",
    "–ë–µ—Ä–∏ —Ç–æ, —á—Ç–æ –ø–æ –ø—Ä–∞–≤—É —Ç–≤–æ—ë üóùÔ∏è",
    "–ù–æ–≤–∞—è –¥—Ä—É–∂–±–∞ —Ä—è–¥–æ–º ‚Äî –±—É–¥—å –æ—Ç–∫—Ä—ã—Ç–∞ ü§ù",
    "–ù–µ —Å–ø–µ—à–∏ ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–µ —É–π–¥—ë—Ç üï∞Ô∏è",
    "–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∏–∑ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è üßò‚Äç‚ôÄÔ∏è",
    "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ ‚Äî —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ ü¶∏‚Äç‚ôÄÔ∏è",
    "–°–µ–≥–æ–¥–Ω—è ‚Äî –¥–µ–Ω—å –∫—Ä–∞—Å–∏–≤—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π üß©",
    "–°–ª—É—Ö–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Å–ª—É—Ö–∞–º–∏ ‚Äî –±—É–¥—å –≤—ã—à–µ üïäÔ∏è",
    "–¢—ã —É–º–µ–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–∏–≤—ã–∫–ª–∞ –¥—É–º–∞—Ç—å üß†",
    "–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ –∑–Ω–∞–µ—Ç, –∫—É–¥–∞ –∏–¥—Ç–∏ ‚ù§Ô∏è",
    "–ü–æ–±–∞–ª—É–π —Å–µ–±—è ‚Äî —Ç—ã —ç—Ç–æ –∑–∞—Å–ª—É–∂–∏–ª–∞ üç∞",
    "–°—Ç–∞–Ω—å —Ç–µ–º —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ–º—É —Å–∞–º–æ–π –ø—Ä–∏—è—Ç–Ω–æ –ø–∏—Å–∞—Ç—å üí¨",
    "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞ ‚Äî –≤ —Ö–æ—Ä–æ—à–µ–º —Å–º—ã—Å–ª–µ ‚ö°Ô∏è",
    "–°–∫–∞–∂–∏ ¬´–¥–∞¬ª –º–∞–ª–µ–Ω—å–∫–æ–º—É –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—é üéí",
    "–°–º–µ–ª–æ—Å—Ç—å ‚Äî —ç—Ç–æ –º—è–≥–∫–æ –∏ —Å–ø–æ–∫–æ–π–Ω–æ —Å–∫–∞–∑–∞—Ç—å ¬´—è –º–æ–≥—É¬ª üêö",
    "–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –ª–µ–≥–∫–æ, –∫–∞–∫ –¥—ã—Ö–∞–Ω–∏–µ üå¨Ô∏è",
    "–ü—Ä–∏–º–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç ‚Äî –æ–Ω –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π üå∑",
    "–¢—Ä–∏ –≥–ª–æ—Ç–∫–∞ –≤–æ–¥—ã ‚Äî –∏ –≥–æ–ª–æ–≤–∞ —è—Å–Ω–µ–µ üíß",
    "–°–æ–º–Ω–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ç—É–º–∞–Ω, —Å–æ–ª–Ω—Ü–µ —É–∂–µ –≤—Å—Ç–∞—ë—Ç üåÑ",
    "–¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è ‚Äî –∫–∞–∫ Wi-Fi: –Ω–µ–≤–∏–¥–∏–º–∞, –Ω–æ —Ç—è–Ω–µ—Ç üîÆ",
    "–°–¥–µ–ª–∞–π –¥–æ–±—Ä–æ –∏ –∑–∞–±—É–¥—å ‚Äî –æ–Ω–æ –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è üåà",
    "–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π ‚Äî —É —Ç–µ–±—è —Å–≤–æ—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è üåå",
    "–ù–µ–∂–Ω–æ—Å—Ç—å –∫ —Å–µ–±–µ ‚Äî –ª—É—á—à–∏–π –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å ü´∂",
    "–ü—É—Å—Ç—å –¥—É—à–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç–∞–Ω—Ü—É–µ—Ç üíÉ",
    "–¢—ã ‚Äî —á—å—ë-—Ç–æ ¬´–ø–æ–≤–µ–∑–ª–æ¬ª üçÄ",
    "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É, —Ç—ã –Ω–µ –º–∞—à–∏–Ω–∞ ‚è∏Ô∏è",
    "–ì—Ä–∞–Ω–∏—Ü—ã ‚Äî —ç—Ç–æ –ª—é–±–æ–≤—å –∫ —Å–µ–±–µ üß±",
    "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å —É–¥–æ–±–Ω–æ–π –Ω–∏–∫–æ–º—É üëë",
    "–¢–≤–æ—è –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –∑–æ–ª–æ—Ç–æ ü™ô",
    "–û–±–µ—Ä–Ω–∏—Å—å: —Ç—ã —É–∂–µ –¥–∞–ª–µ–∫–æ –ø—Ä–æ—à–ª–∞ üõ§Ô∏è",
    "–í—Å–µ–ª–µ–Ω–Ω–∞—è —Å–ª—ã—à–∏—Ç —à—ë–ø–æ—Ç–æ–º ‚Äî –≥–æ–≤–æ—Ä–∏ –º—è–≥–∫–æ üåô",
    "–ü–∏—Å—å–º–æ —Å–∞–º–æ–π —Å–µ–±–µ ‚Äî –ª—É—á—à–µ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ ‚úçÔ∏è",
    "–°–º–µ—Ö –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –∫–∞–π—Ñ –æ—Ç –∂–∏–∑–Ω–∏ üòÇ",
    "–ù–∞–π–¥–∏ –º–∞–ª–µ–Ω—å–∫—É—é –∫—Ä–∞—Å–æ—Ç—É —Ä—è–¥–æ–º –∏ —É–ª—ã–±–Ω–∏—Å—å üåº",
    "–ß—É–¥–µ—Å–∞ –ª—é–±—è—Ç, –∫–æ–≥–¥–∞ –≤ –Ω–∏—Ö –≤–µ—Ä—è—Ç ‚ú®",
    "–°–¥–µ–ª–∞–π —à–∞–≥ –±–µ–∑ —à—É–º–∞ ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–∂—É—Ç —Å–∞–º–∏ üìà",
    "–ë—É–¥—å —Ç–∞–º, –≥–¥–µ —Ç–µ–ø–ª–æ –∫ —Ç–µ–±–µ üî•",
    "–£—Å—Ç–∞—ë—à—å ‚Äî –æ—Ç–¥–æ—Ö–Ω–∏, –Ω–µ —Å–¥–∞–≤–∞–π—Å—è üõå",
    "–í–æ–∫—Ä—É–≥ —Ç–µ–±—è –±–æ–ª—å—à–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á–µ–º –∫–∞–∂–µ—Ç—Å—è ü§ó",
    "–ü—É—Å—Ç—å –≤ –ª–µ–Ω—Ç–µ –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ –º—É—Å–æ—Ä–∞ –∏ –±–æ–ª—å—à–µ —Ç–µ–±—è üßπ",
    "–°–ª–æ–≤–∞ –≤–∞–∂–Ω—ã ‚Äî –≤—ã–±–∏—Ä–∞–π –Ω–µ–∂–Ω—ã–µ üå∏",
    "–¢—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂, –Ω–µ —Å—Ç–∞—Ç–∏—Å—Ç üé¨",
    "–†–∞–∑—Ä–µ—à–∏ —Å–µ–±–µ –±—ã—Ç—å –Ω–µ–∏–¥–µ–∞–ª—å–Ω–æ–π –∏ —Å—á–∞—Å—Ç–ª–∏–≤–æ–π üéà",
    "–¢–≤–æ—è –∑–∞–±–æ—Ç–∞ –æ –¥—Ä—É–≥–∏—Ö –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ ‚Äî –Ω–µ –∑–∞–±—É–¥—å –æ —Å–µ–±–µ ü´ñ",
    "–ò–Ω–æ–≥–¥–∞ ¬´–Ω–µ—Ç¬ª ‚Äî —ç—Ç–æ –ª—É—á—à–∏–π ¬´–¥–∞¬ª —Å–µ–±–µ üö™",
    "–¢–≤–æ–π —Å–º–µ—Ö ‚Äî —Ç–≤–æ–π —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π –ø–∞—Ä—Ñ—é–º üíê",
    "–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–µ –∫—Ä–æ—Å—Å—ã –∏ –∏–¥–∏ –≤ –∫–∞–π—Ñ üëü",
    "–¢—ã –º–æ–∂–µ—à—å –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ —Ç–æ—á–Ω–æ ‚Äî —ç—Ç–æ —Å–∏–ª–∞ üê¢",
    "–°–ª—É—à–∞–π —Ç–µ–ª–æ ‚Äî –æ–Ω–æ –º—É–¥—Ä–µ–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è üóìÔ∏è",
    "–û—Ç–∫–ª—é—á–∏ –ª–∏—à–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äî –≤–∫–ª—é—á–∏ —Å–µ–±—è üîï",
    "–¢–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è ‚Äî –Ω–µ –∫–∞–ø—Ä–∏–∑, –∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üß≠",
    "–ü–æ–∑–≤–æ–ª—å —á—É–¥–µ—Å–∞–º —Å–ª—É—á–∞—Ç—å—Å—è –±–µ–∑ –ø–ª–∞–Ω–∞ üéÅ",
    "–¢—ã ‚Äî –º—è–≥–∫–∞—è –º–æ—â—å üåä",
    "–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –ø–æ–≤–æ–¥ —Å–∫–∞–∑–∞—Ç—å ¬´–≤–æ—Ç —ç—Ç–æ –¥–∞!¬ª ü§©",
    "–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏ ‚Äî –∏ –¥–≤–µ—Ä–∏ –æ—Ç–∫—Ä–æ—é—Ç—Å—è üö™",
    "–¢—ã ‚Äî –∫–∞–∫ —Ö–æ—Ä–æ—à–∏–π –ø–ª–µ–π–ª–∏—Å—Ç: –∏ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å, –∏ –¥—É–º–∞—Ç—å üéß",
    "–ß–∏—Å—Ç–∞—è –∫–æ–º–Ω–∞—Ç–∞ ‚Äî —á–∏—Å—Ç–∞—è –≥–æ–ª–æ–≤–∞ üßº",
    "–ù–µ —Ç—Ä–∞—Ç—å –∫—Ä–∞—Å–æ—Ç—É –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è üíÑ",
    "–ü—É—Å—Ç—å –±—É–¥–µ—Ç –≤–∫—É—Å–Ω—ã–π –∫–æ—Ñ–µ –∏ —Å–ø–æ–∫–æ–π–Ω—ã–π –¥–µ–Ω—å ‚òïÔ∏è",
    "–°–∞–º–∞—è –≤–∞–∂–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ ‚Äî —Å —Å–æ–±–æ–π –≤ –∑–µ—Ä–∫–∞–ª–µ ü™û",
    "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∫–æ–º—É-—Ç–æ –ª–µ–≥—á–µ –¥—ã—à–∏—Ç—Å—è üíû",
    "–ë—É–¥—å –±–µ—Ä–µ–∂–Ω–∞ –∫ —Å–µ–±–µ, –∫–∞–∫ –∫ –ª—é–±–∏–º–æ–π –ø–æ–¥—Ä—É–≥–µ üíå",
    "–û—Ç–ø—É—Å—Ç–∏ —Ç–æ, —á—Ç–æ —Ç—è–Ω–µ—Ç –≤–Ω–∏–∑ ‚Äî –∏ –≤–∑–ª–µ—Ç–∏—à—å üéà",
    "–°–µ–≥–æ–¥–Ω—è –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è ¬´—Å –Ω—É–ª—è¬ª üîÅ",
    "–¢—ã —É–º–µ–µ—à—å —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–µ–ª–æ—á–∞–º ‚Äî —ç—Ç–æ —Ä–µ–¥–∫–æ—Å—Ç—å üåü",
    "–°–¥–µ–ª–∞–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥—Ä—É–≥–æ–π –¥–µ–≤–æ—á–∫–µ ‚Äî –º–∏—Ä —Å—Ç–∞–Ω–µ—Ç —Ç–µ–ø–ª–µ–µ üí¨",
    "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ —Ç–∏—Ö–æ: ¬´—è —Å–ø—Ä–∞–≤–ª—é—Å—å¬ª ü§ç",
    "–í–¥–æ—Ö ‚Äî –Ω–∞–¥–µ–∂–¥–∞, –≤—ã–¥–æ—Ö ‚Äî —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ üå¨Ô∏è",
    "–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –Ω–µ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ üß©",
    "–°–ø—Ä–æ—Å–∏ –ø–æ–º–æ—â—å ‚Äî —ç—Ç–æ —Å–º–µ–ª–æ—Å—Ç—å, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å ü¶ã",
    "–í—ã–±–µ—Ä–∏ —Å–µ–±—è ‚Äî –∏ –º–∏—Ä –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—Å—è üí´",
    "–°–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –∂–¥—ë—Ç –ø—Ä–∏—è—Ç–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å üóûÔ∏è",
    "–†–∞–¥—É–π—Å—è –ø—É—Ç—ë–º, –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ–∏–Ω–∏—à–µ–º üèÅ",
    "–û–±–µ—Ä–µ–≥–∞–π —Å–≤–æ—é –º—è–≥–∫–æ—Å—Ç—å ‚Äî –≤ –Ω–µ–π —Å–∏–ª–∞ üêë",
    "–°–µ—Ä–¥—Ü—É –≤–∏–¥–Ω–æ –¥–∞–ª—å—à–µ, —á–µ–º –≥–ª–∞–∑–∞–º ‚ù§Ô∏è",
    "–¢–æ, —á—Ç–æ –¥–ª—è —Ç–µ–±—è ‚Äî —Ç–µ–±—è –Ω–∞–π–¥—ë—Ç üì¨",
    "–¢—ã ‚Äî –∫–∞–∫ –≤–µ—Å–Ω–∞: –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å, –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Ü–≤–µ—Ç–∞–µ—à—å üå∑",
    "–ú–∏—Ä –Ω–µ –∏–¥–µ–∞–ª–µ–Ω ‚Äî –∏ —ç—Ç–æ –¥–∞—ë—Ç —à–∞–Ω—Å —Ç–µ–±–µ üåç",
    "–ü–ª–∞–Ω—ã ‚Äî —Ö–æ—Ä–æ—à–æ, –Ω–æ —Ç—ã –≤–∞–∂–Ω–µ–µ –ø–ª–∞–Ω–æ–≤ üó∫Ô∏è",
    "–°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –∫–æ–º—É —Å–∫–∞–∑–∞—Ç—å ¬´—Å–ø–∞—Å–∏–±–æ¬ª üôè",
    "–¢—ã ‚Äî —Ä–µ–¥–∫–∞—è, —ç—Ç–æ –ø—Ä–∞–≤–¥–∞ üíé",
    "–°–º–µ–Ω–∏ —ç–∫—Ä–∞–Ω –Ω–∞ –Ω–µ–±–æ –Ω–∞ 5 –º–∏–Ω—É—Ç ‚Äî –ø–æ–ª–µ–≥—á–∞–µ—Ç ‚òÅÔ∏è",
    "–°–∫–∞–∂–∏ —Å–µ–±–µ ¬´–º–æ–ª–æ–¥–µ—Ü¬ª ‚Äî —Ç—ã —ç—Ç–æ —É—Å–ª—ã—à–∏—à—å ü•∞",
    "–ü—É—Å—Ç—å –±—É–¥–µ—Ç —Ç–µ–ø–ª–æ –≤ –¥—É—à–µ –∏ –Ω–æ—Å–∫–∞—Ö üß¶",
    "–¢–≤–æ–π —Å–≤–µ—Ç –≤–∏–¥–Ω–æ –¥–∞–∂–µ —Å–∫–≤–æ–∑—å —Ç—É—á–∏ üå•Ô∏è",
    "–î–æ–±—Ä–æ—Ç–∞ –∫ —Å–µ–±–µ ‚Äî –Ω–µ –ª–µ–Ω—å, –∞ –º—É–¥—Ä–æ—Å—Ç—å ü¶â",
    "–ë—É–¥—å –≤ –º–æ–º–µ–Ω—Ç–µ: —Ç–∞–º –∂–∏–∑–Ω—å ü´ß",
    "–¢—ã ‚Äî —É–∫—Ä–∞—à–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –¥–Ω—è üéÄ",
    "–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ —É–ª—ã–±–∫–∏ ‚Äî –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è üòÅ",
    "–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç ¬´–ª–µ–≥–∫–æ¬ª üåø",
    "–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ –∏–º–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å, –±–µ–∑ —É—Å–ª–æ–≤–∏–π üåº",
    "–¢–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è ‚Äî —É–∂–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –¥–ª—è –∫–æ–≥–æ-—Ç–æ üìñ",
    "–í–Ω—É—Ç—Ä–∏ —Ç–µ–±—è ‚Äî –¥–æ–º, –≥–¥–µ —Å–ø–æ–∫–æ–π–Ω–æ üè°",
    "–¢—ã ‚Äî –ª—É—á—à–∏–π –ø–æ–¥–∞—Ä–æ–∫ —Å–∞–º–æ–π —Å–µ–±–µ üéÅ",
    # 101‚Äì150: –ø—Ä–æ –∫—Ä–∞—Å–æ—Ç—É –∏ —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É
    "–¢—ã –∫—Ä–∞—Å–∏–≤–∞—è –Ω–µ –≤–æ–ø—Ä–µ–∫–∏, –∞ –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã ‚Äî —Ç—ã üíñ",
    "–¢–≤–æ—è –º–∏–º–∏–∫–∞ ‚Äî —Ç–≤–æ—è –º–∞–≥–∏—è ‚ú®",
    "–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Ç—ã –µ—â—ë –Ω–µ–∂–Ω–µ–µ üå∏",
    "–¢–≤–æ–∏ –≤–æ–ª–æ—Å—ã —Å–µ–≥–æ–¥–Ω—è —Å–ª—É—à–∞—é—Ç—Å—è —Ç–µ–±—è üòå",
    "–¢–≤–æ–∏ –≥–ª–∞–∑–∫–∏ ‚Äî –¥–≤–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –≥–∞–ª–∞–∫—Ç–∏–∫–∏ üåå",
    "–ü–æ–º–∞–¥–∞ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–∏—à–µ–Ω–∫–∞, —Ç—ã ‚Äî —Ç–æ—Ä—Ç üç∞",
    "–¢—ã ‚Äî –∫–∞–∫ —É—Ç—Ä–æ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è: —á–∏—Å—Ç–∞—è –∏ —Å–≤–µ–∂–∞—è ‚òîÔ∏è",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–æ–π –ª—é–±–∏–º—ã–π –∞–∫—Å–µ—Å—Å—É–∞—Ä üòç",
    "–ö—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∞ –æ–Ω–æ —Å—É–ø–µ—Ä üíÉ",
    "–°–µ–≥–æ–¥–Ω—è —Ç–µ–±–µ –∏–¥—ë—Ç –≤—Å—ë, –¥–∞–∂–µ —Ç–∞–ø–æ—á–∫–∏ ü©¥",
    "–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è ‚Äî –∏ —ç—Ç–æ –Ω–µ —Ö–∞–π–ª–∞–π—Ç–µ—Ä ‚ú®",
    "–¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî –ø—Ä–æ —Ç–µ–±—è, –∞ —Ç—ã ‚Äî –ø—Ä–æ –∫—Ä–∞—Å–æ—Ç—É üëú",
    "–°–∞–º–∞—è –º–æ–¥–Ω–∞—è –≤–µ—â—å ‚Äî —Ç–≤–æ—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å üëë",
    "–ó–µ—Ä–∫–∞–ª–æ —Ç–µ–±—è –æ–±–æ–∂–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è ü™û",
    "–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞ üñºÔ∏è",
    "–¢—ã ‚Äî —ç—Å—Ç–µ—Ç–∏–∫–∞ –¥–Ω—è üå∑",
    "–¢–≤–æ–∏ —Ä–µ—Å–Ω–∏—Ü—ã –º–∞—à—É—Ç —É–¥–∞—á–µ üëÄ",
    "–£ —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π —Å–µ–≥–æ–¥–Ω—è –≤–∞–π–± üéß",
    "–¢—ã ‚Äî –∫–∞–∫ —Ç—ë–ø–ª—ã–π —Å–≤–µ—Ç –ª–∞–º–ø—ã –≤ —É—é—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ üïØÔ∏è",
    "–ù–∏ —É –∫–æ–≥–æ –Ω–µ—Ç —Ç–≤–æ–µ–π —É–ª—ã–±–∫–∏ ‚Äî —ç—Ç–æ —Ä–æ—Å–∫–æ—à—å üíé",
    "–ö—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ –¥–æ–±—Ä–æ, –∏ —É —Ç–µ–±—è –µ–≥–æ –º–Ω–æ–≥–æ ü§ç",
    "–õ–∏—Ü–æ –æ—Ç–¥—ã—Ö–∞–µ—Ç, –∞ —Ç—ã —Å–∏—è–µ—à—å ‚ú®",
    "–¢—ã ‚Äî –ª—É—á—à–∏–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —Å–µ–±—è ü´∂",
    "–§–æ—Ç–æ 0.5 —Ç–µ–±—è —Ç–æ–∂–µ –ª—é–±–∏—Ç üì∏",
    "–¢–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è ‚Äî —Ç–∞–Ω–µ—Ü –¥—É—à–∏ üíû",
    "–¢–≤–æ—è –æ—Å–∞–Ω–∫–∞ ‚Äî —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –º—è–≥–∫–æ—Å—Ç—å üßò‚Äç‚ôÄÔ∏è",
    "–ö—Ä–∞—Å–∏–≤–µ–µ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ ‚ù§Ô∏è",
    "–¢–≤–æ—è –∫–æ–∂–∞ –≥–æ–≤–æ—Ä–∏—Ç ¬´—Å–ø–∞—Å–∏–±–æ¬ª –∑–∞ –∑–∞–±–æ—Ç—É ü´ß",
    "–¢—ã ‚Äî –º—É–∑–∞ —Å–∞–º–æ–π —Å–µ–±—è üé®",
    "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ ‚Äî –≤ —Ç–≤–æ–µ–π –Ω–µ–∂–Ω–æ—Å—Ç–∏ üåø",
    "–ù–∞ —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –≤–∑–≥–ª—è–¥ –¥–µ—Ä–∂–∏—Ç—Å—è –¥–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ üëÄ",
    "–¢—ã ‚Äî —Å—Ç–∏–ª—å–Ω–∞—è —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –í—Å–µ–ª–µ–Ω–Ω–æ–π ‚ú®",
    "–ö—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Å–ø–æ–∫–æ–π–Ω–æ –≤–Ω—É—Ç—Ä–∏ üåä",
    "–¢–≤–æ–π —Å–º–µ—Ö ‚Äî —Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –º–µ–ª–æ–¥–∏—è üé∂",
    "–¢—ã ‚Äî core –≤—Å–µ–π —ç—Ç–æ–π —ç—Å—Ç–µ—Ç–∏–∫–∏ üíó",
    "–õ–µ–≥–∫–∏–π –±–ª–µ—Å–∫ –≤ –≥–ª–∞–∑–∞—Ö ‚Äî –∏ –≤–µ—Å—å –º–∏—Ä –ª—É—á—à–µ üí´",
    "–¢—ã ‚Äî —ç—Ç–æ —Ç—Ä–µ–Ω–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É—Å—Ç–∞—Ä–µ–µ—Ç üìà",
    "–°–∏—è–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é: –≤—Å–µ–≥–¥–∞ üåü",
    "–¢—ã ‚Äî —Ç–æ–ø–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–µ–±—è üèÜ",
    "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ ‚Äî –Ω–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –∞ –¥–ª—è –∂–∏–∑–Ω–∏ üå∫",
    "–¢—ã ‚Äî –∫–∞–∫ –ª—é–±–∏–º—ã–π —Å–≤–∏—Ç–µ—Ä: —É—é—Ç–Ω–æ –∏ —Ç–µ–ø–ª–æ üß∂",
    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–µ–±–µ –∏–¥—ë—Ç ¬´–±—ã—Ç—å —Å–æ–±–æ–π¬ª üíã",
    "–£ —Ç–µ–±—è —Å–≤–æ–π –ø–æ—á–µ—Ä–∫ –∫—Ä–∞—Å–∏–≤–æ—Å—Ç–∏ ‚úçÔ∏è",
    "–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ –±–µ–∑ ¬´–Ω–æ¬ª –∏ ¬´–µ—Å–ª–∏¬ª üíñ",
    "–¢—ã ‚Äî art –±–µ–∑ —Ä–∞–º–æ–∫ üñåÔ∏è",
    "–¢—ã ‚Äî –º–æ–π –ª–∏—á–Ω—ã–π Pinterest üåà",
    "–°–µ–≥–æ–¥–Ω—è –ª–∞–π–∫–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–µ–≤–∏–¥–Ω–æ–≥–æ ‚úÖ",
    "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ ‚Äî —ç—Ç–æ —Ç–≤–æ—è —Å–≤–æ–±–æ–¥–∞ üïäÔ∏è",
    "–¢—ã ‚Äî –Ω–µ–∂–Ω—ã–π —à—Ç–æ—Ä–º, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç—Å—è –æ–±–Ω—è—Ç—å üå™Ô∏èü§ç",
    "–¢—ã ‚Äî –∫–∞–∫ –ª—É—á –∑–æ–ª–æ—Ç–æ–≥–æ —á–∞—Å–∞ ‚òÄÔ∏è",
    # 151‚Äì200: –º–æ—Ç–∏–≤–∞—Ü–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏–µ
    "–°–¥–µ–ª–∞–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ ‚Äî –æ–Ω —Ä–µ—à–∞—é—â–∏–π üë£",
    "–õ—É—á—à–∏–π –¥–µ–Ω—å –Ω–∞—á–∞—Ç—å ‚Äî —Å–µ–≥–æ–¥–Ω—è üìÖ",
    "–¢—ã —Å–ø–æ—Å–æ–±–Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –º–µ—á—Ç—É –≤ –ø–ª–∞–Ω üóÇÔ∏è",
    "–°–ø—Ä–æ—Å–∏ —Å–µ–±—è: ¬´—á—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ?¬ª –∏ —Å–¥–µ–ª–∞–π —ç—Ç–æ üéØ",
    "–ì–æ—Ä–¥–∏–ª–∞—Å—å –±—ã —Å–æ–±–æ–π? –¢–æ–≥–¥–∞ –≤–ø–µ—Ä—ë–¥ üí™",
    "–ù–µ –Ω—É–∂–Ω–æ –≤—Å—ë ‚Äî –Ω—É–∂–Ω–æ —Ç–æ, —á—Ç–æ –≤–∞–∂–Ω–æ —Ç–µ–±–µ üéØ",
    "–ü—è—Ç—å –º–∏–Ω—É—Ç —Å–µ–π—á–∞—Å –ª—É—á—à–µ —á–∞—Å–∞ ¬´–ø–æ—Ç–æ–º¬ª ‚è±Ô∏è",
    "–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ –º–µ—à–∞–µ—Ç —Å—Ç–∞—Ä—Ç—É ‚Äî –Ω–∞—á–∏–Ω–∞–π –∫–∞–∫ –µ—Å—Ç—å üöÄ",
    "–°–ª–æ–∂–Ω–æ ‚Äî —ç—Ç–æ –Ω–µ ¬´–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ¬ª üßó‚Äç‚ôÄÔ∏è",
    "–ü–ª–∞–Ω + –¥–µ–π—Å—Ç–≤–∏–µ = –º–∞–≥–∏—è üìà",
    "–ù–µ—É–º–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –µ—â—ë –Ω–µ –Ω–∞–≤—Å–µ–≥–¥–∞ üìö",
    "–í–¥–æ—Ö–Ω–æ–≤–∏—Å—å, –∞ –ø–æ—Ç–æ–º —Å–¥–µ–ª–∞–π –ø–æ-—Å–≤–æ–µ–º—É üí°",
    "–ü–æ–ø—Ä–æ—Å–∏ –ø–æ–º–æ—â–∏ ‚Äî —É—Å–∫–æ—Ä–∏—à—å –ø—É—Ç—å ü§ù",
    "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É, –Ω–æ –Ω–µ —Å—Ç–æ–ø ‚è∏Ô∏è",
    "–õ—é–±–∏ –ø—Ä–æ—Ü–µ—Å—Å ‚Äî –∏ –æ–Ω –ø–æ–ª—é–±–∏—Ç —Ç–µ–±—è üîÅ",
    "–ú–µ–Ω—å—à–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏, –±–æ–ª—å—à–µ –∂–∏–∑–Ω–∏ üìµ",
    "–ü—Ä–∏–≤—ã—á–∫–∏ ‚Äî —Ç–≤–æ–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ üß©",
    "–¢—ã ‚Äî –∞–≤—Ç–æ—Ä —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –ø–∏—à–∏ —Å–º–µ–ª–µ–µ ‚úçÔ∏è",
    "–¢–≤–æ—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ ‚Äî —Ñ–æ—Ä–º–∞ –ª—é–±–≤–∏ –∫ –º–µ—á—Ç–µ ü´∂",
    "–ü—É—Å—Ç—å –±—É–¥–µ—Ç –ø–æ-—Ç–≤–æ–µ–º—É ‚Äî —Ç—ã —Å—Ç–∞—Ä–∞–ª–∞—Å—å üíØ",
    "–°–æ–º–Ω–µ–Ω–∏–µ —É—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è üèÉ‚Äç‚ôÄÔ∏è",
    "–ó–∞–ø—É—Å—Ç–∏ —Ç–∞–π–º–µ—Ä –Ω–∞ 20 –º–∏–Ω—É—Ç ‚Äî –∏ –Ω–∞—á–Ω–∏ ‚è≥",
    "–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π –ø—É—Ç—å ‚Äî —Å—Ä–∞–≤–Ω–∏–≤–∞–π —É—Å–∏–ª–∏—è üí•",
    "–í—ã–¥–æ—Ö ‚Äî –∏ —Å–¥–µ–ª–∞–π –∑–≤–æ–Ω–æ–∫/—à–∞–≥/—à–∞–∂–æ–∫ üìû",
    "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞ ‚Äî –¥–µ–ª–∏—Å—å –µ—é ‚ö°Ô∏è",
    "–ï—Å–ª–∏ —Å—Ç—Ä–∞—à–Ω–æ ‚Äî –∑–Ω–∞—á–∏—Ç –≤–∞–∂–Ω–æ üåü",
    "–ü—É—Å—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç —Ç–µ–±—è —Ç–≤–æ–π –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π ¬´—Å–ø–∞—Å–∏–±–æ¬ª üíå",
    "–¢—ã —É–º–µ–µ—à—å ‚Äî –ø—Ä–æ—Å—Ç–æ –µ—â—ë –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª–∞ —Ç–∞–∫ üí°",
    "–°–æ–±–µ—Ä–∏ —Å–µ–±—è –ø–æ –∫—É—Å–æ—á–∫–∞–º ‚Äî –∏ —Å—Ç–∞–Ω—Ü—É–π üíÉ",
    "–õ—É—á—à–µ–µ ¬´–ø–æ—Ç–æ–º¬ª ‚Äî —ç—Ç–æ ¬´—Å–µ–π—á–∞—Å¬ª üïí",
    "–î–µ–ª–∞–π –∫–∞–∫ —É–º–µ–µ—à—å ‚Äî –∏ —Å—Ç–∞–Ω–µ—Ç –ª—É—á—à–µ üß±",
    "–ó–∞–º–µ—Ç–∫–∏ ‚Äî —Ç–≤–æ–π –≤—Ç–æ—Ä–æ–π –º–æ–∑–≥ üìì",
    "–°–º–µ–Ω–∞ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî —Å–º–µ–Ω–∞ –º—ã—Å–ª–∏ üåø",
    "–£—Ç—Ä–æ ‚Äî –¥–ª—è —Ç–µ–±—è, –Ω–µ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üåÖ",
    "–ù–µ –∂–¥–∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é ‚Äî —Å—Ç–∞–Ω—å –µ–π üî•",
    "–¢—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è üóùÔ∏è",
    "–°—Ç–∞–≤—å —Ç–∞–π–Ω—ã–µ —Ü–µ–ª–∏ –∏ –≥—Ä–æ–º–∫–∏–µ –≥–∞–ª–æ—á–∫–∏ ‚úÖ",
    "–¢–∏—à–µ –µ–¥–µ—à—å ‚Äî –¥–∞–ª—å—à–µ –±—É–¥–µ—à—å üê¢",
    "–ò–º–ø—É–ª—å—Å –≤–∞–∂–Ω–µ–µ –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç–∏ ‚ö°Ô∏è",
    "–°–∫–∞–∂–∏ ¬´–¥–∞¬ª —Å–µ–±–µ –∏ –¥–µ–ª—É üí¨",
    "–ö–∞–ø–ª—è –∑–∞ –∫–∞–ø–ª–µ–π ‚Äî –æ–∫–µ–∞–Ω üåä",
    "–°–µ–≥–æ–¥–Ω—è —Ç—ã –±–ª–∏–∂–µ, —á–µ–º –≤—á–µ—Ä–∞ üß≠",
    "–†–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤ üîÅ",
    "–£—á–∏—Å—å —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, –æ–Ω–∞ –ø—Ä–æ —Å–≤–æ–±–æ–¥—É üïäÔ∏è",
    "–°–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞–π, –ø–æ—Ç–æ–º —Å–æ–º–Ω–µ–≤–∞–π—Å—è üõ†Ô∏è",
    "–£–±–µ—Ä–∏ –ª–∏—à–Ω–µ–µ ‚Äî –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤–∞–∂–Ω–æ–µ üßπ",
    "–î–≤–∏–≥–∞–π—Å—è –∫—Ä–∞—Å–∏–≤–æ –∏ –ø–æ-—Å–≤–æ–µ–º—É üíÉ",
    "–¢—ã ‚Äî —Ç–∞, –∫—Ç–æ –¥–µ–ª–∞–µ—Ç, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –º–µ—á—Ç–∞–µ—Ç üí´",
    "–°–¥–µ–ª–∞–π –∏–º–µ–Ω–Ω–æ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –º–æ–∂–µ—à—å ‚Äî —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ü§ç",
]


# ===================== –¢–ê–†–û (22 –∞—Ä–∫–∞–Ω–∞) =====================
TAROT_CARDS = [
    ("–®—É—Ç ü§°", "–Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ, —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç—å, –Ω–∞–∏–≤–Ω–æ—Å—Ç—å", "–±–µ–∑—Ä–∞—Å—Å—É–¥—Å—Ç–≤–æ, –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å"),
    ("–ú–∞–≥ üßô", "–≤–æ–ª—è, –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è", "–º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏, –æ–±–º–∞–Ω, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"),
    ("–ñ—Ä–∏—Ü–∞ üîÆ", "–∏–Ω—Ç—É–∏—Ü–∏—è, —Ç–∞–π–Ω–∞, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å", "—Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å, –æ—Ç—Å—Ç—Ä–∞–Ω—ë–Ω–Ω–æ—Å—Ç—å"),
    ("–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ üëë", "–∏–∑–æ–±–∏–ª–∏–µ, –∑–∞–±–æ—Ç–∞, –ø–ª–æ–¥–æ—Ä–æ–¥–∏–µ", "–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, —Ä–∞—Å—Ç–æ—á–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"),
    ("–ò–º–ø–µ—Ä–∞—Ç–æ—Ä üß±", "–≤–ª–∞—Å—Ç—å, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –∑–∞—â–∏—Ç–∞", "–¥–µ—Å–ø–æ—Ç–∏–∑–º, –∂–µ—Å—Ç–∫–æ—Å—Ç—å"),
    ("–ñ—Ä–µ—Ü üôè", "–¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å, —Ç—Ä–∞–¥–∏—Ü–∏–∏, –∑–Ω–∞–Ω–∏–µ", "–¥–æ–≥–º–∞—Ç–∏–∑–º, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ—Å—Ç—å"),
    ("–í–ª—é–±–ª—ë–Ω–Ω—ã–µ üíû", "–ª—é–±–æ–≤—å, –≤—ã–±–æ—Ä, –µ–¥–∏–Ω—Å—Ç–≤–æ", "—Ä–∞–∑–¥–æ—Ä, –Ω–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"),
    ("–ö–æ–ª–µ—Å–Ω–∏—Ü–∞ üõû", "–ø–æ–±–µ–¥–∞, –¥–≤–∏–∂–µ–Ω–∏–µ, –∫–æ–Ω—Ç—Ä–æ–ª—å", "–ø–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç—Ä–æ–ª—è, –∞–≥—Ä–µ—Å—Å–∏—è"),
    ("–°–∏–ª–∞ ü¶Å", "—Å–º–µ–ª–æ—Å—Ç—å, —Ç–µ—Ä–ø–µ–Ω–∏–µ, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å", "—Å–æ–º–Ω–µ–Ω–∏–µ, —Å—Ç—Ä–∞—Ö"),
    ("–û—Ç—à–µ–ª—å–Ω–∏–∫ üïØÔ∏è", "–ø–æ–∏—Å–∫ –∏—Å—Ç–∏–Ω—ã, —É–µ–¥–∏–Ω–µ–Ω–∏–µ", "–∏–∑–æ–ª—è—Ü–∏—è, –∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç—å"),
    ("–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã üé°", "—Å—É–¥—å–±–∞, –ø–µ—Ä–µ–º–µ–Ω—ã, —É–¥–∞—á–∞", "–Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å, –∑–∞—Å—Ç–æ–π"),
    ("–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å ‚öñÔ∏è", "—Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ, —á–µ—Å—Ç–Ω–æ—Å—Ç—å", "–Ω–µ—á–µ—Å—Ç–Ω–æ—Å—Ç—å, –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å"),
    ("–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π üôÉ", "–∂–µ—Ä—Ç–≤–∞, –ø–∞—É–∑–∞, –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏–µ", "–∑–∞—Å—Ç–æ–π, –±–µ—Å–ø–æ–º–æ—â–Ω–æ—Å—Ç—å"),
    ("–°–º–µ—Ä—Ç—å üíÄ", "–∫–æ–Ω–µ—Ü, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", "—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–∞–º"),
    ("–£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å üßò", "–≥–∞—Ä–º–æ–Ω–∏—è, –±–∞–ª–∞–Ω—Å, —Ç–µ—Ä–ø–µ–Ω–∏–µ", "–¥–∏—Å–±–∞–ª–∞–Ω—Å, —á—Ä–µ–∑–º–µ—Ä–Ω–æ—Å—Ç—å"),
    ("–î—å—è–≤–æ–ª üòà", "–∏—Å–∫—É—à–µ–Ω–∏–µ, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, —Å—Ç—Ä–∞—Å—Ç—å", "–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ, –∫–æ–Ω—Ç—Ä–æ–ª—å"),
    ("–ë–∞—à–Ω—è üóº", "–≤–Ω–µ–∑–∞–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã, –∫—Ä–∞—Ö", "–∏–∑–±–µ–∂–∞–Ω–∏–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è"),
    ("–ó–≤–µ–∑–¥–∞ üåü", "–Ω–∞–¥–µ–∂–¥–∞, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –∏—Å—Ü–µ–ª–µ–Ω–∏–µ", "–ø–µ—Å—Å–∏–º–∏–∑–º, –ø–æ—Ç–µ—Ä—è –≤–µ—Ä—ã"),
    ("–õ—É–Ω–∞ üåô", "–∏–ª–ª—é–∑–∏–∏, —Å—Ç—Ä–∞—Ö–∏, –∏–Ω—Ç—É–∏—Ü–∏—è", "–∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å"),
    ("–°–æ–ª–Ω—Ü–µ ‚òÄÔ∏è", "—Ä–∞–¥–æ—Å—Ç—å, —É—Å–ø–µ—Ö, –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ", "—Å–∞–º–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–æ, —É–ø—Ä—è–º—Å—Ç–≤–æ"),
    ("–°—É–¥ ‚ö∞Ô∏è", "–ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ, –∏—Å–∫—É–ø–ª–µ–Ω–∏–µ, —Å—É–¥—å–±–∞", "—Å–æ–∂–∞–ª–µ–Ω–∏–µ, —Å—Ç—Ä–∞—Ö –ø–µ—Ä–µ–º–µ–Ω"),
    ("–ú–∏—Ä üåç", "–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ, —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å, —É—Å–ø–µ—Ö", "–Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω–æ—Å—Ç—å, –∑–∞–¥–µ—Ä–∂–∫–∏"),
]


# ===================== –†–ï–ê–ö–¶–ò–ò =====================
HUGS_MESSAGES = [
    "–û–±–Ω–∏–º–∞—é —Ç–µ–±—è –∫—Ä–µ–ø–∫–æ-–∫—Ä–µ–ø–∫–æ ü´Ç –í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ!",
    "–¢–µ–±—è –∫—Ç–æ-—Ç–æ –æ–±–Ω–∏–º–∞–µ—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ü§ó –ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ —Å—Ç–∞–ª–æ —Ç–µ–ø–ª–µ–µ!",
    "–ú—è–≥–∫–∏–µ –æ–±–Ω–∏–º–∞—à–∫–∏ –Ω–∞ —Ç–≤–æ–π –¥–µ–Ω—å! üß∏ –¢—ã —Å—É–ø–µ—Ä!",
    "–í–æ—Ç —Ç–∞–∫ –Ω–µ–∂–Ω–æ –∏ –∑–∞–±–æ—Ç–ª–∏–≤–æ ‚Äî –æ–±–Ω–∏–º–∞—é üíû",
    "–ö—Ç–æ –Ω–µ –æ–±–Ω–∏–º–µ—Ç—Å—è ‚Äî —Ç–æ—Ç –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –∫–∞—Å—Ç–æ–º–∫–µ!",
    "ü´Ç –¢–æ–∫—Å–∏–∫–æ–≤ —Ç–æ–∂–µ –∏–Ω–æ–≥–¥–∞ –æ–±–Ω–∏–º–∞—é—Ç‚Ä¶ –ø–æ –≥–æ–ª–æ–≤–µ‚Ä¶ —Ç–∞–±—É—Ä–µ—Ç–∫–æ–π üôÉ",
]

PIPISA_UP_REACTIONS = [
    "–ü–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –∫–∞–∫ –Ω–∞ –¥—Ä–æ–∂–∂–∞—Ö! üçÜ‚ú®",
    "–û–≥–æ! –¢–∞–∫–∞—è –ø—Ä–∏–±–∞–≤–∫–∞, –∞–∂ –≤ —á–∞—Ç–µ —Ç–µ–ø–ª–æ —Å—Ç–∞–ª–æ üò≥",
    "–ü–∏–ø–∏—Å–∞ —Ç—è–Ω–µ—Ç—Å—è –∫ —Å–æ–ª–Ω—Ü—É! ‚òÄÔ∏è",
    "–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Ä–æ—Å—Ç–∞! üìà",
]

PIPISA_DOWN_REACTIONS = [
    "–£–ø—Å... —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò¨",
    "–ü–∏–ø–∏—Å–∞ —Å–∂–∞–ª–∞—Å—å –æ—Ç —Ö–æ–ª–æ–¥–∞ ü•∂",
    "–ì—Ä—É—Å—Ç–Ω—ã–π –¥–µ–Ω—å, –¥–∞–∂–µ –ø–∏–ø–∏—Å–∞ –ø–æ–Ω–∏–∫–ª–∞ üò¢",
    "–ù–∏—á–µ–≥–æ, –∑–∞–≤—Ç—Ä–∞ –≤—ã—Ä–∞—Å—Ç–µ—Ç —Å–Ω–æ–≤–∞! üí™",
]


# ===================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï =====================
def html_code(s: str) -> str:
    # –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ –º–æ–Ω–æ—à–∏—Ä–Ω—ã–π –±–ª–æ–∫ <code>...</code>
    return f"<code>{s}</code>"


def user_display(user_id: int) -> str:
    u = state["users"].get(str(user_id))
    if not u:
        return f"—é–∑–µ—Ä {user_id}"
    return u.get("name") or f"—é–∑–µ—Ä {user_id}"


def ensure_user(user_id: int):
    suid = str(user_id)
    if suid not in state["users"]:
        state["users"][suid] = {
            "name": "",
            "nickname": "",
            "uid": "",
            "bday": "",
            "city": "",
            "social": "",
            "joined_date": "",
            "quote": "",
            "pipisa": 0.0,
            "last_pipisa": None,
            "last_prediction": None,
            "last_tarot": None,
            "married_to": None
        }


def today_str() -> str:
    return date.today().isoformat()


# ===================== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï –ù–û–í–´–• =====================
async def greet_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cmu = update.chat_member
    if not cmu:
        return
    old = cmu.old_chat_member.status
    new = cmu.new_chat_member.status
    if (old in ("left", "kicked")) and (new in ("member", "administrator", "creator")):
        user = cmu.new_chat_member.user
        text = (
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.mention_html()}‚ù£Ô∏è "
            f"–û–∑–Ω–∞–∫–æ–º—å—Å—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞ (https://telegra.ph/Pravila-klana-‡¶êOnlyGirls‡¶ê-05-29)ü´∂ "
            f"–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ‚ùóÔ∏è –ö–ª–∞–Ω–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞: ‡¶î"
        )
        await context.bot.send_message(chat_id=cmu.chat.id, text=text, parse_mode="HTML")


# ===================== /START –∏ /ABOUT =====================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ú–∞—Ç—å –ë–æ–≥–∏–Ω—å –¥–ª—è –∫–ª–∞–Ω–∞ OnlyGirls üíñ\n"
        "–ù–∞–ø–∏—à–∏ /about —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã."
    )


async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ú® –ö–æ–º–∞–Ω–¥—ã:\n"
        "/editprofile ‚Äî –∑–∞–ø–æ–ª–Ω–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ—à–∞–≥–æ–≤–æ)\n"
        "/profile ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/pipisa ‚Äî –≤—ã—Ä–∞—Å—Ç–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å –ø–∏–ø–∏—Å—É (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/top5 ‚Äî —Ç–æ–ø-5 –ø–æ –ø–∏–ø–∏—Å–µ\n"
        "/rating ‚Äî –ø–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å\n"
        "/predskaz ‚Äî –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–Ω—è (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/tarot ‚Äî –∫–∞—Ä—Ç–∞ –¢–∞—Ä–æ (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/hugs [@—é–∑–µ—Ä] ‚Äî –æ–±–Ω–∏–º–∞—à–∫–∏ (–¥–ª—è –≤—Å–µ—Ö –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ)\n"
        "/lesbi ‚Äî –ª–µ—Å–±–∏-–ø–∞—Ä–∞ –¥–Ω—è (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
        "/love @—é–∑–µ—Ä ‚Äî —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
        "/acceptlove ‚Äî –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
        "/declinelove ‚Äî –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
        "/divorce ‚Äî –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–≤–æ–¥\n"
        "/acceptdivorce ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞–∑–≤–æ–¥\n"
        "/rules ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞\n"
        "/about ‚Äî —ç—Ç–æ –º–µ–Ω—é"
    )


# ===================== /RULES =====================
async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(RULES_TEXT)


# ===================== –ü–†–û–§–ò–õ–¨: /profile =====================
def render_profile(u: dict) -> str:
    name = u.get("name") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    nickname = u.get("nickname") or ""
    uid = u.get("uid") or ""
    bday = u.get("bday") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    city = u.get("city") or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    social = u.get("social") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    joined = u.get("joined_date") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    quote = u.get("quote") or "‚Äî"
    pipisa = u.get("pipisa", 0.0)

    married_to = u.get("married_to")
    married_line = f"üíç –í –±—Ä–∞–∫–µ —Å {married_to}\n" if married_to else ""

    text = (
        f"üôã‚Äç‚ôÄÔ∏è –ò–º—è: {name}\n"
        f"üéÆ –ù–∏–∫ –≤ –∏–≥—Ä–µ: {html_code(nickname)}\n"
        f"üî¢ UID: {html_code(uid)}\n"
        f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {bday}\n"
        f"üèô –ì–æ—Ä–æ–¥: {city}\n"
        f"üì≤ –¢–¢ –∏–ª–∏ inst: {social}\n"
        f"üìÖ –î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: {joined}\n"
        f"üçÜ –ü–∏–ø–∏—Å–∞: {pipisa:.1f} —Å–º\n"
        f"{married_line}"
        f"üìù –î–µ–≤–∏–∑: {quote}"
    )
    return text


async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    if uid not in state["users"]:
        await update.message.reply_text("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /editprofile —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å üå∏")
        return
    text = render_profile(state["users"][uid])
    await update.message.reply_text(text, parse_mode="HTML")


# ===================== /editprofile (–ø–æ—à–∞–≥–æ–≤–æ) =====================
(
    STEP_NAME,
    STEP_NICK,
    STEP_UID,
    STEP_BDAY,
    STEP_CITY,
    STEP_SOCIAL,
    STEP_JOINED,
    STEP_QUOTE
) = range(8)


async def editprofile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    ensure_user(update.effective_user.id)
    context.user_data["profile_answers"] = {}
    await update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? (–∏–º—è)")
    return STEP_NAME


async def _save_and_next(update, context, key, next_step, question):
    text = update.message.text.strip()
    context.user_data["profile_answers"][key] = text
    await update.message.reply_text(question)
    return next_step


async def step_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–µ –∏–º—è (mention)
    mention = update.effective_user.mention_html()
    context.user_data["profile_answers"]["name"] = mention
    await update.message.reply_text("–ö–∞–∫–æ–π —É —Ç–µ–±—è –Ω–∏–∫ –≤ –∏–≥—Ä–µ?")
    return STEP_NICK


async def step_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "nickname", STEP_UID, "–ö–∞–∫–æ–π —É —Ç–µ–±—è UID?")


async def step_uid(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "uid", STEP_BDAY, "–ö–æ–≥–¥–∞ —É —Ç–µ–±—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è? (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2000)")


async def step_bday(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "bday", STEP_CITY, "–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?")


async def step_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "city", STEP_SOCIAL, "–û—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π TikTok –∏–ª–∏ Instagram:")


async def step_social(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "social", STEP_JOINED, "–ö–æ–≥–¥–∞ —Ç—ã –≤—Å—Ç—É–ø–∏–ª–∞ –≤ —á–∞—Ç? (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.08.2025)")


async def step_joined(update: Update, context: ContextTypes.DEFAULT_TYPE):
    return await _save_and_next(update, context, "joined_date", STEP_QUOTE, "–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –¥–µ–≤–∏–∑–æ–º –∏–ª–∏ –ª—é–±–∏–º–æ–π —Ü–∏—Ç–∞—Ç–æ–π:")


async def step_quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["profile_answers"]["quote"] = update.message.text.strip()
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)

    # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –æ—Ç–≤–µ—Ç—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    saved = state["users"][uid]
    for k, v in context.user_data["profile_answers"].items():
        saved[k] = v
    # –ü–∏–ø–∏—Å–∞ –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ –¥–∞—Ç—ã –Ω–µ —Ç—Ä–æ–≥–∞–µ–º
    save_state()
    await update.message.reply_text("–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω ‚úÖ")
    return ConversationHandler.END


# ===================== /pipisa (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å) =====================
def _rand_delta():
    # –æ—Ç -10.0 –¥–æ +10.0, –∏—Å–∫–ª—é—á–∞—è 0.0 (–∏–Ω–∞—á–µ –≤—Å–µ–≥–¥–∞ —Å–∫—É—á–Ω–æ)
    d = round(random.uniform(-10.0, 10.0), 1)
    if d == 0.0:
        d = 0.1 if random.random() > 0.5 else -0.1
    return d


async def pipisa(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]

    last = u.get("last_pipisa")
    if last == today_str():
        await update.message.reply_text("–ü–∏–ø–∏—Å—É –º–æ–∂–Ω–æ —Ä–∞—Å—Ç–∏—Ç—å/–º–µ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å! üå±")
        return

    delta = _rand_delta()
    new_val = round(float(u.get("pipisa", 0.0)) + delta, 1)
    if new_val < 0:
        new_val = 0.0

    u["pipisa"] = new_val
    u["last_pipisa"] = today_str()
    save_state()

    reaction = random.choice(PIPISA_UP_REACTIONS if delta > 0 else PIPISA_DOWN_REACTIONS)
    await update.message.reply_text(
        f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {delta:+.1f} —Å–º\n–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {new_val:.1f} —Å–º\n{reaction}"
    )


# ===================== –†–ï–ô–¢–ò–ù–ì–ò: /top5 –∏ /rating =====================
async def top5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)[:5]
    if not rows:
        await update.message.reply_text("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µ üå±")
        return
    text = "üèÜ –¢–û–ü-5 –ø–∏–ø–∏—Å –∫–ª–∞–Ω–∞:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or uid}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(text, parse_mode="HTML")


async def rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    rows = sorted(state["users"].items(), key=lambda kv: kv[1].get("pipisa", 0.0), reverse=True)
    if not rows:
        await update.message.reply_text("–†–µ–π—Ç–∏–Ω–≥ –ø—É—Å—Ç. –ü–æ–ª–∏–≤–∞–π –ø–∏–ø–∏—Å—É —á–∞—â–µ üå±")
        return
    text = "üìä –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–∏–ø–∏—Å:\n"
    for i, (uid, u) in enumerate(rows, 1):
        text += f"{i}. {u.get('name') or uid}: {u.get('pipisa', 0.0):.1f} —Å–º\n"
    await update.message.reply_text(text, parse_mode="HTML")


# ===================== /predskaz (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å) =====================
async def predskaz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]

    if u.get("last_prediction") == today_str():
        await update.message.reply_text("üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —Å–µ–≥–æ–¥–Ω—è!")
        return

    u["last_prediction"] = today_str()
    save_state()
    await update.message.reply_text(f"üîÆ {random.choice(PREDICTIONS)}")


# ===================== /tarot (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å) =====================
async def tarot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    u = state["users"][uid]

    if u.get("last_tarot") == today_str():
        await update.message.reply_text("üÉè –†–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å!")
        return

    card, upright, reversed_m = random.choice(TAROT_CARDS)
    is_reversed = random.choice([True, False])
    meaning = reversed_m if is_reversed else upright
    u["last_tarot"] = today_str()
    save_state()
    await update.message.reply_text(
        f"<b>{card}</b> ‚Äî {meaning}",
        parse_mode="HTML"
    )


# ===================== /hugs =====================
async def hugs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω @user ‚Äî –æ–±–Ω–∏–º–∞–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ ‚Äî —Ä–∞–Ω–¥–æ–º –∏–ª–∏ –≤—Å–µ—Ö
    if context.args:
        target = context.args[0]
        await update.message.reply_text(f"ü§ó {update.effective_user.mention_html()} –æ–±–Ω—è–ª–∞ {target}!", parse_mode="HTML")
        return

    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–≥–æ-—Ç–æ –∏–∑ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    pool = [int(uid) for uid in state["users"].keys() if int(uid) != update.effective_user.id]
    if pool:
        target_id = random.choice(pool)
        await update.message.reply_text(
            f"ü§ó {update.effective_user.mention_html()} –æ–±–Ω—è–ª–∞ {user_display(target_id)}!",
            parse_mode="HTML"
        )
    else:
        await update.message.reply_text(random.choice(HUGS_MESSAGES))


# ===================== /lesbi (1 —Ä–∞–∑ –≤ –¥–µ–Ω—å) =====================
async def lesbi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –Ω—É–∂–Ω–∞ –º–∏–Ω–∏–º—É–º –ø–∞—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
    pool = [int(uid) for uid, u in state["users"].items() if u.get("name")]
    if len(pool) < 2:
        await update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏—Ü –¥–ª—è –ø–∞—Ä—ã")
        return

    if state["last_lesbi_date"] == today_str():
        pair = state.get("last_lesbi_pair")
        if pair:
            a, b = pair
            await update.message.reply_text(
                f"üë≠ –ü–∞—Ä–∞ –¥–Ω—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞: {user_display(a)} + {user_display(b)} üíû",
                parse_mode="HTML"
            )
            return
        # –µ—Å–ª–∏ –ø–æ—á–µ–º—É-—Ç–æ –ø–∞—Ä—ã –Ω–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏ –≤—ã–±–∏—Ä–∞–µ–º

    a, b = random.sample(pool, 2)
    state["last_lesbi_date"] = today_str()
    state["last_lesbi_pair"] = [a, b]
    save_state()

    lines = [
        "üåà –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –ª–µ—Å–±–∏-–ø–∞—Ä–∞: {a} –∏ {b} üíã",
        "ü´∂ –ö—Ç–æ –±—ã –º–æ–≥ –ø–æ–¥—É–º–∞—Ç—å! {a} –∏ {b} ‚Äî –ø–∞—Ä–∞ –¥–Ω—è!",
        "üíò –ê–º—É—Ä –ø–æ–ø–∞–ª —Ç–æ—á–Ω–æ –≤ —Ü–µ–ª—å! {a} –∏ {b} —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–µ üòç",
        "üíû –õ—é–±–æ–≤—å –≤–∏—Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ: {a} + {b} = ‚ù§Ô∏è",
    ]
    msg = random.choice(lines).format(a=user_display(a), b=user_display(b))
    await context.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="HTML")


# ===================== –°–í–ê–î–¨–ë–´ =====================
# /love @user ‚Äî –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
# /acceptlove ‚Äî –ø—Ä–∏–Ω—è—Ç—å
# /declinelove ‚Äî –æ—Ç–∫–ª–æ–Ω–∏—Ç—å
# /divorce ‚Äî –∑–∞–ø—Ä–æ—Å —Ä–∞–∑–≤–æ–¥–∞ (–Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ /acceptdivorce)

async def love(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏, –∫–æ–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: /love @username")
        return
    target_username = context.args[0].lstrip("@")
    # –Ω–∞–π–¥—ë–º user_id –ø–æ –ø—Ä–æ—Ñ–∏–ª—è–º (–ø–æ name —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –≤—Å–µ–≥–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç username ‚Äî —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å)
    # –ø—Ä–∏–º–µ–º —Ä–µ—à–µ–Ω–∏–µ: –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—é–±–æ–º—É, —É –∫–æ–≥–æ –≤ –∏–º–µ–Ω–∏ –µ—Å—Ç—å —ç—Ç–æ—Ç —é–∑–µ—Ä–Ω–µ–π–º
    target_id = None
    for uid, u in state["users"].items():
        # –∏–º—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –≤–∏–¥–µ mention_html, username –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—è–≤–µ–Ω, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–±—É–µ–º –ø–æ uid
        if u.get("name") and target_username in u.get("name"):
            target_id = int(uid)
            break

    if not target_id:
        await update.message.reply_text("–ù–µ –Ω–∞—à–ª–∞ —É—á–∞—Å—Ç–Ω–∏—Ü—É —Å —Ç–∞–∫–∏–º username –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö. –ü–æ–ø—Ä–æ—Å–∏ –µ—ë —Å–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞—Ç—å /editprofile.")
        return

    proposer = update.effective_user.id
    ensure_user(proposer)
    ensure_user(target_id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ –≤ –±—Ä–∞–∫–µ –ª–∏ —É–∂–µ?
    if state["users"][str(proposer)].get("married_to"):
        await update.message.reply_text("–¢—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ üíç")
        return
    if state["users"][str(target_id)].get("married_to"):
        await update.message.reply_text("–£—á–∞—Å—Ç–Ω–∏—Ü–∞ —É–∂–µ –≤ –±—Ä–∞–∫–µ üíç")
        return

    # –°–æ–∑–¥–∞—ë–º –∑–∞–ø—Ä–æ—Å
    state["proposals"][str(target_id)] = proposer
    save_state()
    await context.bot.send_message(
        chat_id=CHAT_ID,
        text=f"üíç {update.effective_user.mention_html()} —Å–¥–µ–ª–∞–ª–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ @{target_username}! "
             f"–û—Ç–≤–µ—Ç ‚Äî –∫–æ–º–∞–Ω–¥–∞ /acceptlove –∏–ª–∏ /declinelove",
        parse_mode="HTML"
    )


async def acceptlove(update: Update, context: ContextTypes.DEFAULT_TYPE):
    target_id = str(update.effective_user.id)
    if target_id not in state["proposals"]:
        await update.message.reply_text("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ–±—è.")
        return
    proposer = state["proposals"].pop(target_id)
    ensure_user(proposer)
    ensure_user(int(target_id))

    # –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å—ã –±—Ä–∞–∫–∞
    pa = state["users"][str(proposer)]
    pb = state["users"][target_id]
    pa["married_to"] = user_display(int(target_id))
    pb["married_to"] = user_display(proposer)
    save_state()

    lines = [
        "üíç {a} –∏ {b} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∂–µ–Ω–∞ –∏ –∂–µ–Ω–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ",
        "üë∞‚Äç‚ôÄÔ∏èüë∞‚Äç‚ôÄÔ∏è –°—ã–≥—Ä–∞–ª–∏ —Å–≤–∞–¥—å–±—É: {a} + {b} = üíí –õ—é–±–æ–≤—å!",
        "ü•Ç –ü–æ—è–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è —Å–µ–º–µ–π–Ω–∞—è –ø–∞—Ä–∞: {a} & {b}! –ü—É—Å—Ç—å –±—É–¥–µ—Ç —Å—á–∞—Å—Ç—å–µ! ü´∂",
        "üéä {a} –∏ {b} —Ç–µ–ø–µ—Ä—å —Å—É–ø—Ä—É–≥–∏ –≤ –Ω–∞—à–µ–º –∫–ª–∞–Ω–µ! –ù–µ–∂–Ω–æ—Å—Ç–∏ –∏ –æ–±–Ω–∏–º–∞—à–µ–∫! ü•∞",
    ]
    msg = random.choice(lines).format(a=user_display(proposer), b=user_display(int(target_id)))
    await context.bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="HTML")


async def declinelove(update: Update, context: ContextTypes.DEFAULT_TYPE):
    target_id = str(update.effective_user.id)
    if target_id not in state["proposals"]:
        await update.message.reply_text("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ–±—è.")
        return
    state["proposals"].pop(target_id)
    save_state()
    await update.message.reply_text("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.")


async def divorce(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    ensure_user(update.effective_user.id)
    me = state["users"][uid]
    if not me.get("married_to"):
        await update.message.reply_text("–¢—ã –Ω–µ –≤ –±—Ä–∞–∫–µ.")
        return

    # –ù–∞–π–¥—ë–º –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –ø–æ –∏–º–µ–Ω–∏ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–∞–∫ —Ç–µ–∫—Å—Ç)
    partner_id = None
    for pid, u in state["users"].items():
        if u.get("name") and me["married_to"] == u.get("name"):
            partner_id = int(pid)
            break
    if not partner_id:
        await update.message.reply_text("–ù–µ –Ω–∞—à–ª–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∫—É –≤ –±–∞–∑–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∞–º.")
        return

    state["divorce_requests"][str(partner_id)] = int(uid)
    save_state()
    await update.message.reply_text("–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ü–∞—Ä—Ç–Ω—ë—Ä–∫–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å /acceptdivorce.")


async def acceptdivorce(update: Update, context: ContextTypes.DEFAULT_TYPE):
    me = str(update.effective_user.id)
    if me not in state["divorce_requests"]:
        await update.message.reply_text("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞–∑–≤–æ–¥.")
        return
    other = state["divorce_requests"].pop(me)
    # –°–±—Ä–æ—Å –±—Ä–∞–∫–∞ —É –æ–±–µ–∏—Ö
    if str(other) in state["users"]:
        state["users"][str(other)]["married_to"] = None
    if me in state["users"]:
        state["users"][me]["married_to"] = None
    save_state()
    await context.bot.send_message(
        chat_id=CHAT_ID,
        text=f"üíî –†–∞–∑–≤–æ–¥! {user_display(other)} –∏ {user_display(int(me))} —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å.",
        parse_mode="HTML"
    )


# ===================== /predskaz –ê–õ–¨–Ø–° =====================
async def prediction(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –±—É–¥–µ—Ç –∑–≤–∞—Ç—å /prediction
    await predskaz(update, context)


# ===================== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –•–ï–ù–î–õ–ï–†–û–í =====================
def build_application():
    app = ApplicationBuilder().token(TOKEN).build()

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö
    app.add_handler(ChatMemberHandler(greet_new_member, ChatMemberHandler.CHAT_MEMBER))

    # –ü—Ä–æ—Ñ–∏–ª—å
    edit_conv = ConversationHandler(
        entry_points=[CommandHandler("editprofile", editprofile)],
        states={
            STEP_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_name)],
            STEP_NICK: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_nick)],
            STEP_UID: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_uid)],
            STEP_BDAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_bday)],
            STEP_CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_city)],
            STEP_SOCIAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_social)],
            STEP_JOINED: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_joined)],
            STEP_QUOTE: [MessageHandler(filters.TEXT & ~filters.COMMAND, step_quote)],
        },
        fallbacks=[],
    )
    app.add_handler(edit_conv)
    app.add_handler(CommandHandler("profile", profile))

    # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about))
    app.add_handler(CommandHandler("rules", rules))

    # –§–∞–Ω
    app.add_handler(CommandHandler("pipisa", pipisa))
    app.add_handler(CommandHandler("top5", top5))
    app.add_handler(CommandHandler("rating", rating))
    app.add_handler(CommandHandler("hugs", hugs))
    app.add_handler(CommandHandler("lesbi", lesbi))

    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∏ —Ç–∞—Ä–æ
    app.add_handler(CommandHandler("predskaz", predskaz))
    app.add_handler(CommandHandler("prediction", prediction))  # –∞–ª–∏–∞—Å
    app.add_handler(CommandHandler("tarot", tarot))

    # –°–≤–∞–¥—å–±—ã/—Ä–∞–∑–≤–æ–¥—ã
    app.add_handler(CommandHandler("love", love))
    app.add_handler(CommandHandler("acceptlove", acceptlove))
    app.add_handler(CommandHandler("declinelove", declinelove))
    app.add_handler(CommandHandler("divorce", divorce))
    app.add_handler(CommandHandler("acceptdivorce", acceptdivorce))

    return app


# ===================== –ó–ê–ü–£–°–ö =====================
if __name__ == "__main__":
    application = build_application()
    print("OnlyGirls bot –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    application.run_polling(close_loop=False)
